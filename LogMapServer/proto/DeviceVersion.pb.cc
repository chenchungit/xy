// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DeviceVersion.proto

#include "DeviceVersion.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_DeviceVersion_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DeviceVersion_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VersionParam;
}  // namespace protobuf_DeviceVersion_2eproto
namespace NetProtocol {
class VersionParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VersionParam>
      _instance;
} _VersionParam_default_instance_;
class DeviceVersionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceVersionRequest>
      _instance;
} _DeviceVersionRequest_default_instance_;
class DeviceVersionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceVersionResponse>
      _instance;
} _DeviceVersionResponse_default_instance_;
}  // namespace NetProtocol
namespace protobuf_DeviceVersion_2eproto {
static void InitDefaultsVersionParam() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProtocol::_VersionParam_default_instance_;
    new (ptr) ::NetProtocol::VersionParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProtocol::VersionParam::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VersionParam =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVersionParam}, {}};

static void InitDefaultsDeviceVersionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProtocol::_DeviceVersionRequest_default_instance_;
    new (ptr) ::NetProtocol::DeviceVersionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProtocol::DeviceVersionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeviceVersionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeviceVersionRequest}, {
      &protobuf_DeviceVersion_2eproto::scc_info_VersionParam.base,}};

static void InitDefaultsDeviceVersionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::NetProtocol::_DeviceVersionResponse_default_instance_;
    new (ptr) ::NetProtocol::DeviceVersionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetProtocol::DeviceVersionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeviceVersionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeviceVersionResponse}, {
      &protobuf_DeviceVersion_2eproto::scc_info_VersionParam.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_VersionParam.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceVersionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceVersionResponse.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProtocol::VersionParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProtocol::VersionParam, describeflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProtocol::VersionParam, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProtocol::VersionParam, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProtocol::VersionParam, maxlenght_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProtocol::DeviceVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProtocol::DeviceVersionRequest, versionparamrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProtocol::DeviceVersionRequest, devmac_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProtocol::DeviceVersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProtocol::DeviceVersionResponse, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProtocol::DeviceVersionResponse, versionparamrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProtocol::DeviceVersionResponse, filedata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetProtocol::DeviceVersionResponse, isend_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::NetProtocol::VersionParam)},
  { 9, -1, sizeof(::NetProtocol::DeviceVersionRequest)},
  { 16, -1, sizeof(::NetProtocol::DeviceVersionResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProtocol::_VersionParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProtocol::_DeviceVersionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NetProtocol::_DeviceVersionResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "DeviceVersion.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023DeviceVersion.proto\022\013NetProtocol\"V\n\014Ve"
      "rsionParam\022\024\n\014describeFlag\030\001 \001(\t\022\r\n\005inde"
      "x\030\002 \001(\005\022\016\n\006offset\030\003 \001(\005\022\021\n\tMaxLenght\030\004 \001"
      "(\005\"^\n\024DeviceVersionRequest\0226\n\023VersionPar"
      "amRequest\030\001 \001(\0132\031.NetProtocol.VersionPar"
      "am\022\016\n\006DevMac\030\002 \001(\t\"\232\001\n\025DeviceVersionResp"
      "onse\022(\n\005State\030\001 \001(\0162\031.NetProtocol.Versio"
      "nState\0226\n\023VersionParamRequest\030\002 \001(\0132\031.Ne"
      "tProtocol.VersionParam\022\020\n\010FileData\030\003 \001(\014"
      "\022\r\n\005isEnd\030\004 \001(\010*l\n\rDeviceVersion\022\034\n\030D2S_"
      "VERSION_FILE_DEIFINE\020\000\022\035\n\030D2S_VERSION_FI"
      "LE_REQUEST\020\320\017\022\036\n\031S2D_VERSION_FILE_RESPON"
      "SE\020\270\027*A\n\014VersionState\022\031\n\025VERSION_STATE_S"
      "UCCESS\020\000\022\026\n\022VERSION_STATE_FAIL\020\001B\002H\001b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 564);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DeviceVersion.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_DeviceVersion_2eproto
namespace NetProtocol {
const ::google::protobuf::EnumDescriptor* DeviceVersion_descriptor() {
  protobuf_DeviceVersion_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceVersion_2eproto::file_level_enum_descriptors[0];
}
bool DeviceVersion_IsValid(int value) {
  switch (value) {
    case 0:
    case 2000:
    case 3000:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VersionState_descriptor() {
  protobuf_DeviceVersion_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceVersion_2eproto::file_level_enum_descriptors[1];
}
bool VersionState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void VersionParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VersionParam::kDescribeFlagFieldNumber;
const int VersionParam::kIndexFieldNumber;
const int VersionParam::kOffsetFieldNumber;
const int VersionParam::kMaxLenghtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VersionParam::VersionParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DeviceVersion_2eproto::scc_info_VersionParam.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProtocol.VersionParam)
}
VersionParam::VersionParam(const VersionParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  describeflag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.describeflag().size() > 0) {
    describeflag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describeflag_);
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxlenght_) -
    reinterpret_cast<char*>(&index_)) + sizeof(maxlenght_));
  // @@protoc_insertion_point(copy_constructor:NetProtocol.VersionParam)
}

void VersionParam::SharedCtor() {
  describeflag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxlenght_) -
      reinterpret_cast<char*>(&index_)) + sizeof(maxlenght_));
}

VersionParam::~VersionParam() {
  // @@protoc_insertion_point(destructor:NetProtocol.VersionParam)
  SharedDtor();
}

void VersionParam::SharedDtor() {
  describeflag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VersionParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VersionParam::descriptor() {
  ::protobuf_DeviceVersion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DeviceVersion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VersionParam& VersionParam::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_DeviceVersion_2eproto::scc_info_VersionParam.base);
  return *internal_default_instance();
}


void VersionParam::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProtocol.VersionParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  describeflag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxlenght_) -
      reinterpret_cast<char*>(&index_)) + sizeof(maxlenght_));
  _internal_metadata_.Clear();
}

bool VersionParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProtocol.VersionParam)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string describeFlag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_describeflag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->describeflag().data(), static_cast<int>(this->describeflag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProtocol.VersionParam.describeFlag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MaxLenght = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxlenght_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProtocol.VersionParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProtocol.VersionParam)
  return false;
#undef DO_
}

void VersionParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProtocol.VersionParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string describeFlag = 1;
  if (this->describeflag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->describeflag().data(), static_cast<int>(this->describeflag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProtocol.VersionParam.describeFlag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->describeflag(), output);
  }

  // int32 index = 2;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }

  // int32 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->offset(), output);
  }

  // int32 MaxLenght = 4;
  if (this->maxlenght() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->maxlenght(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProtocol.VersionParam)
}

::google::protobuf::uint8* VersionParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProtocol.VersionParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string describeFlag = 1;
  if (this->describeflag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->describeflag().data(), static_cast<int>(this->describeflag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProtocol.VersionParam.describeFlag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->describeflag(), target);
  }

  // int32 index = 2;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }

  // int32 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->offset(), target);
  }

  // int32 MaxLenght = 4;
  if (this->maxlenght() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->maxlenght(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProtocol.VersionParam)
  return target;
}

size_t VersionParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProtocol.VersionParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string describeFlag = 1;
  if (this->describeflag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describeflag());
  }

  // int32 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  // int32 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  // int32 MaxLenght = 4;
  if (this->maxlenght() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxlenght());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VersionParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProtocol.VersionParam)
  GOOGLE_DCHECK_NE(&from, this);
  const VersionParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VersionParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProtocol.VersionParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProtocol.VersionParam)
    MergeFrom(*source);
  }
}

void VersionParam::MergeFrom(const VersionParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProtocol.VersionParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.describeflag().size() > 0) {

    describeflag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describeflag_);
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.maxlenght() != 0) {
    set_maxlenght(from.maxlenght());
  }
}

void VersionParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProtocol.VersionParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionParam::CopyFrom(const VersionParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProtocol.VersionParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionParam::IsInitialized() const {
  return true;
}

void VersionParam::Swap(VersionParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VersionParam::InternalSwap(VersionParam* other) {
  using std::swap;
  describeflag_.Swap(&other->describeflag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_, other->index_);
  swap(offset_, other->offset_);
  swap(maxlenght_, other->maxlenght_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VersionParam::GetMetadata() const {
  protobuf_DeviceVersion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DeviceVersion_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceVersionRequest::InitAsDefaultInstance() {
  ::NetProtocol::_DeviceVersionRequest_default_instance_._instance.get_mutable()->versionparamrequest_ = const_cast< ::NetProtocol::VersionParam*>(
      ::NetProtocol::VersionParam::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceVersionRequest::kVersionParamRequestFieldNumber;
const int DeviceVersionRequest::kDevMacFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceVersionRequest::DeviceVersionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DeviceVersion_2eproto::scc_info_DeviceVersionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProtocol.DeviceVersionRequest)
}
DeviceVersionRequest::DeviceVersionRequest(const DeviceVersionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  devmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.devmac().size() > 0) {
    devmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devmac_);
  }
  if (from.has_versionparamrequest()) {
    versionparamrequest_ = new ::NetProtocol::VersionParam(*from.versionparamrequest_);
  } else {
    versionparamrequest_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NetProtocol.DeviceVersionRequest)
}

void DeviceVersionRequest::SharedCtor() {
  devmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  versionparamrequest_ = NULL;
}

DeviceVersionRequest::~DeviceVersionRequest() {
  // @@protoc_insertion_point(destructor:NetProtocol.DeviceVersionRequest)
  SharedDtor();
}

void DeviceVersionRequest::SharedDtor() {
  devmac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete versionparamrequest_;
}

void DeviceVersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceVersionRequest::descriptor() {
  ::protobuf_DeviceVersion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DeviceVersion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceVersionRequest& DeviceVersionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_DeviceVersion_2eproto::scc_info_DeviceVersionRequest.base);
  return *internal_default_instance();
}


void DeviceVersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProtocol.DeviceVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devmac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && versionparamrequest_ != NULL) {
    delete versionparamrequest_;
  }
  versionparamrequest_ = NULL;
  _internal_metadata_.Clear();
}

bool DeviceVersionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProtocol.DeviceVersionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProtocol.VersionParam VersionParamRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_versionparamrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DevMac = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devmac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->devmac().data(), static_cast<int>(this->devmac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetProtocol.DeviceVersionRequest.DevMac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProtocol.DeviceVersionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProtocol.DeviceVersionRequest)
  return false;
#undef DO_
}

void DeviceVersionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProtocol.DeviceVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProtocol.VersionParam VersionParamRequest = 1;
  if (this->has_versionparamrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_versionparamrequest(), output);
  }

  // string DevMac = 2;
  if (this->devmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devmac().data(), static_cast<int>(this->devmac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProtocol.DeviceVersionRequest.DevMac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->devmac(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProtocol.DeviceVersionRequest)
}

::google::protobuf::uint8* DeviceVersionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProtocol.DeviceVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProtocol.VersionParam VersionParamRequest = 1;
  if (this->has_versionparamrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_versionparamrequest(), deterministic, target);
  }

  // string DevMac = 2;
  if (this->devmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devmac().data(), static_cast<int>(this->devmac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetProtocol.DeviceVersionRequest.DevMac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->devmac(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProtocol.DeviceVersionRequest)
  return target;
}

size_t DeviceVersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProtocol.DeviceVersionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string DevMac = 2;
  if (this->devmac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devmac());
  }

  // .NetProtocol.VersionParam VersionParamRequest = 1;
  if (this->has_versionparamrequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *versionparamrequest_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceVersionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProtocol.DeviceVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceVersionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceVersionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProtocol.DeviceVersionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProtocol.DeviceVersionRequest)
    MergeFrom(*source);
  }
}

void DeviceVersionRequest::MergeFrom(const DeviceVersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProtocol.DeviceVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.devmac().size() > 0) {

    devmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devmac_);
  }
  if (from.has_versionparamrequest()) {
    mutable_versionparamrequest()->::NetProtocol::VersionParam::MergeFrom(from.versionparamrequest());
  }
}

void DeviceVersionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProtocol.DeviceVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceVersionRequest::CopyFrom(const DeviceVersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProtocol.DeviceVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceVersionRequest::IsInitialized() const {
  return true;
}

void DeviceVersionRequest::Swap(DeviceVersionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceVersionRequest::InternalSwap(DeviceVersionRequest* other) {
  using std::swap;
  devmac_.Swap(&other->devmac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(versionparamrequest_, other->versionparamrequest_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceVersionRequest::GetMetadata() const {
  protobuf_DeviceVersion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DeviceVersion_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceVersionResponse::InitAsDefaultInstance() {
  ::NetProtocol::_DeviceVersionResponse_default_instance_._instance.get_mutable()->versionparamrequest_ = const_cast< ::NetProtocol::VersionParam*>(
      ::NetProtocol::VersionParam::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceVersionResponse::kStateFieldNumber;
const int DeviceVersionResponse::kVersionParamRequestFieldNumber;
const int DeviceVersionResponse::kFileDataFieldNumber;
const int DeviceVersionResponse::kIsEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceVersionResponse::DeviceVersionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DeviceVersion_2eproto::scc_info_DeviceVersionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetProtocol.DeviceVersionResponse)
}
DeviceVersionResponse::DeviceVersionResponse(const DeviceVersionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filedata().size() > 0) {
    filedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filedata_);
  }
  if (from.has_versionparamrequest()) {
    versionparamrequest_ = new ::NetProtocol::VersionParam(*from.versionparamrequest_);
  } else {
    versionparamrequest_ = NULL;
  }
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&isend_) -
    reinterpret_cast<char*>(&state_)) + sizeof(isend_));
  // @@protoc_insertion_point(copy_constructor:NetProtocol.DeviceVersionResponse)
}

void DeviceVersionResponse::SharedCtor() {
  filedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&versionparamrequest_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isend_) -
      reinterpret_cast<char*>(&versionparamrequest_)) + sizeof(isend_));
}

DeviceVersionResponse::~DeviceVersionResponse() {
  // @@protoc_insertion_point(destructor:NetProtocol.DeviceVersionResponse)
  SharedDtor();
}

void DeviceVersionResponse::SharedDtor() {
  filedata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete versionparamrequest_;
}

void DeviceVersionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceVersionResponse::descriptor() {
  ::protobuf_DeviceVersion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DeviceVersion_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceVersionResponse& DeviceVersionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_DeviceVersion_2eproto::scc_info_DeviceVersionResponse.base);
  return *internal_default_instance();
}


void DeviceVersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NetProtocol.DeviceVersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && versionparamrequest_ != NULL) {
    delete versionparamrequest_;
  }
  versionparamrequest_ = NULL;
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isend_) -
      reinterpret_cast<char*>(&state_)) + sizeof(isend_));
  _internal_metadata_.Clear();
}

bool DeviceVersionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetProtocol.DeviceVersionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetProtocol.VersionState State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::NetProtocol::VersionState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NetProtocol.VersionParam VersionParamRequest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_versionparamrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes FileData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_filedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isEnd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetProtocol.DeviceVersionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetProtocol.DeviceVersionResponse)
  return false;
#undef DO_
}

void DeviceVersionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetProtocol.DeviceVersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProtocol.VersionState State = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // .NetProtocol.VersionParam VersionParamRequest = 2;
  if (this->has_versionparamrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_versionparamrequest(), output);
  }

  // bytes FileData = 3;
  if (this->filedata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->filedata(), output);
  }

  // bool isEnd = 4;
  if (this->isend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isend(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetProtocol.DeviceVersionResponse)
}

::google::protobuf::uint8* DeviceVersionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetProtocol.DeviceVersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetProtocol.VersionState State = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // .NetProtocol.VersionParam VersionParamRequest = 2;
  if (this->has_versionparamrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_versionparamrequest(), deterministic, target);
  }

  // bytes FileData = 3;
  if (this->filedata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->filedata(), target);
  }

  // bool isEnd = 4;
  if (this->isend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->isend(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetProtocol.DeviceVersionResponse)
  return target;
}

size_t DeviceVersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetProtocol.DeviceVersionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes FileData = 3;
  if (this->filedata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->filedata());
  }

  // .NetProtocol.VersionParam VersionParamRequest = 2;
  if (this->has_versionparamrequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *versionparamrequest_);
  }

  // .NetProtocol.VersionState State = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // bool isEnd = 4;
  if (this->isend() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceVersionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetProtocol.DeviceVersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceVersionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceVersionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetProtocol.DeviceVersionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetProtocol.DeviceVersionResponse)
    MergeFrom(*source);
  }
}

void DeviceVersionResponse::MergeFrom(const DeviceVersionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetProtocol.DeviceVersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filedata().size() > 0) {

    filedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filedata_);
  }
  if (from.has_versionparamrequest()) {
    mutable_versionparamrequest()->::NetProtocol::VersionParam::MergeFrom(from.versionparamrequest());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.isend() != 0) {
    set_isend(from.isend());
  }
}

void DeviceVersionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetProtocol.DeviceVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceVersionResponse::CopyFrom(const DeviceVersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetProtocol.DeviceVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceVersionResponse::IsInitialized() const {
  return true;
}

void DeviceVersionResponse::Swap(DeviceVersionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceVersionResponse::InternalSwap(DeviceVersionResponse* other) {
  using std::swap;
  filedata_.Swap(&other->filedata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(versionparamrequest_, other->versionparamrequest_);
  swap(state_, other->state_);
  swap(isend_, other->isend_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceVersionResponse::GetMetadata() const {
  protobuf_DeviceVersion_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DeviceVersion_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NetProtocol
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProtocol::VersionParam* Arena::CreateMaybeMessage< ::NetProtocol::VersionParam >(Arena* arena) {
  return Arena::CreateInternal< ::NetProtocol::VersionParam >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProtocol::DeviceVersionRequest* Arena::CreateMaybeMessage< ::NetProtocol::DeviceVersionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::NetProtocol::DeviceVersionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NetProtocol::DeviceVersionResponse* Arena::CreateMaybeMessage< ::NetProtocol::DeviceVersionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::NetProtocol::DeviceVersionResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
