// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerProtocol.proto

#include "ServerProtocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ServerProtocol_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CardRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CardsAreaDeviceContrast;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CountryCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DevTypeCribe;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Developer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeviceAlarm;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeviceAlarmProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeviceDescribeInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeviceHeartRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FolderTree;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FolderUpRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FrameUserInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GwDeviceBindTemp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HmRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_JgPushRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_KeyShareRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ManagersRoleContrast;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NoCreditEquip;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SAppRoleContrastInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SAppRoleFun;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SAppRoleFunBaseInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SAppRoleType;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SAreaDeviceinfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SAreaUseRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SAreabaseinfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SBuildPsw;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SDevFetNickName;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SDeviceBaseinfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SDeviceFet;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SDeviceGroup;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SDevicePassword;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SDeviceProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SEleSendRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SGWDeviceContrast;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SItemInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SMechanism;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SPswKeyRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SPswSendRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SRoleDeviceRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SRoleType;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SRoleinfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SToolAuthority;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SUseRecord;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SUserinfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TypeApiContrast;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Version;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VersionRangle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ServerProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WebInterface;
}  // namespace protobuf_ServerProtocol_2eproto
namespace ServerProtocol {
class SystemCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SystemCode>
      _instance;
} _SystemCode_default_instance_;
class H2SRequeseDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<H2SRequeseData>
      _instance;
} _H2SRequeseData_default_instance_;
class SFrameDeviceHeartRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameDeviceHeartRecord>
      _instance;
} _SFrameDeviceHeartRecord_default_instance_;
class DeviceHeartRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceHeartRecord>
      _instance;
} _DeviceHeartRecord_default_instance_;
class SFrameHmRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameHmRecord>
      _instance;
} _SFrameHmRecord_default_instance_;
class HmRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HmRecord>
      _instance;
} _HmRecord_default_instance_;
class SFrameFirmwareVersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameFirmwareVersion>
      _instance;
} _SFrameFirmwareVersion_default_instance_;
class SFrameFirmwareVersionAnswerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameFirmwareVersionAnswer>
      _instance;
} _SFrameFirmwareVersionAnswer_default_instance_;
class SFrameNBAIOTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameNBAIOT>
      _instance;
} _SFrameNBAIOT_default_instance_;
class SFrameNBAIOTAnswerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameNBAIOTAnswer>
      _instance;
} _SFrameNBAIOTAnswer_default_instance_;
class SFrameNBWhiteListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameNBWhiteList>
      _instance;
} _SFrameNBWhiteList_default_instance_;
class SFrameNBWhiteListAnswerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameNBWhiteListAnswer>
      _instance;
} _SFrameNBWhiteListAnswer_default_instance_;
class SFrameFaceRecognitionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameFaceRecognition>
      _instance;
} _SFrameFaceRecognition_default_instance_;
class SFrameFaceRecognitionAnswerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameFaceRecognitionAnswer>
      _instance;
} _SFrameFaceRecognitionAnswer_default_instance_;
class SFrameJgPushRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameJgPushRecord>
      _instance;
} _SFrameJgPushRecord_default_instance_;
class JgPushRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JgPushRecord>
      _instance;
} _JgPushRecord_default_instance_;
class SFrameVersionRangleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameVersionRangle>
      _instance;
} _SFrameVersionRangle_default_instance_;
class VersionRangleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VersionRangle>
      _instance;
} _VersionRangle_default_instance_;
class SFrameVersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameVersion>
      _instance;
} _SFrameVersion_default_instance_;
class VersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Version>
      _instance;
} _Version_default_instance_;
class SFrameNoCreditEquipDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameNoCreditEquip>
      _instance;
} _SFrameNoCreditEquip_default_instance_;
class NoCreditEquipDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NoCreditEquip>
      _instance;
} _NoCreditEquip_default_instance_;
class SFrameKeyShareRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameKeyShareRecord>
      _instance;
} _SFrameKeyShareRecord_default_instance_;
class KeyShareRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyShareRecord>
      _instance;
} _KeyShareRecord_default_instance_;
class SFrameDevTypeCribeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameDevTypeCribe>
      _instance;
} _SFrameDevTypeCribe_default_instance_;
class DevTypeCribeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DevTypeCribe>
      _instance;
} _DevTypeCribe_default_instance_;
class SFrameCountryCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameCountryCode>
      _instance;
} _SFrameCountryCode_default_instance_;
class CountryCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CountryCode>
      _instance;
} _CountryCode_default_instance_;
class SFrameDeveloperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameDeveloper>
      _instance;
} _SFrameDeveloper_default_instance_;
class DeveloperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Developer>
      _instance;
} _Developer_default_instance_;
class SFrameWebInterfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameWebInterface>
      _instance;
} _SFrameWebInterface_default_instance_;
class WebInterfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WebInterface>
      _instance;
} _WebInterface_default_instance_;
class SFrameTypeApiContrastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameTypeApiContrast>
      _instance;
} _SFrameTypeApiContrast_default_instance_;
class TypeApiContrastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TypeApiContrast>
      _instance;
} _TypeApiContrast_default_instance_;
class SFrameCardsAreaDeviceContrastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameCardsAreaDeviceContrast>
      _instance;
} _SFrameCardsAreaDeviceContrast_default_instance_;
class CardsAreaDeviceContrastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CardsAreaDeviceContrast>
      _instance;
} _CardsAreaDeviceContrast_default_instance_;
class SFrameCardRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameCardRecord>
      _instance;
} _SFrameCardRecord_default_instance_;
class CardRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CardRecord>
      _instance;
} _CardRecord_default_instance_;
class SFrameManagersRoleContrastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameManagersRoleContrast>
      _instance;
} _SFrameManagersRoleContrast_default_instance_;
class ManagersRoleContrastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ManagersRoleContrast>
      _instance;
} _ManagersRoleContrast_default_instance_;
class SFrameFolderUpRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameFolderUpRecord>
      _instance;
} _SFrameFolderUpRecord_default_instance_;
class FolderUpRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FolderUpRecord>
      _instance;
} _FolderUpRecord_default_instance_;
class SFrameFolderTreeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameFolderTree>
      _instance;
} _SFrameFolderTree_default_instance_;
class FolderTreeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FolderTree>
      _instance;
} _FolderTree_default_instance_;
class SFrameDeviceAlarmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameDeviceAlarm>
      _instance;
} _SFrameDeviceAlarm_default_instance_;
class DeviceAlarmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceAlarm>
      _instance;
} _DeviceAlarm_default_instance_;
class SFrameDeviceAlarmPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameDeviceAlarmProperty>
      _instance;
} _SFrameDeviceAlarmProperty_default_instance_;
class DeviceAlarmPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceAlarmProperty>
      _instance;
} _DeviceAlarmProperty_default_instance_;
class SFrameGwDeviceBindTempDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameGwDeviceBindTemp>
      _instance;
} _SFrameGwDeviceBindTemp_default_instance_;
class GwDeviceBindTempDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GwDeviceBindTemp>
      _instance;
} _GwDeviceBindTemp_default_instance_;
class SFrameDeviceDescribeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameDeviceDescribeInfo>
      _instance;
} _SFrameDeviceDescribeInfo_default_instance_;
class DeviceDescribeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceDescribeInfo>
      _instance;
} _DeviceDescribeInfo_default_instance_;
class SystemJGPushDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SystemJGPush>
      _instance;
} _SystemJGPush_default_instance_;
class FrameRegisterServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FrameRegisterServer>
      _instance;
} _FrameRegisterServer_default_instance_;
class FrameRegisterServerAnswerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FrameRegisterServerAnswer>
      _instance;
} _FrameRegisterServerAnswer_default_instance_;
class FrameUserInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FrameUserInfo>
      _instance;
} _FrameUserInfo_default_instance_;
class SFrameGWDeviceContrastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameGWDeviceContrast>
      _instance;
} _SFrameGWDeviceContrast_default_instance_;
class SGWDeviceContrastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SGWDeviceContrast>
      _instance;
} _SGWDeviceContrast_default_instance_;
class SFrameDeviceFetNickNameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameDeviceFetNickName>
      _instance;
} _SFrameDeviceFetNickName_default_instance_;
class SDevFetNickNameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SDevFetNickName>
      _instance;
} _SDevFetNickName_default_instance_;
class SFrameDeviceFetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameDeviceFet>
      _instance;
} _SFrameDeviceFet_default_instance_;
class SDeviceFetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SDeviceFet>
      _instance;
} _SDeviceFet_default_instance_;
class SFrameDevicePropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameDeviceProperty>
      _instance;
} _SFrameDeviceProperty_default_instance_;
class SDevicePropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SDeviceProperty>
      _instance;
} _SDeviceProperty_default_instance_;
class SFrameAppRoleContrastInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameAppRoleContrastInfo>
      _instance;
} _SFrameAppRoleContrastInfo_default_instance_;
class SAppRoleContrastInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SAppRoleContrastInfo>
      _instance;
} _SAppRoleContrastInfo_default_instance_;
class SFrameAppRoleFunBaseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameAppRoleFunBaseInfo>
      _instance;
} _SFrameAppRoleFunBaseInfo_default_instance_;
class SAppRoleFunBaseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SAppRoleFunBaseInfo>
      _instance;
} _SAppRoleFunBaseInfo_default_instance_;
class SFrameRoleDeviceRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameRoleDeviceRecord>
      _instance;
} _SFrameRoleDeviceRecord_default_instance_;
class SRoleDeviceRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SRoleDeviceRecord>
      _instance;
} _SRoleDeviceRecord_default_instance_;
class SFrameItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameItem>
      _instance;
} _SFrameItem_default_instance_;
class SItemInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SItemInfo>
      _instance;
} _SItemInfo_default_instance_;
class SFrameAppRoleTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameAppRoleType>
      _instance;
} _SFrameAppRoleType_default_instance_;
class SAppRoleTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SAppRoleType>
      _instance;
} _SAppRoleType_default_instance_;
class SFrameAppRoleFunDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameAppRoleFun>
      _instance;
} _SFrameAppRoleFun_default_instance_;
class SAppRoleFunDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SAppRoleFun>
      _instance;
} _SAppRoleFun_default_instance_;
class SFrameDeviceGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameDeviceGroup>
      _instance;
} _SFrameDeviceGroup_default_instance_;
class SDeviceGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SDeviceGroup>
      _instance;
} _SDeviceGroup_default_instance_;
class SFrameAreabaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameAreabase>
      _instance;
} _SFrameAreabase_default_instance_;
class SAreabaseinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SAreabaseinfo>
      _instance;
} _SAreabaseinfo_default_instance_;
class SFrameAreaDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameAreaDevice>
      _instance;
} _SFrameAreaDevice_default_instance_;
class SAreaDeviceinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SAreaDeviceinfo>
      _instance;
} _SAreaDeviceinfo_default_instance_;
class SFrameAreaUseRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameAreaUseRecord>
      _instance;
} _SFrameAreaUseRecord_default_instance_;
class SAreaUseRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SAreaUseRecord>
      _instance;
} _SAreaUseRecord_default_instance_;
class SFrameBuildPswDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameBuildPsw>
      _instance;
} _SFrameBuildPsw_default_instance_;
class SBuildPswDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SBuildPsw>
      _instance;
} _SBuildPsw_default_instance_;
class SFrameDeviceBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameDeviceBase>
      _instance;
} _SFrameDeviceBase_default_instance_;
class SDeviceBaseinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SDeviceBaseinfo>
      _instance;
} _SDeviceBaseinfo_default_instance_;
class SFrameDevicePasswordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFrameDevicePassword>
      _instance;
} _SFrameDevicePassword_default_instance_;
class SDevicePasswordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SDevicePassword>
      _instance;
} _SDevicePassword_default_instance_;
class SFramEleSendRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFramEleSendRecord>
      _instance;
} _SFramEleSendRecord_default_instance_;
class SEleSendRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SEleSendRecord>
      _instance;
} _SEleSendRecord_default_instance_;
class SFramMechanismDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFramMechanism>
      _instance;
} _SFramMechanism_default_instance_;
class SMechanismDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SMechanism>
      _instance;
} _SMechanism_default_instance_;
class SFramPswKeyRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFramPswKeyRecord>
      _instance;
} _SFramPswKeyRecord_default_instance_;
class SPswKeyRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SPswKeyRecord>
      _instance;
} _SPswKeyRecord_default_instance_;
class SFramPswSendRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFramPswSendRecord>
      _instance;
} _SFramPswSendRecord_default_instance_;
class SPswSendRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SPswSendRecord>
      _instance;
} _SPswSendRecord_default_instance_;
class SFramRoleinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFramRoleinfo>
      _instance;
} _SFramRoleinfo_default_instance_;
class SRoleinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SRoleinfo>
      _instance;
} _SRoleinfo_default_instance_;
class SFramRoleTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFramRoleType>
      _instance;
} _SFramRoleType_default_instance_;
class SRoleTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SRoleType>
      _instance;
} _SRoleType_default_instance_;
class SFramToolAuthorityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFramToolAuthority>
      _instance;
} _SFramToolAuthority_default_instance_;
class SToolAuthorityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SToolAuthority>
      _instance;
} _SToolAuthority_default_instance_;
class SFramUseRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFramUseRecord>
      _instance;
} _SFramUseRecord_default_instance_;
class SUseRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SUseRecord>
      _instance;
} _SUseRecord_default_instance_;
class SFramUserinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFramUserinfo>
      _instance;
} _SFramUserinfo_default_instance_;
class SUserinfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SUserinfo>
      _instance;
} _SUserinfo_default_instance_;
class SFramShareKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SFramShareKey>
      _instance;
} _SFramShareKey_default_instance_;
}  // namespace ServerProtocol
namespace protobuf_ServerProtocol_2eproto {
static void InitDefaultsSystemCode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SystemCode_default_instance_;
    new (ptr) ::ServerProtocol::SystemCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SystemCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SystemCode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSystemCode}, {}};

static void InitDefaultsH2SRequeseData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_H2SRequeseData_default_instance_;
    new (ptr) ::ServerProtocol::H2SRequeseData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::H2SRequeseData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_H2SRequeseData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsH2SRequeseData}, {}};

static void InitDefaultsSFrameDeviceHeartRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameDeviceHeartRecord_default_instance_;
    new (ptr) ::ServerProtocol::SFrameDeviceHeartRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameDeviceHeartRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameDeviceHeartRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameDeviceHeartRecord}, {
      &protobuf_ServerProtocol_2eproto::scc_info_DeviceHeartRecord.base,}};

static void InitDefaultsDeviceHeartRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_DeviceHeartRecord_default_instance_;
    new (ptr) ::ServerProtocol::DeviceHeartRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::DeviceHeartRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeviceHeartRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeviceHeartRecord}, {}};

static void InitDefaultsSFrameHmRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameHmRecord_default_instance_;
    new (ptr) ::ServerProtocol::SFrameHmRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameHmRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameHmRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameHmRecord}, {
      &protobuf_ServerProtocol_2eproto::scc_info_HmRecord.base,}};

static void InitDefaultsHmRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_HmRecord_default_instance_;
    new (ptr) ::ServerProtocol::HmRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::HmRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HmRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHmRecord}, {}};

static void InitDefaultsSFrameFirmwareVersion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameFirmwareVersion_default_instance_;
    new (ptr) ::ServerProtocol::SFrameFirmwareVersion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameFirmwareVersion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SFrameFirmwareVersion =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSFrameFirmwareVersion}, {}};

static void InitDefaultsSFrameFirmwareVersionAnswer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameFirmwareVersionAnswer_default_instance_;
    new (ptr) ::ServerProtocol::SFrameFirmwareVersionAnswer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameFirmwareVersionAnswer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SFrameFirmwareVersionAnswer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSFrameFirmwareVersionAnswer}, {}};

static void InitDefaultsSFrameNBAIOT() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameNBAIOT_default_instance_;
    new (ptr) ::ServerProtocol::SFrameNBAIOT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameNBAIOT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SFrameNBAIOT =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSFrameNBAIOT}, {}};

static void InitDefaultsSFrameNBAIOTAnswer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameNBAIOTAnswer_default_instance_;
    new (ptr) ::ServerProtocol::SFrameNBAIOTAnswer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameNBAIOTAnswer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SFrameNBAIOTAnswer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSFrameNBAIOTAnswer}, {}};

static void InitDefaultsSFrameNBWhiteList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameNBWhiteList_default_instance_;
    new (ptr) ::ServerProtocol::SFrameNBWhiteList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameNBWhiteList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SFrameNBWhiteList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSFrameNBWhiteList}, {}};

static void InitDefaultsSFrameNBWhiteListAnswer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameNBWhiteListAnswer_default_instance_;
    new (ptr) ::ServerProtocol::SFrameNBWhiteListAnswer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameNBWhiteListAnswer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SFrameNBWhiteListAnswer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSFrameNBWhiteListAnswer}, {}};

static void InitDefaultsSFrameFaceRecognition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameFaceRecognition_default_instance_;
    new (ptr) ::ServerProtocol::SFrameFaceRecognition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameFaceRecognition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SFrameFaceRecognition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSFrameFaceRecognition}, {}};

static void InitDefaultsSFrameFaceRecognitionAnswer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameFaceRecognitionAnswer_default_instance_;
    new (ptr) ::ServerProtocol::SFrameFaceRecognitionAnswer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameFaceRecognitionAnswer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SFrameFaceRecognitionAnswer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSFrameFaceRecognitionAnswer}, {}};

static void InitDefaultsSFrameJgPushRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameJgPushRecord_default_instance_;
    new (ptr) ::ServerProtocol::SFrameJgPushRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameJgPushRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameJgPushRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameJgPushRecord}, {
      &protobuf_ServerProtocol_2eproto::scc_info_JgPushRecord.base,}};

static void InitDefaultsJgPushRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_JgPushRecord_default_instance_;
    new (ptr) ::ServerProtocol::JgPushRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::JgPushRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_JgPushRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJgPushRecord}, {}};

static void InitDefaultsSFrameVersionRangle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameVersionRangle_default_instance_;
    new (ptr) ::ServerProtocol::SFrameVersionRangle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameVersionRangle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameVersionRangle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameVersionRangle}, {
      &protobuf_ServerProtocol_2eproto::scc_info_VersionRangle.base,}};

static void InitDefaultsVersionRangle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_VersionRangle_default_instance_;
    new (ptr) ::ServerProtocol::VersionRangle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::VersionRangle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VersionRangle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVersionRangle}, {}};

static void InitDefaultsSFrameVersion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameVersion_default_instance_;
    new (ptr) ::ServerProtocol::SFrameVersion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameVersion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameVersion =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameVersion}, {
      &protobuf_ServerProtocol_2eproto::scc_info_Version.base,}};

static void InitDefaultsVersion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_Version_default_instance_;
    new (ptr) ::ServerProtocol::Version();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::Version::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Version =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVersion}, {}};

static void InitDefaultsSFrameNoCreditEquip() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameNoCreditEquip_default_instance_;
    new (ptr) ::ServerProtocol::SFrameNoCreditEquip();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameNoCreditEquip::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameNoCreditEquip =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameNoCreditEquip}, {
      &protobuf_ServerProtocol_2eproto::scc_info_NoCreditEquip.base,}};

static void InitDefaultsNoCreditEquip() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_NoCreditEquip_default_instance_;
    new (ptr) ::ServerProtocol::NoCreditEquip();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::NoCreditEquip::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NoCreditEquip =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNoCreditEquip}, {}};

static void InitDefaultsSFrameKeyShareRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameKeyShareRecord_default_instance_;
    new (ptr) ::ServerProtocol::SFrameKeyShareRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameKeyShareRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameKeyShareRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameKeyShareRecord}, {
      &protobuf_ServerProtocol_2eproto::scc_info_KeyShareRecord.base,}};

static void InitDefaultsKeyShareRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_KeyShareRecord_default_instance_;
    new (ptr) ::ServerProtocol::KeyShareRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::KeyShareRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeyShareRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeyShareRecord}, {}};

static void InitDefaultsSFrameDevTypeCribe() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameDevTypeCribe_default_instance_;
    new (ptr) ::ServerProtocol::SFrameDevTypeCribe();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameDevTypeCribe::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameDevTypeCribe =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameDevTypeCribe}, {
      &protobuf_ServerProtocol_2eproto::scc_info_DevTypeCribe.base,}};

static void InitDefaultsDevTypeCribe() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_DevTypeCribe_default_instance_;
    new (ptr) ::ServerProtocol::DevTypeCribe();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::DevTypeCribe::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DevTypeCribe =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDevTypeCribe}, {}};

static void InitDefaultsSFrameCountryCode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameCountryCode_default_instance_;
    new (ptr) ::ServerProtocol::SFrameCountryCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameCountryCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameCountryCode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameCountryCode}, {
      &protobuf_ServerProtocol_2eproto::scc_info_CountryCode.base,}};

static void InitDefaultsCountryCode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_CountryCode_default_instance_;
    new (ptr) ::ServerProtocol::CountryCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::CountryCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CountryCode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCountryCode}, {}};

static void InitDefaultsSFrameDeveloper() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameDeveloper_default_instance_;
    new (ptr) ::ServerProtocol::SFrameDeveloper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameDeveloper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameDeveloper =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameDeveloper}, {
      &protobuf_ServerProtocol_2eproto::scc_info_Developer.base,}};

static void InitDefaultsDeveloper() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_Developer_default_instance_;
    new (ptr) ::ServerProtocol::Developer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::Developer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Developer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeveloper}, {}};

static void InitDefaultsSFrameWebInterface() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameWebInterface_default_instance_;
    new (ptr) ::ServerProtocol::SFrameWebInterface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameWebInterface::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameWebInterface =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameWebInterface}, {
      &protobuf_ServerProtocol_2eproto::scc_info_WebInterface.base,}};

static void InitDefaultsWebInterface() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_WebInterface_default_instance_;
    new (ptr) ::ServerProtocol::WebInterface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::WebInterface::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WebInterface =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWebInterface}, {}};

static void InitDefaultsSFrameTypeApiContrast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameTypeApiContrast_default_instance_;
    new (ptr) ::ServerProtocol::SFrameTypeApiContrast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameTypeApiContrast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameTypeApiContrast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameTypeApiContrast}, {
      &protobuf_ServerProtocol_2eproto::scc_info_TypeApiContrast.base,}};

static void InitDefaultsTypeApiContrast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_TypeApiContrast_default_instance_;
    new (ptr) ::ServerProtocol::TypeApiContrast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::TypeApiContrast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TypeApiContrast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTypeApiContrast}, {}};

static void InitDefaultsSFrameCardsAreaDeviceContrast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameCardsAreaDeviceContrast_default_instance_;
    new (ptr) ::ServerProtocol::SFrameCardsAreaDeviceContrast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameCardsAreaDeviceContrast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameCardsAreaDeviceContrast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameCardsAreaDeviceContrast}, {
      &protobuf_ServerProtocol_2eproto::scc_info_CardsAreaDeviceContrast.base,}};

static void InitDefaultsCardsAreaDeviceContrast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_CardsAreaDeviceContrast_default_instance_;
    new (ptr) ::ServerProtocol::CardsAreaDeviceContrast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::CardsAreaDeviceContrast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CardsAreaDeviceContrast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCardsAreaDeviceContrast}, {}};

static void InitDefaultsSFrameCardRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameCardRecord_default_instance_;
    new (ptr) ::ServerProtocol::SFrameCardRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameCardRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameCardRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameCardRecord}, {
      &protobuf_ServerProtocol_2eproto::scc_info_CardRecord.base,}};

static void InitDefaultsCardRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_CardRecord_default_instance_;
    new (ptr) ::ServerProtocol::CardRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::CardRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CardRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCardRecord}, {}};

static void InitDefaultsSFrameManagersRoleContrast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameManagersRoleContrast_default_instance_;
    new (ptr) ::ServerProtocol::SFrameManagersRoleContrast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameManagersRoleContrast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameManagersRoleContrast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameManagersRoleContrast}, {
      &protobuf_ServerProtocol_2eproto::scc_info_ManagersRoleContrast.base,}};

static void InitDefaultsManagersRoleContrast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_ManagersRoleContrast_default_instance_;
    new (ptr) ::ServerProtocol::ManagersRoleContrast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::ManagersRoleContrast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ManagersRoleContrast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsManagersRoleContrast}, {}};

static void InitDefaultsSFrameFolderUpRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameFolderUpRecord_default_instance_;
    new (ptr) ::ServerProtocol::SFrameFolderUpRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameFolderUpRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameFolderUpRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameFolderUpRecord}, {
      &protobuf_ServerProtocol_2eproto::scc_info_FolderUpRecord.base,}};

static void InitDefaultsFolderUpRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_FolderUpRecord_default_instance_;
    new (ptr) ::ServerProtocol::FolderUpRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::FolderUpRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FolderUpRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFolderUpRecord}, {}};

static void InitDefaultsSFrameFolderTree() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameFolderTree_default_instance_;
    new (ptr) ::ServerProtocol::SFrameFolderTree();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameFolderTree::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameFolderTree =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameFolderTree}, {
      &protobuf_ServerProtocol_2eproto::scc_info_FolderTree.base,}};

static void InitDefaultsFolderTree() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_FolderTree_default_instance_;
    new (ptr) ::ServerProtocol::FolderTree();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::FolderTree::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FolderTree =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFolderTree}, {}};

static void InitDefaultsSFrameDeviceAlarm() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameDeviceAlarm_default_instance_;
    new (ptr) ::ServerProtocol::SFrameDeviceAlarm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameDeviceAlarm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameDeviceAlarm =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameDeviceAlarm}, {
      &protobuf_ServerProtocol_2eproto::scc_info_DeviceAlarm.base,}};

static void InitDefaultsDeviceAlarm() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_DeviceAlarm_default_instance_;
    new (ptr) ::ServerProtocol::DeviceAlarm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::DeviceAlarm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeviceAlarm =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeviceAlarm}, {}};

static void InitDefaultsSFrameDeviceAlarmProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameDeviceAlarmProperty_default_instance_;
    new (ptr) ::ServerProtocol::SFrameDeviceAlarmProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameDeviceAlarmProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameDeviceAlarmProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameDeviceAlarmProperty}, {
      &protobuf_ServerProtocol_2eproto::scc_info_DeviceAlarmProperty.base,}};

static void InitDefaultsDeviceAlarmProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_DeviceAlarmProperty_default_instance_;
    new (ptr) ::ServerProtocol::DeviceAlarmProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::DeviceAlarmProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeviceAlarmProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeviceAlarmProperty}, {}};

static void InitDefaultsSFrameGwDeviceBindTemp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameGwDeviceBindTemp_default_instance_;
    new (ptr) ::ServerProtocol::SFrameGwDeviceBindTemp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameGwDeviceBindTemp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameGwDeviceBindTemp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameGwDeviceBindTemp}, {
      &protobuf_ServerProtocol_2eproto::scc_info_GwDeviceBindTemp.base,}};

static void InitDefaultsGwDeviceBindTemp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_GwDeviceBindTemp_default_instance_;
    new (ptr) ::ServerProtocol::GwDeviceBindTemp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::GwDeviceBindTemp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GwDeviceBindTemp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGwDeviceBindTemp}, {}};

static void InitDefaultsSFrameDeviceDescribeInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameDeviceDescribeInfo_default_instance_;
    new (ptr) ::ServerProtocol::SFrameDeviceDescribeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameDeviceDescribeInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameDeviceDescribeInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameDeviceDescribeInfo}, {
      &protobuf_ServerProtocol_2eproto::scc_info_DeviceDescribeInfo.base,}};

static void InitDefaultsDeviceDescribeInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_DeviceDescribeInfo_default_instance_;
    new (ptr) ::ServerProtocol::DeviceDescribeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::DeviceDescribeInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeviceDescribeInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeviceDescribeInfo}, {}};

static void InitDefaultsSystemJGPush() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SystemJGPush_default_instance_;
    new (ptr) ::ServerProtocol::SystemJGPush();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SystemJGPush::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SystemJGPush =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSystemJGPush}, {}};

static void InitDefaultsFrameRegisterServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_FrameRegisterServer_default_instance_;
    new (ptr) ::ServerProtocol::FrameRegisterServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::FrameRegisterServer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FrameRegisterServer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFrameRegisterServer}, {}};

static void InitDefaultsFrameRegisterServerAnswer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_FrameRegisterServerAnswer_default_instance_;
    new (ptr) ::ServerProtocol::FrameRegisterServerAnswer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::FrameRegisterServerAnswer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FrameRegisterServerAnswer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFrameRegisterServerAnswer}, {
      &protobuf_ServerProtocol_2eproto::scc_info_FrameUserInfo.base,}};

static void InitDefaultsFrameUserInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_FrameUserInfo_default_instance_;
    new (ptr) ::ServerProtocol::FrameUserInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::FrameUserInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FrameUserInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFrameUserInfo}, {}};

static void InitDefaultsSFrameGWDeviceContrast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameGWDeviceContrast_default_instance_;
    new (ptr) ::ServerProtocol::SFrameGWDeviceContrast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameGWDeviceContrast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameGWDeviceContrast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameGWDeviceContrast}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SGWDeviceContrast.base,}};

static void InitDefaultsSGWDeviceContrast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SGWDeviceContrast_default_instance_;
    new (ptr) ::ServerProtocol::SGWDeviceContrast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SGWDeviceContrast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SGWDeviceContrast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSGWDeviceContrast}, {}};

static void InitDefaultsSFrameDeviceFetNickName() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameDeviceFetNickName_default_instance_;
    new (ptr) ::ServerProtocol::SFrameDeviceFetNickName();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameDeviceFetNickName::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameDeviceFetNickName =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameDeviceFetNickName}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SDevFetNickName.base,}};

static void InitDefaultsSDevFetNickName() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SDevFetNickName_default_instance_;
    new (ptr) ::ServerProtocol::SDevFetNickName();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SDevFetNickName::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SDevFetNickName =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSDevFetNickName}, {}};

static void InitDefaultsSFrameDeviceFet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameDeviceFet_default_instance_;
    new (ptr) ::ServerProtocol::SFrameDeviceFet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameDeviceFet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameDeviceFet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameDeviceFet}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SDeviceFet.base,}};

static void InitDefaultsSDeviceFet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SDeviceFet_default_instance_;
    new (ptr) ::ServerProtocol::SDeviceFet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SDeviceFet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SDeviceFet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSDeviceFet}, {}};

static void InitDefaultsSFrameDeviceProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameDeviceProperty_default_instance_;
    new (ptr) ::ServerProtocol::SFrameDeviceProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameDeviceProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameDeviceProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameDeviceProperty}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SDeviceProperty.base,}};

static void InitDefaultsSDeviceProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SDeviceProperty_default_instance_;
    new (ptr) ::ServerProtocol::SDeviceProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SDeviceProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SDeviceProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSDeviceProperty}, {}};

static void InitDefaultsSFrameAppRoleContrastInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameAppRoleContrastInfo_default_instance_;
    new (ptr) ::ServerProtocol::SFrameAppRoleContrastInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameAppRoleContrastInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameAppRoleContrastInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameAppRoleContrastInfo}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SAppRoleContrastInfo.base,}};

static void InitDefaultsSAppRoleContrastInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SAppRoleContrastInfo_default_instance_;
    new (ptr) ::ServerProtocol::SAppRoleContrastInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SAppRoleContrastInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SAppRoleContrastInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSAppRoleContrastInfo}, {}};

static void InitDefaultsSFrameAppRoleFunBaseInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameAppRoleFunBaseInfo_default_instance_;
    new (ptr) ::ServerProtocol::SFrameAppRoleFunBaseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameAppRoleFunBaseInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameAppRoleFunBaseInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameAppRoleFunBaseInfo}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SAppRoleFunBaseInfo.base,}};

static void InitDefaultsSAppRoleFunBaseInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SAppRoleFunBaseInfo_default_instance_;
    new (ptr) ::ServerProtocol::SAppRoleFunBaseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SAppRoleFunBaseInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SAppRoleFunBaseInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSAppRoleFunBaseInfo}, {}};

static void InitDefaultsSFrameRoleDeviceRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameRoleDeviceRecord_default_instance_;
    new (ptr) ::ServerProtocol::SFrameRoleDeviceRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameRoleDeviceRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameRoleDeviceRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameRoleDeviceRecord}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SRoleDeviceRecord.base,}};

static void InitDefaultsSRoleDeviceRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SRoleDeviceRecord_default_instance_;
    new (ptr) ::ServerProtocol::SRoleDeviceRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SRoleDeviceRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SRoleDeviceRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSRoleDeviceRecord}, {}};

static void InitDefaultsSFrameItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameItem_default_instance_;
    new (ptr) ::ServerProtocol::SFrameItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameItem}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SItemInfo.base,}};

static void InitDefaultsSItemInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SItemInfo_default_instance_;
    new (ptr) ::ServerProtocol::SItemInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SItemInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SItemInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSItemInfo}, {}};

static void InitDefaultsSFrameAppRoleType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameAppRoleType_default_instance_;
    new (ptr) ::ServerProtocol::SFrameAppRoleType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameAppRoleType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameAppRoleType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameAppRoleType}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SAppRoleType.base,}};

static void InitDefaultsSAppRoleType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SAppRoleType_default_instance_;
    new (ptr) ::ServerProtocol::SAppRoleType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SAppRoleType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SAppRoleType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSAppRoleType}, {}};

static void InitDefaultsSFrameAppRoleFun() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameAppRoleFun_default_instance_;
    new (ptr) ::ServerProtocol::SFrameAppRoleFun();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameAppRoleFun::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameAppRoleFun =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameAppRoleFun}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SAppRoleFun.base,}};

static void InitDefaultsSAppRoleFun() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SAppRoleFun_default_instance_;
    new (ptr) ::ServerProtocol::SAppRoleFun();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SAppRoleFun::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SAppRoleFun =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSAppRoleFun}, {}};

static void InitDefaultsSFrameDeviceGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameDeviceGroup_default_instance_;
    new (ptr) ::ServerProtocol::SFrameDeviceGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameDeviceGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameDeviceGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameDeviceGroup}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SDeviceGroup.base,}};

static void InitDefaultsSDeviceGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SDeviceGroup_default_instance_;
    new (ptr) ::ServerProtocol::SDeviceGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SDeviceGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SDeviceGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSDeviceGroup}, {}};

static void InitDefaultsSFrameAreabase() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameAreabase_default_instance_;
    new (ptr) ::ServerProtocol::SFrameAreabase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameAreabase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameAreabase =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameAreabase}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SAreabaseinfo.base,}};

static void InitDefaultsSAreabaseinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SAreabaseinfo_default_instance_;
    new (ptr) ::ServerProtocol::SAreabaseinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SAreabaseinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SAreabaseinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSAreabaseinfo}, {}};

static void InitDefaultsSFrameAreaDevice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameAreaDevice_default_instance_;
    new (ptr) ::ServerProtocol::SFrameAreaDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameAreaDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameAreaDevice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameAreaDevice}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SAreaDeviceinfo.base,}};

static void InitDefaultsSAreaDeviceinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SAreaDeviceinfo_default_instance_;
    new (ptr) ::ServerProtocol::SAreaDeviceinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SAreaDeviceinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SAreaDeviceinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSAreaDeviceinfo}, {}};

static void InitDefaultsSFrameAreaUseRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameAreaUseRecord_default_instance_;
    new (ptr) ::ServerProtocol::SFrameAreaUseRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameAreaUseRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameAreaUseRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameAreaUseRecord}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SAreaUseRecord.base,}};

static void InitDefaultsSAreaUseRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SAreaUseRecord_default_instance_;
    new (ptr) ::ServerProtocol::SAreaUseRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SAreaUseRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SAreaUseRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSAreaUseRecord}, {}};

static void InitDefaultsSFrameBuildPsw() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameBuildPsw_default_instance_;
    new (ptr) ::ServerProtocol::SFrameBuildPsw();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameBuildPsw::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameBuildPsw =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameBuildPsw}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SBuildPsw.base,}};

static void InitDefaultsSBuildPsw() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SBuildPsw_default_instance_;
    new (ptr) ::ServerProtocol::SBuildPsw();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SBuildPsw::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SBuildPsw =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSBuildPsw}, {}};

static void InitDefaultsSFrameDeviceBase() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameDeviceBase_default_instance_;
    new (ptr) ::ServerProtocol::SFrameDeviceBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameDeviceBase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameDeviceBase =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameDeviceBase}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SDeviceBaseinfo.base,}};

static void InitDefaultsSDeviceBaseinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SDeviceBaseinfo_default_instance_;
    new (ptr) ::ServerProtocol::SDeviceBaseinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SDeviceBaseinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SDeviceBaseinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSDeviceBaseinfo}, {}};

static void InitDefaultsSFrameDevicePassword() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFrameDevicePassword_default_instance_;
    new (ptr) ::ServerProtocol::SFrameDevicePassword();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFrameDevicePassword::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFrameDevicePassword =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFrameDevicePassword}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SDevicePassword.base,}};

static void InitDefaultsSDevicePassword() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SDevicePassword_default_instance_;
    new (ptr) ::ServerProtocol::SDevicePassword();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SDevicePassword::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SDevicePassword =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSDevicePassword}, {}};

static void InitDefaultsSFramEleSendRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFramEleSendRecord_default_instance_;
    new (ptr) ::ServerProtocol::SFramEleSendRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFramEleSendRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFramEleSendRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFramEleSendRecord}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SEleSendRecord.base,}};

static void InitDefaultsSEleSendRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SEleSendRecord_default_instance_;
    new (ptr) ::ServerProtocol::SEleSendRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SEleSendRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SEleSendRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSEleSendRecord}, {}};

static void InitDefaultsSFramMechanism() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFramMechanism_default_instance_;
    new (ptr) ::ServerProtocol::SFramMechanism();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFramMechanism::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFramMechanism =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFramMechanism}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SMechanism.base,}};

static void InitDefaultsSMechanism() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SMechanism_default_instance_;
    new (ptr) ::ServerProtocol::SMechanism();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SMechanism::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SMechanism =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSMechanism}, {}};

static void InitDefaultsSFramPswKeyRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFramPswKeyRecord_default_instance_;
    new (ptr) ::ServerProtocol::SFramPswKeyRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFramPswKeyRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFramPswKeyRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFramPswKeyRecord}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SPswKeyRecord.base,}};

static void InitDefaultsSPswKeyRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SPswKeyRecord_default_instance_;
    new (ptr) ::ServerProtocol::SPswKeyRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SPswKeyRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SPswKeyRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSPswKeyRecord}, {}};

static void InitDefaultsSFramPswSendRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFramPswSendRecord_default_instance_;
    new (ptr) ::ServerProtocol::SFramPswSendRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFramPswSendRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFramPswSendRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFramPswSendRecord}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SPswSendRecord.base,}};

static void InitDefaultsSPswSendRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SPswSendRecord_default_instance_;
    new (ptr) ::ServerProtocol::SPswSendRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SPswSendRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SPswSendRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSPswSendRecord}, {}};

static void InitDefaultsSFramRoleinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFramRoleinfo_default_instance_;
    new (ptr) ::ServerProtocol::SFramRoleinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFramRoleinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFramRoleinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFramRoleinfo}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SRoleinfo.base,}};

static void InitDefaultsSRoleinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SRoleinfo_default_instance_;
    new (ptr) ::ServerProtocol::SRoleinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SRoleinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SRoleinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSRoleinfo}, {}};

static void InitDefaultsSFramRoleType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFramRoleType_default_instance_;
    new (ptr) ::ServerProtocol::SFramRoleType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFramRoleType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFramRoleType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFramRoleType}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SRoleType.base,}};

static void InitDefaultsSRoleType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SRoleType_default_instance_;
    new (ptr) ::ServerProtocol::SRoleType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SRoleType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SRoleType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSRoleType}, {}};

static void InitDefaultsSFramToolAuthority() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFramToolAuthority_default_instance_;
    new (ptr) ::ServerProtocol::SFramToolAuthority();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFramToolAuthority::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFramToolAuthority =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFramToolAuthority}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SToolAuthority.base,}};

static void InitDefaultsSToolAuthority() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SToolAuthority_default_instance_;
    new (ptr) ::ServerProtocol::SToolAuthority();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SToolAuthority::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SToolAuthority =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSToolAuthority}, {}};

static void InitDefaultsSFramUseRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFramUseRecord_default_instance_;
    new (ptr) ::ServerProtocol::SFramUseRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFramUseRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFramUseRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFramUseRecord}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SUseRecord.base,}};

static void InitDefaultsSUseRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SUseRecord_default_instance_;
    new (ptr) ::ServerProtocol::SUseRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SUseRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SUseRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSUseRecord}, {}};

static void InitDefaultsSFramUserinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFramUserinfo_default_instance_;
    new (ptr) ::ServerProtocol::SFramUserinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFramUserinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SFramUserinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSFramUserinfo}, {
      &protobuf_ServerProtocol_2eproto::scc_info_SUserinfo.base,}};

static void InitDefaultsSUserinfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SUserinfo_default_instance_;
    new (ptr) ::ServerProtocol::SUserinfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SUserinfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SUserinfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSUserinfo}, {}};

static void InitDefaultsSFramShareKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServerProtocol::_SFramShareKey_default_instance_;
    new (ptr) ::ServerProtocol::SFramShareKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerProtocol::SFramShareKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SFramShareKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSFramShareKey}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SystemCode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_H2SRequeseData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameDeviceHeartRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceHeartRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameHmRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HmRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameFirmwareVersion.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameFirmwareVersionAnswer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameNBAIOT.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameNBAIOTAnswer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameNBWhiteList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameNBWhiteListAnswer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameFaceRecognition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameFaceRecognitionAnswer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameJgPushRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JgPushRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameVersionRangle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VersionRangle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameVersion.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Version.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameNoCreditEquip.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NoCreditEquip.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameKeyShareRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyShareRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameDevTypeCribe.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DevTypeCribe.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameCountryCode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CountryCode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameDeveloper.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Developer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameWebInterface.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WebInterface.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameTypeApiContrast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TypeApiContrast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameCardsAreaDeviceContrast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CardsAreaDeviceContrast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameCardRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CardRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameManagersRoleContrast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ManagersRoleContrast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameFolderUpRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FolderUpRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameFolderTree.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FolderTree.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameDeviceAlarm.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceAlarm.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameDeviceAlarmProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceAlarmProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameGwDeviceBindTemp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GwDeviceBindTemp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameDeviceDescribeInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceDescribeInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SystemJGPush.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FrameRegisterServer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FrameRegisterServerAnswer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FrameUserInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameGWDeviceContrast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SGWDeviceContrast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameDeviceFetNickName.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SDevFetNickName.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameDeviceFet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SDeviceFet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameDeviceProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SDeviceProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameAppRoleContrastInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SAppRoleContrastInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameAppRoleFunBaseInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SAppRoleFunBaseInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameRoleDeviceRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SRoleDeviceRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SItemInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameAppRoleType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SAppRoleType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameAppRoleFun.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SAppRoleFun.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameDeviceGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SDeviceGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameAreabase.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SAreabaseinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameAreaDevice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SAreaDeviceinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameAreaUseRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SAreaUseRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameBuildPsw.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SBuildPsw.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameDeviceBase.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SDeviceBaseinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFrameDevicePassword.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SDevicePassword.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFramEleSendRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SEleSendRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFramMechanism.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SMechanism.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFramPswKeyRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SPswKeyRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFramPswSendRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SPswSendRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFramRoleinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SRoleinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFramRoleType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SRoleType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFramToolAuthority.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SToolAuthority.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFramUseRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SUseRecord.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFramUserinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SUserinfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SFramShareKey.base);
}

::google::protobuf::Metadata file_level_metadata[109];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[14];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SystemCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SystemCode, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::H2SRequeseData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::H2SRequeseData, actiontype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::H2SRequeseData, dbid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceHeartRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceHeartRecord, deviceheartrecordlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceHeartRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceHeartRecord, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceHeartRecord, mac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceHeartRecord, modifytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceHeartRecord, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceHeartRecord, actiontype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameHmRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameHmRecord, hmrecordlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::HmRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::HmRecord, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::HmRecord, mac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::HmRecord, gwmac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::HmRecord, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::HmRecord, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::HmRecord, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::HmRecord, begintime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::HmRecord, endtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::HmRecord, actiontype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFirmwareVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFirmwareVersion, downurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFirmwareVersion, versionid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFirmwareVersionAnswer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFirmwareVersionAnswer, versionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFirmwareVersionAnswer, productname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFirmwareVersionAnswer, model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFirmwareVersionAnswer, manufactory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFirmwareVersionAnswer, devicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFirmwareVersionAnswer, devicepn_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNBAIOT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNBAIOT, cardsareadeviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNBAIOT, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNBAIOT, imei_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNBAIOT, resid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNBAIOTAnswer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNBAIOTAnswer, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNBAIOTAnswer, cardsareadeviceid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNBWhiteList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNBWhiteList, cardsareadeviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNBWhiteList, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNBWhiteList, imei_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNBWhiteList, resid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNBWhiteListAnswer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNBWhiteListAnswer, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNBWhiteListAnswer, cardsareadeviceid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFaceRecognition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFaceRecognition, downurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFaceRecognition, userid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFaceRecognitionAnswer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFaceRecognitionAnswer, characteristiccodeurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFaceRecognitionAnswer, userid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameJgPushRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameJgPushRecord, jgpushrecordlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::JgPushRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::JgPushRecord, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::JgPushRecord, pushtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::JgPushRecord, actiontype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::JgPushRecord, alert_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::JgPushRecord, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::JgPushRecord, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::JgPushRecord, contenttitle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::JgPushRecord, tagalias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::JgPushRecord, pushapptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::JgPushRecord, pushtime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameVersionRangle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameVersionRangle, versionranglelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::VersionRangle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::VersionRangle, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::VersionRangle, verid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::VersionRangle, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::VersionRangle, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::VersionRangle, usertype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameVersion, versionlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Version, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Version, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Version, producttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Version, releasemode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Version, mandatorystate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Version, updaterange_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Version, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Version, versioncode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Version, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Version, uptime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Version, log_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Version, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Version, updatecount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Version, productname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNoCreditEquip, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameNoCreditEquip, nocreditequiplist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::NoCreditEquip, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::NoCreditEquip, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::NoCreditEquip, euipmentflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::NoCreditEquip, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::NoCreditEquip, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameKeyShareRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameKeyShareRecord, keysharerecordlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, keyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, cipher_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, userfrommobile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, usernamefrom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, countrycode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, userto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, usernameto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, lockstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, starttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, endtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, isshareable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, lockcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, isshow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, sort_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, isneedcheckin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, groupname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, authtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::KeyShareRecord, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDevTypeCribe, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDevTypeCribe, devtypecribelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DevTypeCribe, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DevTypeCribe, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DevTypeCribe, devcribe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DevTypeCribe, chinese_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DevTypeCribe, english_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DevTypeCribe, german_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DevTypeCribe, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameCountryCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameCountryCode, countrycodelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CountryCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CountryCode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CountryCode, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CountryCode, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CountryCode, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeveloper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeveloper, developerlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Developer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Developer, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Developer, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Developer, apikey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Developer, secretkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Developer, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Developer, developertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Developer, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Developer, lasttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::Developer, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameWebInterface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameWebInterface, webinterfacelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::WebInterface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::WebInterface, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::WebInterface, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::WebInterface, apiurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::WebInterface, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameTypeApiContrast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameTypeApiContrast, typeapicontrastlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::TypeApiContrast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::TypeApiContrast, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::TypeApiContrast, developertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::TypeApiContrast, apiid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::TypeApiContrast, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameCardsAreaDeviceContrast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameCardsAreaDeviceContrast, cardsareadevicecontrastlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardsAreaDeviceContrast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardsAreaDeviceContrast, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardsAreaDeviceContrast, cardsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardsAreaDeviceContrast, areadeviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardsAreaDeviceContrast, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardsAreaDeviceContrast, cardsendstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardsAreaDeviceContrast, cardsendcount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameCardRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameCardRecord, cardrecordlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardRecord, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardRecord, card_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardRecord, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardRecord, areaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardRecord, begintime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardRecord, endtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardRecord, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardRecord, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardRecord, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardRecord, cardtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardRecord, listtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardRecord, funtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::CardRecord, phone_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameManagersRoleContrast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameManagersRoleContrast, managersrolecontrastlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::ManagersRoleContrast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::ManagersRoleContrast, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::ManagersRoleContrast, roletypeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::ManagersRoleContrast, managersid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::ManagersRoleContrast, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::ManagersRoleContrast, mechid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFolderUpRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFolderUpRecord, folderuprecordlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FolderUpRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FolderUpRecord, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FolderUpRecord, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FolderUpRecord, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FolderUpRecord, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FolderUpRecord, update_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FolderUpRecord, upuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FolderUpRecord, upusername_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFolderTree, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameFolderTree, foldertreelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FolderTree, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FolderTree, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FolderTree, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FolderTree, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FolderTree, fileurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FolderTree, userid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceAlarm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceAlarm, devicealarmlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceAlarm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceAlarm, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceAlarm, curtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceAlarm, heppentime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceAlarm, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceAlarm, devicemac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceAlarm, devsort_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceAlarm, devstate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceAlarmProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceAlarmProperty, devicealarmpropertylist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceAlarmProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceAlarmProperty, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceAlarmProperty, devicealarmid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceAlarmProperty, alarmtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceAlarmProperty, alarmvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceAlarmProperty, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameGwDeviceBindTemp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameGwDeviceBindTemp, gwdevicebindtemplist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::GwDeviceBindTemp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::GwDeviceBindTemp, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::GwDeviceBindTemp, gwmac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::GwDeviceBindTemp, devicemac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::GwDeviceBindTemp, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceDescribeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceDescribeInfo, devicedescribeinfotlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceDescribeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceDescribeInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceDescribeInfo, desribe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceDescribeInfo, typevalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceDescribeInfo, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceDescribeInfo, bigdesribe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::DeviceDescribeInfo, devtypecribeid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SystemJGPush, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SystemJGPush, pushtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SystemJGPush, actiontype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SystemJGPush, pushtagoralias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SystemJGPush, alert_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SystemJGPush, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SystemJGPush, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SystemJGPush, msgtitle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SystemJGPush, pushapptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SystemJGPush, pushtemptype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FrameRegisterServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FrameRegisterServer, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FrameRegisterServer, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FrameRegisterServer, maxlink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FrameRegisterServer, cmdlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FrameRegisterServerAnswer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FrameRegisterServerAnswer, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FrameRegisterServerAnswer, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FrameRegisterServerAnswer, frameuserinfolist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FrameUserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::FrameUserInfo, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameGWDeviceContrast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameGWDeviceContrast, sgwdevicecontrastlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SGWDeviceContrast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SGWDeviceContrast, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SGWDeviceContrast, gwid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SGWDeviceContrast, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SGWDeviceContrast, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceFetNickName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceFetNickName, sdevfetnicknamelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDevFetNickName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDevFetNickName, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDevFetNickName, mac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDevFetNickName, fetsort_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDevFetNickName, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDevFetNickName, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceFet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceFet, sdevicefetlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceFet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceFet, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceFet, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceFet, fetnumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceFet, rootidx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceFet, devsort_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceFet, sortnumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceFet, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceFet, divmac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceFet, dbstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceFet, crc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceProperty, sdevicepropertylist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceProperty, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceProperty, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceProperty, rootfetidx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceProperty, devid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceProperty, drvidx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceProperty, powerlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceProperty, online_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceProperty, fetcrc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceProperty, grpfet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceProperty, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameAppRoleContrastInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameAppRoleContrastInfo, sapprolecontrastinfolist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleContrastInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleContrastInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleContrastInfo, roletypeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleContrastInfo, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleContrastInfo, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameAppRoleFunBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameAppRoleFunBaseInfo, sapprolefunbaseinfolist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleFunBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleFunBaseInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleFunBaseInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleFunBaseInfo, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleFunBaseInfo, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameRoleDeviceRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameRoleDeviceRecord, sroledevicerecordlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleDeviceRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleDeviceRecord, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleDeviceRecord, roletypeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleDeviceRecord, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleDeviceRecord, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameItem, siteminfolist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SItemInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SItemInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SItemInfo, mechid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SItemInfo, mechname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SItemInfo, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SItemInfo, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SItemInfo, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SItemInfo, roomcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SItemInfo, floorcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SItemInfo, provincial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SItemInfo, urban_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SItemInfo, area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SItemInfo, itemtype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameAppRoleType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameAppRoleType, approletypelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleType, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleType, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleType, mechid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleType, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleType, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameAppRoleFun, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameAppRoleFun, approlefunlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleFun, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleFun, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleFun, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleFun, funid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleFun, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAppRoleFun, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceGroup, devicegrouplist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceGroup, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceGroup, mechid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceGroup, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameAreabase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameAreabase, sareabaseinfolist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreabaseinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreabaseinfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreabaseinfo, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreabaseinfo, createuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreabaseinfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreabaseinfo, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreabaseinfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreabaseinfo, remark_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameAreaDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameAreaDevice, sareadeviceinfolist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaDeviceinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaDeviceinfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaDeviceinfo, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaDeviceinfo, areaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaDeviceinfo, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaDeviceinfo, installtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaDeviceinfo, electricity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaDeviceinfo, remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaDeviceinfo, installuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaDeviceinfo, manageruserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaDeviceinfo, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaDeviceinfo, lockpush_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaDeviceinfo, alarmpush_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaDeviceinfo, installusertype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameAreaUseRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameAreaUseRecord, sareauserecordlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaUseRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaUseRecord, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaUseRecord, areaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaUseRecord, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaUseRecord, timestep_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaUseRecord, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaUseRecord, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SAreaUseRecord, remark_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameBuildPsw, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameBuildPsw, sbuildpswlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SBuildPsw, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SBuildPsw, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SBuildPsw, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SBuildPsw, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SBuildPsw, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SBuildPsw, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDeviceBase, sdevicebaseinfolist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, mac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, curkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, electronickey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, devmodel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, fwver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, hwver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, sysver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, otherver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, tvoice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, temperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, tvoltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, curtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, nbdeviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, identycodekey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, identycode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, imei_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDeviceBaseinfo, devicecrc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDevicePassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFrameDevicePassword, sdevicepasswordlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDevicePassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDevicePassword, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDevicePassword, psw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDevicePassword, bid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDevicePassword, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDevicePassword, starttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SDevicePassword, timestep_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramEleSendRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramEleSendRecord, selesendrecordlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SEleSendRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SEleSendRecord, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SEleSendRecord, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SEleSendRecord, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SEleSendRecord, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SEleSendRecord, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SEleSendRecord, statetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SEleSendRecord, endtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SEleSendRecord, sroleid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramMechanism, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramMechanism, smechanismlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SMechanism, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SMechanism, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SMechanism, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SMechanism, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SMechanism, fmech_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SMechanism, lvl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SMechanism, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SMechanism, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SMechanism, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SMechanism, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SMechanism, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SMechanism, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SMechanism, remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SMechanism, pictureurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SMechanism, callurl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramPswKeyRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramPswKeyRecord, spswkeyrecordlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SPswKeyRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SPswKeyRecord, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SPswKeyRecord, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SPswKeyRecord, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SPswKeyRecord, deviceid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramPswSendRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramPswSendRecord, spswsendrecordlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SPswSendRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SPswSendRecord, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SPswSendRecord, pswid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SPswSendRecord, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SPswSendRecord, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SPswSendRecord, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SPswSendRecord, sroleid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramRoleinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramRoleinfo, sroleinfolist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, cardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, birthday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, logintime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, regtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, createuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, pwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, countrycode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, registration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, identycode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleinfo, apptype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramRoleType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramRoleType, sroletypelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleType, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleType, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleType, authority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleType, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SRoleType, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramToolAuthority, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramToolAuthority, stoolauthoritylist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SToolAuthority, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SToolAuthority, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SToolAuthority, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SToolAuthority, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SToolAuthority, tooltype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SToolAuthority, fid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SToolAuthority, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SToolAuthority, sort_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramUseRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramUseRecord, suserecordlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUseRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUseRecord, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUseRecord, user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUseRecord, mac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUseRecord, usetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUseRecord, usertime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUseRecord, uptime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUseRecord, logtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUseRecord, cartype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUseRecord, remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUseRecord, gwmac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUseRecord, areadeviceid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramUserinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramUserinfo, suserinfolist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, cardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, birthday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, logintime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, regtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, pwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, ico_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, countrycode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, registration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, updatestate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, tokentime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, loginequip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, faceurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, faceconditionurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, upfaceimagetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, hmcondition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SUserinfo, apptype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramShareKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramShareKey, sharecontext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerProtocol::SFramShareKey, phone_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ServerProtocol::SystemCode)},
  { 6, -1, sizeof(::ServerProtocol::H2SRequeseData)},
  { 13, -1, sizeof(::ServerProtocol::SFrameDeviceHeartRecord)},
  { 19, -1, sizeof(::ServerProtocol::DeviceHeartRecord)},
  { 29, -1, sizeof(::ServerProtocol::SFrameHmRecord)},
  { 35, -1, sizeof(::ServerProtocol::HmRecord)},
  { 49, -1, sizeof(::ServerProtocol::SFrameFirmwareVersion)},
  { 56, -1, sizeof(::ServerProtocol::SFrameFirmwareVersionAnswer)},
  { 67, -1, sizeof(::ServerProtocol::SFrameNBAIOT)},
  { 76, -1, sizeof(::ServerProtocol::SFrameNBAIOTAnswer)},
  { 83, -1, sizeof(::ServerProtocol::SFrameNBWhiteList)},
  { 92, -1, sizeof(::ServerProtocol::SFrameNBWhiteListAnswer)},
  { 99, -1, sizeof(::ServerProtocol::SFrameFaceRecognition)},
  { 106, -1, sizeof(::ServerProtocol::SFrameFaceRecognitionAnswer)},
  { 113, -1, sizeof(::ServerProtocol::SFrameJgPushRecord)},
  { 119, -1, sizeof(::ServerProtocol::JgPushRecord)},
  { 134, -1, sizeof(::ServerProtocol::SFrameVersionRangle)},
  { 140, -1, sizeof(::ServerProtocol::VersionRangle)},
  { 150, -1, sizeof(::ServerProtocol::SFrameVersion)},
  { 156, -1, sizeof(::ServerProtocol::Version)},
  { 174, -1, sizeof(::ServerProtocol::SFrameNoCreditEquip)},
  { 180, -1, sizeof(::ServerProtocol::NoCreditEquip)},
  { 189, -1, sizeof(::ServerProtocol::SFrameKeyShareRecord)},
  { 195, -1, sizeof(::ServerProtocol::KeyShareRecord)},
  { 223, -1, sizeof(::ServerProtocol::SFrameDevTypeCribe)},
  { 229, -1, sizeof(::ServerProtocol::DevTypeCribe)},
  { 240, -1, sizeof(::ServerProtocol::SFrameCountryCode)},
  { 246, -1, sizeof(::ServerProtocol::CountryCode)},
  { 255, -1, sizeof(::ServerProtocol::SFrameDeveloper)},
  { 261, -1, sizeof(::ServerProtocol::Developer)},
  { 275, -1, sizeof(::ServerProtocol::SFrameWebInterface)},
  { 281, -1, sizeof(::ServerProtocol::WebInterface)},
  { 290, -1, sizeof(::ServerProtocol::SFrameTypeApiContrast)},
  { 296, -1, sizeof(::ServerProtocol::TypeApiContrast)},
  { 305, -1, sizeof(::ServerProtocol::SFrameCardsAreaDeviceContrast)},
  { 311, -1, sizeof(::ServerProtocol::CardsAreaDeviceContrast)},
  { 322, -1, sizeof(::ServerProtocol::SFrameCardRecord)},
  { 328, -1, sizeof(::ServerProtocol::CardRecord)},
  { 346, -1, sizeof(::ServerProtocol::SFrameManagersRoleContrast)},
  { 352, -1, sizeof(::ServerProtocol::ManagersRoleContrast)},
  { 362, -1, sizeof(::ServerProtocol::SFrameFolderUpRecord)},
  { 368, -1, sizeof(::ServerProtocol::FolderUpRecord)},
  { 380, -1, sizeof(::ServerProtocol::SFrameFolderTree)},
  { 386, -1, sizeof(::ServerProtocol::FolderTree)},
  { 396, -1, sizeof(::ServerProtocol::SFrameDeviceAlarm)},
  { 402, -1, sizeof(::ServerProtocol::DeviceAlarm)},
  { 414, -1, sizeof(::ServerProtocol::SFrameDeviceAlarmProperty)},
  { 420, -1, sizeof(::ServerProtocol::DeviceAlarmProperty)},
  { 430, -1, sizeof(::ServerProtocol::SFrameGwDeviceBindTemp)},
  { 436, -1, sizeof(::ServerProtocol::GwDeviceBindTemp)},
  { 445, -1, sizeof(::ServerProtocol::SFrameDeviceDescribeInfo)},
  { 451, -1, sizeof(::ServerProtocol::DeviceDescribeInfo)},
  { 462, -1, sizeof(::ServerProtocol::SystemJGPush)},
  { 476, -1, sizeof(::ServerProtocol::FrameRegisterServer)},
  { 485, -1, sizeof(::ServerProtocol::FrameRegisterServerAnswer)},
  { 493, -1, sizeof(::ServerProtocol::FrameUserInfo)},
  { 499, -1, sizeof(::ServerProtocol::SFrameGWDeviceContrast)},
  { 505, -1, sizeof(::ServerProtocol::SGWDeviceContrast)},
  { 514, -1, sizeof(::ServerProtocol::SFrameDeviceFetNickName)},
  { 520, -1, sizeof(::ServerProtocol::SDevFetNickName)},
  { 530, -1, sizeof(::ServerProtocol::SFrameDeviceFet)},
  { 536, -1, sizeof(::ServerProtocol::SDeviceFet)},
  { 551, -1, sizeof(::ServerProtocol::SFrameDeviceProperty)},
  { 557, -1, sizeof(::ServerProtocol::SDeviceProperty)},
  { 572, -1, sizeof(::ServerProtocol::SFrameAppRoleContrastInfo)},
  { 578, -1, sizeof(::ServerProtocol::SAppRoleContrastInfo)},
  { 587, -1, sizeof(::ServerProtocol::SFrameAppRoleFunBaseInfo)},
  { 593, -1, sizeof(::ServerProtocol::SAppRoleFunBaseInfo)},
  { 602, -1, sizeof(::ServerProtocol::SFrameRoleDeviceRecord)},
  { 608, -1, sizeof(::ServerProtocol::SRoleDeviceRecord)},
  { 617, -1, sizeof(::ServerProtocol::SFrameItem)},
  { 623, -1, sizeof(::ServerProtocol::SItemInfo)},
  { 641, -1, sizeof(::ServerProtocol::SFrameAppRoleType)},
  { 647, -1, sizeof(::ServerProtocol::SAppRoleType)},
  { 657, -1, sizeof(::ServerProtocol::SFrameAppRoleFun)},
  { 663, -1, sizeof(::ServerProtocol::SAppRoleFun)},
  { 673, -1, sizeof(::ServerProtocol::SFrameDeviceGroup)},
  { 679, -1, sizeof(::ServerProtocol::SDeviceGroup)},
  { 687, -1, sizeof(::ServerProtocol::SFrameAreabase)},
  { 693, -1, sizeof(::ServerProtocol::SAreabaseinfo)},
  { 705, -1, sizeof(::ServerProtocol::SFrameAreaDevice)},
  { 711, -1, sizeof(::ServerProtocol::SAreaDeviceinfo)},
  { 729, -1, sizeof(::ServerProtocol::SFrameAreaUseRecord)},
  { 735, -1, sizeof(::ServerProtocol::SAreaUseRecord)},
  { 747, -1, sizeof(::ServerProtocol::SFrameBuildPsw)},
  { 753, -1, sizeof(::ServerProtocol::SBuildPsw)},
  { 763, -1, sizeof(::ServerProtocol::SFrameDeviceBase)},
  { 769, -1, sizeof(::ServerProtocol::SDeviceBaseinfo)},
  { 799, -1, sizeof(::ServerProtocol::SFrameDevicePassword)},
  { 805, -1, sizeof(::ServerProtocol::SDevicePassword)},
  { 816, -1, sizeof(::ServerProtocol::SFramEleSendRecord)},
  { 822, -1, sizeof(::ServerProtocol::SEleSendRecord)},
  { 835, -1, sizeof(::ServerProtocol::SFramMechanism)},
  { 841, -1, sizeof(::ServerProtocol::SMechanism)},
  { 860, -1, sizeof(::ServerProtocol::SFramPswKeyRecord)},
  { 866, -1, sizeof(::ServerProtocol::SPswKeyRecord)},
  { 875, -1, sizeof(::ServerProtocol::SFramPswSendRecord)},
  { 881, -1, sizeof(::ServerProtocol::SPswSendRecord)},
  { 892, -1, sizeof(::ServerProtocol::SFramRoleinfo)},
  { 898, -1, sizeof(::ServerProtocol::SRoleinfo)},
  { 920, -1, sizeof(::ServerProtocol::SFramRoleType)},
  { 926, -1, sizeof(::ServerProtocol::SRoleType)},
  { 936, -1, sizeof(::ServerProtocol::SFramToolAuthority)},
  { 942, -1, sizeof(::ServerProtocol::SToolAuthority)},
  { 954, -1, sizeof(::ServerProtocol::SFramUseRecord)},
  { 960, -1, sizeof(::ServerProtocol::SUseRecord)},
  { 976, -1, sizeof(::ServerProtocol::SFramUserinfo)},
  { 982, -1, sizeof(::ServerProtocol::SUserinfo)},
  { 1012, -1, sizeof(::ServerProtocol::SFramShareKey)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SystemCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_H2SRequeseData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameDeviceHeartRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_DeviceHeartRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameHmRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_HmRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameFirmwareVersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameFirmwareVersionAnswer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameNBAIOT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameNBAIOTAnswer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameNBWhiteList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameNBWhiteListAnswer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameFaceRecognition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameFaceRecognitionAnswer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameJgPushRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_JgPushRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameVersionRangle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_VersionRangle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameVersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_Version_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameNoCreditEquip_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_NoCreditEquip_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameKeyShareRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_KeyShareRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameDevTypeCribe_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_DevTypeCribe_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameCountryCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_CountryCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameDeveloper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_Developer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameWebInterface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_WebInterface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameTypeApiContrast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_TypeApiContrast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameCardsAreaDeviceContrast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_CardsAreaDeviceContrast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameCardRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_CardRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameManagersRoleContrast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_ManagersRoleContrast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameFolderUpRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_FolderUpRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameFolderTree_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_FolderTree_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameDeviceAlarm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_DeviceAlarm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameDeviceAlarmProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_DeviceAlarmProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameGwDeviceBindTemp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_GwDeviceBindTemp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameDeviceDescribeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_DeviceDescribeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SystemJGPush_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_FrameRegisterServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_FrameRegisterServerAnswer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_FrameUserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameGWDeviceContrast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SGWDeviceContrast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameDeviceFetNickName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SDevFetNickName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameDeviceFet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SDeviceFet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameDeviceProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SDeviceProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameAppRoleContrastInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SAppRoleContrastInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameAppRoleFunBaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SAppRoleFunBaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameRoleDeviceRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SRoleDeviceRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SItemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameAppRoleType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SAppRoleType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameAppRoleFun_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SAppRoleFun_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameDeviceGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SDeviceGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameAreabase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SAreabaseinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameAreaDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SAreaDeviceinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameAreaUseRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SAreaUseRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameBuildPsw_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SBuildPsw_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameDeviceBase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SDeviceBaseinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFrameDevicePassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SDevicePassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFramEleSendRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SEleSendRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFramMechanism_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SMechanism_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFramPswKeyRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SPswKeyRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFramPswSendRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SPswSendRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFramRoleinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SRoleinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFramRoleType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SRoleType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFramToolAuthority_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SToolAuthority_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFramUseRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SUseRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFramUserinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SUserinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerProtocol::_SFramShareKey_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ServerProtocol.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 109);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024ServerProtocol.proto\022\016ServerProtocol\"\033"
      "\n\nSystemCode\022\r\n\005state\030\001 \001(\005\"2\n\016H2SReques"
      "eData\022\022\n\nActionType\030\001 \001(\005\022\014\n\004DBId\030\002 \001(\004\""
      "[\n\027SFrameDeviceHeartRecord\022@\n\025DeviceHear"
      "tRecordlist\030\001 \003(\0132!.ServerProtocol.Devic"
      "eHeartRecord\"c\n\021DeviceHeartRecord\022\n\n\002Id\030"
      "\001 \001(\004\022\013\n\003Mac\030\002 \001(\t\022\022\n\nModifyTime\030\003 \001(\004\022\r"
      "\n\005Value\030\004 \001(\005\022\022\n\nActionType\030\005 \001(\005\"@\n\016SFr"
      "ameHmRecord\022.\n\014HmRecordlist\030\001 \003(\0132\030.Serv"
      "erProtocol.HmRecord\"\227\001\n\010HmRecord\022\n\n\002Id\030\001"
      " \001(\004\022\013\n\003Mac\030\002 \001(\t\022\r\n\005GwMac\030\003 \001(\t\022\016\n\006User"
      "Id\030\004 \001(\004\022\014\n\004Time\030\005 \001(\003\022\r\n\005State\030\006 \001(\005\022\021\n"
      "\tBeginTime\030\007 \001(\003\022\017\n\007EndTime\030\010 \001(\003\022\022\n\nAct"
      "ionType\030\t \001(\005\";\n\025SFrameFirmwareVersion\022\017"
      "\n\007DownUrl\030\001 \001(\t\022\021\n\tVersionID\030\002 \001(\004\"\217\001\n\033S"
      "FrameFirmwareVersionAnswer\022\021\n\tVersionID\030"
      "\001 \001(\004\022\023\n\013ProductName\030\002 \001(\t\022\r\n\005Model\030\003 \001("
      "\t\022\023\n\013Manufactory\030\004 \001(\t\022\022\n\nDeviceType\030\005 \001"
      "(\t\022\020\n\010DevicePn\030\006 \001(\t\"T\n\014SFrameNBAIOT\022\031\n\021"
      "CardsAreaDeviceID\030\001 \001(\004\022\014\n\004Data\030\002 \001(\t\022\014\n"
      "\004Imei\030\003 \001(\t\022\r\n\005resid\030\004 \001(\t\">\n\022SFrameNBAI"
      "OTAnswer\022\r\n\005State\030\001 \001(\005\022\031\n\021CardsAreaDevi"
      "ceID\030\002 \001(\004\"Y\n\021SFrameNBWhiteList\022\031\n\021Cards"
      "AreaDeviceID\030\001 \001(\004\022\014\n\004Data\030\002 \001(\t\022\014\n\004Imei"
      "\030\003 \001(\t\022\r\n\005resid\030\004 \001(\t\"C\n\027SFrameNBWhiteLi"
      "stAnswer\022\r\n\005State\030\001 \001(\005\022\031\n\021CardsAreaDevi"
      "ceID\030\002 \001(\004\"8\n\025SFrameFaceRecognition\022\017\n\007D"
      "ownUrl\030\001 \001(\t\022\016\n\006UserID\030\002 \001(\004\"L\n\033SFrameFa"
      "ceRecognitionAnswer\022\035\n\025CharacteristicCod"
      "eUrl\030\001 \001(\t\022\016\n\006UserID\030\002 \001(\004\"L\n\022SFrameJgPu"
      "shRecord\0226\n\020JgPushRecordlist\030\001 \003(\0132\034.Ser"
      "verProtocol.JgPushRecord\"\276\001\n\014JgPushRecor"
      "d\022\n\n\002Id\030\001 \001(\004\022\020\n\010PushType\030\002 \001(\005\022\022\n\nActio"
      "nType\030\003 \001(\005\022\r\n\005Alert\030\004 \001(\t\022\r\n\005Title\030\005 \001("
      "\t\022\017\n\007Content\030\006 \001(\t\022\024\n\014ContentTitle\030\007 \001(\t"
      "\022\020\n\010TagAlias\030\010 \001(\t\022\023\n\013PushAppType\030\t \001(\005\022"
      "\020\n\010PushTime\030\n \001(\003\"O\n\023SFrameVersionRangle"
      "\0228\n\021VersionRanglelist\030\001 \003(\0132\035.ServerProt"
      "ocol.VersionRangle\"[\n\rVersionRangle\022\n\n\002I"
      "d\030\001 \001(\004\022\r\n\005VerID\030\002 \001(\004\022\016\n\006UserID\030\003 \001(\004\022\r"
      "\n\005State\030\004 \001(\005\022\020\n\010UserType\030\005 \001(\005\"=\n\rSFram"
      "eVersion\022,\n\013Versionlist\030\001 \003(\0132\027.ServerPr"
      "otocol.Version\"\366\001\n\007Version\022\n\n\002Id\030\001 \001(\004\022\023"
      "\n\013ProductType\030\002 \001(\005\022\023\n\013ReleaseMode\030\003 \001(\005"
      "\022\026\n\016MandatoryState\030\004 \001(\005\022\023\n\013UpdateRange\030"
      "\005 \001(\005\022\013\n\003Url\030\006 \001(\t\022\023\n\013VersionCode\030\007 \001(\003\022"
      "\020\n\010FileSize\030\010 \001(\003\022\016\n\006UpTime\030\t \001(\003\022\013\n\003Log"
      "\030\n \001(\t\022\r\n\005State\030\013 \001(\005\022\023\n\013UpdateCount\030\014 \001"
      "(\005\022\023\n\013ProductName\030\r \001(\t\"O\n\023SFrameNoCredi"
      "tEquip\0228\n\021NoCreditEquiplist\030\001 \003(\0132\035.Serv"
      "erProtocol.NoCreditEquip\"P\n\rNoCreditEqui"
      "p\022\n\n\002Id\030\001 \001(\004\022\024\n\014EuipMentFlag\030\002 \001(\t\022\016\n\006U"
      "serID\030\003 \001(\004\022\r\n\005State\030\004 \001(\005\"R\n\024SFrameKeyS"
      "hareRecord\022:\n\022KeyShareRecordlist\030\001 \003(\0132\036"
      ".ServerProtocol.KeyShareRecord\"\253\003\n\016KeySh"
      "areRecord\022\n\n\002Id\030\001 \001(\004\022\r\n\005KeyID\030\002 \001(\t\022\016\n\006"
      "Cipher\030\003 \001(\t\022\026\n\016UserFromMobile\030\004 \001(\t\022\024\n\014"
      "UserNameFrom\030\005 \001(\t\022\023\n\013CountryCode\030\006 \001(\005\022"
      "\016\n\006UserTo\030\007 \001(\t\022\022\n\nUserNameTo\030\010 \001(\t\022\r\n\005A"
      "lias\030\t \001(\t\022\014\n\004Type\030\n \001(\005\022\021\n\tLockState\030\013 "
      "\001(\005\022\021\n\tStartTime\030\014 \001(\003\022\017\n\007EndTime\030\r \001(\003\022"
      "\023\n\013IsShareable\030\016 \001(\005\022\020\n\010LockCode\030\017 \001(\t\022\022"
      "\n\nCreateTime\030\020 \001(\003\022\016\n\006IsShow\030\021 \001(\005\022\014\n\004So"
      "rt\030\022 \001(\005\022\025\n\rIsNeedCheckIn\030\023 \001(\005\022\017\n\007Group"
      "Id\030\024 \001(\003\022\021\n\tGroupName\030\025 \001(\t\022\020\n\010AuthType\030"
      "\026 \001(\005\022\r\n\005State\030\027 \001(\005\"L\n\022SFrameDevTypeCri"
      "be\0226\n\020DevTypeCribelist\030\001 \003(\0132\034.ServerPro"
      "tocol.DevTypeCribe\"m\n\014DevTypeCribe\022\n\n\002Id"
      "\030\001 \001(\004\022\020\n\010DevCribe\030\002 \001(\t\022\017\n\007Chinese\030\003 \001("
      "\t\022\017\n\007English\030\004 \001(\t\022\016\n\006German\030\005 \001(\t\022\r\n\005St"
      "ate\030\006 \001(\005\"I\n\021SFrameCountryCode\0224\n\017Countr"
      "yCodelist\030\001 \003(\0132\033.ServerProtocol.Country"
      "Code\"D\n\013CountryCode\022\n\n\002Id\030\001 \001(\004\022\014\n\004Name\030"
      "\002 \001(\t\022\014\n\004Code\030\003 \001(\005\022\r\n\005State\030\004 \001(\005\"C\n\017SF"
      "rameDeveloper\0220\n\rDeveloperlist\030\001 \003(\0132\031.S"
      "erverProtocol.Developer\"\243\001\n\tDeveloper\022\n\n"
      "\002Id\030\001 \001(\004\022\014\n\004Name\030\002 \001(\t\022\016\n\006Apikey\030\003 \001(\t\022"
      "\021\n\tSecretKey\030\004 \001(\t\022\r\n\005Range\030\005 \001(\005\022\025\n\rDev"
      "eloperType\030\006 \001(\005\022\022\n\nCreateTime\030\007 \001(\004\022\020\n\010"
      "LastTime\030\010 \001(\004\022\r\n\005State\030\t \001(\005\"L\n\022SFrameW"
      "ebInterface\0226\n\020WebInterfacelist\030\001 \003(\0132\034."
      "ServerProtocol.WebInterface\"G\n\014WebInterf"
      "ace\022\n\n\002Id\030\001 \001(\004\022\014\n\004Name\030\002 \001(\t\022\016\n\006ApiUrl\030"
      "\003 \001(\t\022\r\n\005State\030\004 \001(\005\"U\n\025SFrameTypeApiCon"
      "trast\022<\n\023TypeApiContrastlist\030\001 \003(\0132\037.Ser"
      "verProtocol.TypeApiContrast\"R\n\017TypeApiCo"
      "ntrast\022\n\n\002Id\030\001 \001(\004\022\025\n\rDeveloperType\030\002 \001("
      "\005\022\r\n\005ApiId\030\003 \001(\004\022\r\n\005State\030\004 \001(\005\"m\n\035SFram"
      "eCardsAreaDeviceContrast\022L\n\033CardsAreaDev"
      "iceContrastlist\030\001 \003(\0132\'.ServerProtocol.C"
      "ardsAreaDeviceContrast\"\211\001\n\027CardsAreaDevi"
      "ceContrast\022\n\n\002Id\030\001 \001(\004\022\017\n\007CardsID\030\002 \001(\004\022"
      "\024\n\014AreaDeviceID\030\003 \001(\004\022\r\n\005State\030\004 \001(\005\022\025\n\r"
      "CardSendState\030\005 \001(\005\022\025\n\rCardSendCount\030\006 \001"
      "(\005\"F\n\020SFrameCardRecord\0222\n\016CardRecordlist"
      "\030\001 \003(\0132\032.ServerProtocol.CardRecord\"\333\001\n\nC"
      "ardRecord\022\n\n\002Id\030\001 \001(\004\022\014\n\004Card\030\002 \001(\t\022\016\n\006U"
      "serID\030\003 \001(\004\022\016\n\006AreaID\030\004 \001(\004\022\021\n\tBeginTime"
      "\030\005 \001(\003\022\017\n\007EndTime\030\006 \001(\003\022\016\n\006RoleID\030\007 \001(\004\022"
      "\014\n\004Time\030\010 \001(\003\022\r\n\005State\030\t \001(\005\022\020\n\010CardType"
      "\030\n \001(\005\022\020\n\010ListType\030\013 \001(\005\022\017\n\007FunType\030\014 \001("
      "\005\022\r\n\005Phone\030\r \001(\t\"d\n\032SFrameManagersRoleCo"
      "ntrast\022F\n\030ManagersRoleContrastlist\030\001 \003(\013"
      "2$.ServerProtocol.ManagersRoleContrast\"i"
      "\n\024ManagersRoleContrast\022\n\n\002Id\030\001 \001(\004\022\022\n\nRo"
      "leTypeID\030\002 \001(\004\022\022\n\nManagersID\030\003 \001(\004\022\r\n\005St"
      "ate\030\004 \001(\005\022\016\n\006MechID\030\005 \001(\004\"R\n\024SFrameFolde"
      "rUpRecord\022:\n\022FolderUpRecordlist\030\001 \003(\0132\036."
      "ServerProtocol.FolderUpRecord\"|\n\016FolderU"
      "pRecord\022\n\n\002Id\030\001 \001(\004\022\014\n\004Name\030\002 \001(\t\022\014\n\004Siz"
      "e\030\003 \001(\005\022\014\n\004Path\030\004 \001(\t\022\016\n\006Update\030\005 \001(\005\022\020\n"
      "\010UpuserID\030\006 \001(\004\022\022\n\nUpusername\030\007 \001(\t\"F\n\020S"
      "FrameFolderTree\0222\n\016FolderTreelist\030\001 \003(\0132"
      "\032.ServerProtocol.FolderTree\"T\n\nFolderTre"
      "e\022\n\n\002Id\030\001 \001(\004\022\014\n\004Name\030\002 \001(\t\022\013\n\003Pid\030\003 \001(\004"
      "\022\017\n\007FileUrl\030\004 \001(\t\022\016\n\006Userid\030\005 \001(\004\"I\n\021SFr"
      "ameDeviceAlarm\0224\n\017DeviceAlarmlist\030\001 \003(\0132"
      "\033.ServerProtocol.DeviceAlarm\"\203\001\n\013DeviceA"
      "larm\022\n\n\002Id\030\001 \001(\004\022\017\n\007CurTime\030\002 \001(\003\022\022\n\nHep"
      "penTime\030\003 \001(\003\022\r\n\005State\030\004 \001(\005\022\021\n\tDeviceMa"
      "c\030\005 \001(\t\022\017\n\007DevSort\030\006 \001(\005\022\020\n\010DevState\030\007 \001"
      "(\t\"a\n\031SFrameDeviceAlarmProperty\022D\n\027Devic"
      "eAlarmPropertylist\030\001 \003(\0132#.ServerProtoco"
      "l.DeviceAlarmProperty\"n\n\023DeviceAlarmProp"
      "erty\022\n\n\002Id\030\001 \001(\004\022\025\n\rDeviceAlarmId\030\002 \001(\004\022"
      "\021\n\tAlarmType\030\003 \001(\005\022\022\n\nAlarmValue\030\004 \001(\005\022\r"
      "\n\005State\030\005 \001(\005\"X\n\026SFrameGwDeviceBindTemp\022"
      ">\n\024GwDeviceBindTemplist\030\001 \003(\0132 .ServerPr"
      "otocol.GwDeviceBindTemp\"O\n\020GwDeviceBindT"
      "emp\022\n\n\002Id\030\001 \001(\004\022\r\n\005GwMac\030\002 \001(\t\022\021\n\tDevice"
      "Mac\030\003 \001(\t\022\r\n\005State\030\004 \001(\005\"_\n\030SFrameDevice"
      "DescribeInfo\022C\n\027DeviceDescribeInfotlist\030"
      "\001 \003(\0132\".ServerProtocol.DeviceDescribeInf"
      "o\"\177\n\022DeviceDescribeInfo\022\n\n\002Id\030\001 \001(\004\022\017\n\007D"
      "esribe\030\002 \001(\t\022\021\n\tTypeValue\030\003 \001(\005\022\r\n\005State"
      "\030\004 \001(\005\022\022\n\nBigDesribe\030\005 \001(\t\022\026\n\016DevTypeCri"
      "beID\030\006 \001(\004\"\270\001\n\014SystemJGPush\022\020\n\010PushType\030"
      "\001 \001(\005\022\022\n\nActionType\030\002 \001(\005\022\026\n\016PushTagOrAl"
      "ias\030\003 \001(\t\022\r\n\005Alert\030\004 \001(\t\022\r\n\005Title\030\005 \001(\t\022"
      "\017\n\007Content\030\006 \001(\t\022\020\n\010MsgTitle\030\007 \001(\t\022\023\n\013Pu"
      "shAppType\030\010 \001(\005\022\024\n\014PushTempType\030\t \001(\005\"Q\n"
      "\023FrameRegisterServer\022\n\n\002id\030\001 \001(\005\022\014\n\004Type"
      "\030\002 \001(\005\022\017\n\007MaxLink\030\003 \001(\005\022\017\n\007CmdList\030\004 \003(\005"
      "\"p\n\031FrameRegisterServerAnswer\022\r\n\005state\030\001"
      " \001(\005\022\n\n\002id\030\002 \001(\005\0228\n\021FrameUserInfoList\030\003 "
      "\003(\0132\035.ServerProtocol.FrameUserInfo\"\033\n\rFr"
      "ameUserInfo\022\n\n\002id\030\002 \001(\005\"Z\n\026SFrameGWDevic"
      "eContrast\022@\n\025SGWDeviceContrastlist\030\001 \003(\013"
      "2!.ServerProtocol.SGWDeviceContrast\"N\n\021S"
      "GWDeviceContrast\022\n\n\002Id\030\001 \001(\004\022\014\n\004GWId\030\002 \001"
      "(\004\022\020\n\010DeviceId\030\003 \001(\004\022\r\n\005State\030\004 \001(\005\"W\n\027S"
      "FrameDeviceFetNickName\022<\n\023SDevFetNickNam"
      "elist\030\001 \003(\0132\037.ServerProtocol.SDevFetNick"
      "Name\"\\\n\017SDevFetNickName\022\n\n\002Id\030\001 \001(\004\022\013\n\003M"
      "ac\030\002 \001(\t\022\017\n\007FetSort\030\003 \001(\005\022\020\n\010NickName\030\004 "
      "\001(\t\022\r\n\005State\030\005 \001(\005\"E\n\017SFrameDeviceFet\0222\n"
      "\016SDeviceFetlist\030\001 \003(\0132\032.ServerProtocol.S"
      "DeviceFet\"\255\001\n\nSDeviceFet\022\n\n\002Id\030\001 \001(\004\022\r\n\005"
      "Level\030\002 \001(\005\022\021\n\tFetNumber\030\003 \001(\005\022\017\n\007RootId"
      "x\030\004 \001(\005\022\017\n\007DevSort\030\005 \001(\005\022\022\n\nSortNumber\030\006"
      " \001(\005\022\r\n\005State\030\007 \001(\005\022\016\n\006DivMac\030\010 \001(\t\022\017\n\007D"
      "BState\030\t \001(\005\022\013\n\003Crc\030\n \001(\r\"T\n\024SFrameDevic"
      "eProperty\022<\n\023SDevicePropertylist\030\001 \003(\0132\037"
      ".ServerProtocol.SDeviceProperty\"\265\001\n\017SDev"
      "iceProperty\022\n\n\002Id\030\001 \001(\004\022\020\n\010DeviceID\030\002 \001("
      "\004\022\022\n\nRootFetIdx\030\003 \001(\005\022\r\n\005DevID\030\004 \001(\005\022\016\n\006"
      "DrvIdx\030\005 \001(\005\022\022\n\nPowerLevel\030\006 \001(\005\022\016\n\006Onli"
      "ne\030\007 \001(\005\022\016\n\006FetCRC\030\010 \001(\005\022\016\n\006GrpFet\030\t \001(\005"
      "\022\r\n\005State\030\n \001(\005\"c\n\031SFrameAppRoleContrast"
      "Info\022F\n\030SAppRoleContrastInfolist\030\001 \003(\0132$"
      ".ServerProtocol.SAppRoleContrastInfo\"U\n\024"
      "SAppRoleContrastInfo\022\n\n\002id\030\001 \001(\004\022\022\n\nRole"
      "TypeID\030\002 \001(\004\022\016\n\006RoleID\030\003 \001(\004\022\r\n\005state\030\004 "
      "\001(\005\"`\n\030SFrameAppRoleFunBaseInfo\022D\n\027SAppR"
      "oleFunBaseInfolist\030\001 \003(\0132#.ServerProtoco"
      "l.SAppRoleFunBaseInfo\"N\n\023SAppRoleFunBase"
      "Info\022\n\n\002id\030\001 \001(\004\022\014\n\004name\030\002 \001(\t\022\016\n\006number"
      "\030\003 \001(\005\022\r\n\005state\030\004 \001(\005\"Z\n\026SFrameRoleDevic"
      "eRecord\022@\n\025SRoleDeviceRecordlist\030\001 \003(\0132!"
      ".ServerProtocol.SRoleDeviceRecord\"T\n\021SRo"
      "leDeviceRecord\022\n\n\002id\030\001 \001(\004\022\022\n\nRoleTypeId"
      "\030\002 \001(\004\022\020\n\010DeviceId\030\003 \001(\004\022\r\n\005State\030\004 \001(\005\""
      ">\n\nSFrameItem\0220\n\rSItemInfolist\030\001 \003(\0132\031.S"
      "erverProtocol.SItemInfo\"\340\001\n\tSItemInfo\022\n\n"
      "\002Id\030\001 \001(\004\022\014\n\004Name\030\002 \001(\t\022\016\n\006MechId\030\003 \001(\004\022"
      "\020\n\010MechName\030\004 \001(\t\022\017\n\007Address\030\005 \001(\t\022\r\n\005St"
      "ate\030\006 \001(\005\022\r\n\005phone\030\007 \001(\t\022\021\n\tRoomCount\030\010 "
      "\001(\005\022\022\n\nFloorCount\030\t \001(\005\022\022\n\nProvincial\030\n "
      "\001(\t\022\r\n\005Urban\030\013 \001(\t\022\014\n\004Area\030\014 \001(\t\022\020\n\010Item"
      "Type\030\r \001(\005\"J\n\021SFrameAppRoleType\0225\n\017AppRo"
      "leTypelist\030\001 \003(\0132\034.ServerProtocol.SAppRo"
      "leType\"U\n\014SAppRoleType\022\n\n\002id\030\001 \001(\004\022\014\n\004na"
      "me\030\002 \001(\t\022\016\n\006MechId\030\003 \001(\004\022\014\n\004Type\030\004 \001(\005\022\r"
      "\n\005State\030\005 \001(\005\"G\n\020SFrameAppRoleFun\0223\n\016App"
      "RoleFunlist\030\001 \003(\0132\033.ServerProtocol.SAppR"
      "oleFun\"U\n\013SAppRoleFun\022\n\n\002id\030\001 \001(\004\022\016\n\006Rol"
      "eId\030\002 \001(\004\022\r\n\005FunID\030\003 \001(\004\022\014\n\004Type\030\004 \001(\005\022\r"
      "\n\005State\030\005 \001(\005\"J\n\021SFrameDeviceGroup\0225\n\017De"
      "viceGrouplist\030\001 \003(\0132\034.ServerProtocol.SDe"
      "viceGroup\"8\n\014SDeviceGroup\022\n\n\002id\030\001 \001(\004\022\016\n"
      "\006MechID\030\002 \001(\004\022\014\n\004name\030\003 \001(\t\"J\n\016SFrameAre"
      "abase\0228\n\021SAreabaseinfolist\030\001 \003(\0132\035.Serve"
      "rProtocol.SAreabaseinfo\"|\n\rSAreabaseinfo"
      "\022\n\n\002id\030\001 \001(\004\022\016\n\006itemid\030\002 \001(\004\022\024\n\014CreateUs"
      "erID\030\003 \001(\004\022\014\n\004name\030\004 \001(\t\022\r\n\005State\030\005 \001(\005\022"
      "\014\n\004type\030\006 \001(\005\022\016\n\006remark\030\007 \001(\t\"P\n\020SFrameA"
      "reaDevice\022<\n\023SAreaDeviceinfolist\030\001 \003(\0132\037"
      ".ServerProtocol.SAreaDeviceinfo\"\206\002\n\017SAre"
      "aDeviceinfo\022\n\n\002id\030\001 \001(\004\022\020\n\010deviceid\030\002 \001("
      "\004\022\016\n\006areaid\030\003 \001(\004\022\r\n\005state\030\004 \001(\005\022\023\n\013Inst"
      "allTime\030\005 \001(\003\022\023\n\013Electricity\030\006 \001(\005\022\016\n\006re"
      "mark\030\007 \001(\t\022\025\n\rInstallUserID\030\010 \001(\004\022\025\n\rMan"
      "agerUserID\030\t \001(\004\022\020\n\010NickName\030\n \001(\t\022\020\n\010Lo"
      "ckPush\030\013 \001(\005\022\021\n\tAlarmPush\030\014 \001(\005\022\027\n\017Insta"
      "llUserType\030\r \001(\005\"Q\n\023SFrameAreaUseRecord\022"
      ":\n\022SAreaUseRecordlist\030\001 \003(\0132\036.ServerProt"
      "ocol.SAreaUseRecord\"{\n\016SAreaUseRecord\022\n\n"
      "\002id\030\001 \001(\004\022\016\n\006AreaID\030\002 \001(\004\022\014\n\004time\030\003 \001(\003\022"
      "\020\n\010timestep\030\004 \001(\003\022\016\n\006userID\030\005 \001(\004\022\r\n\005sta"
      "te\030\006 \001(\005\022\016\n\006remark\030\007 \001(\t\"B\n\016SFrameBuildP"
      "sw\0220\n\rSBuildPswlist\030\001 \003(\0132\031.ServerProtoc"
      "ol.SBuildPsw\"V\n\tSBuildPsw\022\n\n\002id\030\001 \001(\004\022\014\n"
      "\004time\030\002 \001(\003\022\020\n\010deviceid\030\003 \001(\004\022\016\n\006userid\030"
      "\004 \001(\004\022\r\n\005State\030\005 \001(\005\"P\n\020SFrameDeviceBase"
      "\022<\n\023SDeviceBaseinfolist\030\001 \003(\0132\037.ServerPr"
      "otocol.SDeviceBaseinfo\"\262\003\n\017SDeviceBasein"
      "fo\022\n\n\002id\030\001 \001(\004\022\014\n\004name\030\002 \001(\t\022\013\n\003Mac\030\003 \001("
      "\t\022\014\n\004Type\030\004 \001(\005\022\014\n\004time\030\005 \001(\003\022\013\n\003key\030\006 \001"
      "(\005\022\016\n\006Curkey\030\007 \001(\005\022\025\n\rElectronickey\030\010 \001("
      "\t\022\r\n\005state\030\t \001(\005\022\020\n\010DevModel\030\n \001(\014\022\r\n\005Fw"
      "Ver\030\013 \001(\005\022\r\n\005Hwver\030\014 \001(\005\022\016\n\006SysVer\030\r \001(\005"
      "\022\020\n\010OtherVer\030\016 \001(\005\022\016\n\006Tvoice\030\017 \001(\005\022\023\n\013Te"
      "mperature\030\020 \001(\005\022\020\n\010Tvoltage\030\021 \001(\005\022\017\n\007Cur"
      "Time\030\022 \001(\003\022\017\n\007Message\030\023 \001(\014\022\016\n\006remark\030\024 "
      "\001(\t\022\022\n\nNBDeviceID\030\025 \001(\t\022\025\n\rIdentyCodeKey"
      "\030\026 \001(\005\022\022\n\nIdentyCode\030\027 \001(\004\022\014\n\004Imei\030\030 \001(\t"
      "\022\021\n\tDeviceCrc\030\031 \001(\005\"T\n\024SFrameDevicePassw"
      "ord\022<\n\023SDevicePasswordlist\030\001 \003(\0132\037.Serve"
      "rProtocol.SDevicePassword\"k\n\017SDevicePass"
      "word\022\n\n\002id\030\001 \001(\004\022\013\n\003psw\030\002 \001(\005\022\013\n\003bid\030\003 \001"
      "(\004\022\r\n\005state\030\004 \001(\005\022\021\n\tStarttime\030\005 \001(\003\022\020\n\010"
      "timestep\030\006 \001(\003\"P\n\022SFramEleSendRecord\022:\n\022"
      "SEleSendRecordlist\030\001 \003(\0132\036.ServerProtoco"
      "l.SEleSendRecord\"\220\001\n\016SEleSendRecord\022\n\n\002i"
      "d\030\001 \001(\004\022\020\n\010DeviceID\030\002 \001(\004\022\014\n\004time\030\003 \001(\003\022"
      "\016\n\006UserID\030\004 \001(\004\022\r\n\005State\030\005 \001(\005\022\021\n\tStateT"
      "ime\030\006 \001(\003\022\017\n\007EndTime\030\007 \001(\003\022\017\n\007SRoleId\030\010 "
      "\001(\004\"D\n\016SFramMechanism\0222\n\016SMechanismlist\030"
      "\001 \003(\0132\032.ServerProtocol.SMechanism\"\346\001\n\nSM"
      "echanism\022\n\n\002id\030\001 \001(\004\022\016\n\006Number\030\002 \001(\005\022\014\n\004"
      "name\030\003 \001(\t\022\r\n\005fmech\030\004 \001(\004\022\013\n\003lvl\030\005 \001(\005\022\014"
      "\n\004type\030\006 \001(\005\022\r\n\005State\030\007 \001(\005\022\016\n\006config\030\010 "
      "\001(\005\022\020\n\010userName\030\t \001(\t\022\r\n\005phone\030\n \001(\t\022\017\n\007"
      "address\030\013 \001(\t\022\016\n\006remark\030\014 \001(\t\022\022\n\nPicture"
      "Url\030\r \001(\t\022\017\n\007CallUrl\030\016 \001(\t\"M\n\021SFramPswKe"
      "yRecord\0228\n\021SPswKeyRecordlist\030\001 \003(\0132\035.Ser"
      "verProtocol.SPswKeyRecord\"K\n\rSPswKeyReco"
      "rd\022\n\n\002id\030\001 \001(\004\022\016\n\006userid\030\002 \001(\004\022\014\n\004time\030\003"
      " \001(\003\022\020\n\010deviceID\030\004 \001(\004\"P\n\022SFramPswSendRe"
      "cord\022:\n\022SPswSendRecordlist\030\001 \003(\0132\036.Serve"
      "rProtocol.SPswSendRecord\"h\n\016SPswSendReco"
      "rd\022\n\n\002id\030\001 \001(\004\022\r\n\005pswID\030\002 \001(\004\022\014\n\004time\030\003 "
      "\001(\003\022\r\n\005State\030\004 \001(\005\022\r\n\005phone\030\005 \001(\t\022\017\n\007SRo"
      "leId\030\006 \001(\004\"A\n\rSFramRoleinfo\0220\n\rSRoleinfo"
      "list\030\001 \003(\0132\031.ServerProtocol.SRoleinfo\"\250\002"
      "\n\tSRoleinfo\022\n\n\002id\030\001 \001(\004\022\014\n\004Name\030\002 \001(\t\022\016\n"
      "\006CardID\030\003 \001(\t\022\r\n\005phone\030\004 \001(\t\022\013\n\003sex\030\005 \001("
      "\005\022\020\n\010Birthday\030\007 \001(\005\022\021\n\tLoginTime\030\010 \001(\003\022\017"
      "\n\007Regtime\030\t \001(\003\022\024\n\014CreateUserID\030\n \001(\004\022\r\n"
      "\005state\030\013 \001(\005\022\013\n\003pwd\030\014 \001(\t\022\023\n\013CountryCode"
      "\030\r \001(\004\022\024\n\014RegisTration\030\016 \001(\t\022\r\n\005Email\030\017 "
      "\001(\t\022\016\n\006remark\030\020 \001(\t\022\022\n\nIdentycode\030\021 \001(\004\022"
      "\017\n\007AppType\030\022 \001(\005\"A\n\rSFramRoleType\0220\n\rSRo"
      "leTypelist\030\001 \003(\0132\031.ServerProtocol.SRoleT"
      "ype\"U\n\tSRoleType\022\n\n\002id\030\001 \001(\004\022\014\n\004Name\030\002 \001"
      "(\t\022\021\n\tauthority\030\003 \001(\004\022\r\n\005state\030\004 \001(\005\022\014\n\004"
      "Type\030\005 \001(\005\"P\n\022SFramToolAuthority\022:\n\022SToo"
      "lAuthoritylist\030\001 \003(\0132\036.ServerProtocol.ST"
      "oolAuthority\"s\n\016SToolAuthority\022\n\n\002id\030\001 \001"
      "(\004\022\014\n\004Name\030\002 \001(\t\022\r\n\005value\030\003 \001(\004\022\020\n\010ToolT"
      "ype\030\004 \001(\005\022\013\n\003FID\030\005 \001(\004\022\013\n\003Url\030\006 \001(\t\022\014\n\004s"
      "ort\030\007 \001(\005\"D\n\016SFramUseRecord\0222\n\016SUseRecor"
      "dlist\030\001 \003(\0132\032.ServerProtocol.SUseRecord\""
      "\275\001\n\nSUseRecord\022\n\n\002id\030\001 \001(\004\022\014\n\004User\030\002 \001(\t"
      "\022\013\n\003Mac\030\003 \001(\t\022\017\n\007usetype\030\004 \001(\005\022\020\n\010userti"
      "me\030\005 \001(\003\022\016\n\006uptime\030\006 \001(\003\022\017\n\007LogType\030\007 \001("
      "\005\022\017\n\007CarType\030\010 \001(\005\022\016\n\006remark\030\t \001(\t\022\r\n\005Gw"
      "Mac\030\n \001(\t\022\024\n\014AreaDeviceID\030\013 \001(\004\"A\n\rSFram"
      "Userinfo\0220\n\rSUserinfolist\030\001 \003(\0132\031.Server"
      "Protocol.SUserinfo\"\275\003\n\tSUserinfo\022\n\n\002id\030\001"
      " \001(\004\022\014\n\004Name\030\002 \001(\t\022\016\n\006CardID\030\003 \001(\t\022\r\n\005ph"
      "one\030\004 \001(\t\022\013\n\003sex\030\005 \001(\005\022\014\n\004type\030\006 \001(\005\022\020\n\010"
      "Birthday\030\007 \001(\005\022\021\n\tLoginTime\030\010 \001(\003\022\017\n\007Reg"
      "time\030\t \001(\003\022\r\n\005State\030\n \001(\005\022\013\n\003pwd\030\013 \001(\t\022\013"
      "\n\003Ico\030\014 \001(\t\022\016\n\006remark\030\r \001(\t\022\023\n\013CountryCo"
      "de\030\016 \001(\004\022\024\n\014RegisTration\030\017 \001(\t\022\r\n\005Email\030"
      "\020 \001(\t\022\023\n\013UpdateState\030\021 \001(\005\022\r\n\005Token\030\022 \001("
      "\t\022\021\n\tTokenTime\030\023 \001(\003\022\022\n\nLoginEquip\030\024 \001(\t"
      "\022\017\n\007FaceUrl\030\025 \001(\t\022\030\n\020FaceConditionUrl\030\026 "
      "\001(\t\022\027\n\017UpFaceImageTime\030\027 \001(\003\022\023\n\013HMCondit"
      "ion\030\030 \001(\t\022\017\n\007AppType\030\031 \001(\005\"4\n\rSFramShare"
      "Key\022\024\n\014ShareContext\030\001 \001(\t\022\r\n\005Phone\030\002 \001(\t"
      "*\270\037\n\nServerCode\022\022\n\016SERVER_UNKNOWN\020\000\022\037\n\033S"
      "ERVER_REGISTER_APPLICATION\020\002\022\032\n\026SERVER_R"
      "EGISTER_ANSWER\020\003\022!\n\034SERVER_INITDATA_AREA"
      "BASEINFO\020\3346\022\"\n\035SERVER_INITDATA_AREDEVICE"
      "INFO\020\3356\022\"\n\035SERVER_INITDATA_AREAUSERECORD"
      "\020\3366\022\035\n\030SERVER_INITDATA_BUILDPSW\020\3376\022#\n\036SE"
      "RVER_INITDATA_DEVICEBASEINFO\020\3406\022\036\n\031SERVE"
      "R_INITDATA_DEVICEPSW\020\3416\022\"\n\035SERVER_INITDA"
      "TA_ELESENDRECORD\020\3426\022\036\n\031SERVER_INITDATA_M"
      "ECHANISM\020\3436\022!\n\034SERVER_INITDATA_PSWKEYREC"
      "ORD\020\3446\022\"\n\035SERVER_INITDATA_PSWSENDRECORD\020"
      "\3456\022\035\n\030SERVER_INITDATA_ROLEINFO\020\3466\022\035\n\030SER"
      "VER_INITDATA_ROLETYPE\020\3476\022\"\n\035SERVER_INITD"
      "ATA_TOOLAUTHORITY\020\3506\022\036\n\031SERVER_INITDATA_"
      "USERECORD\020\3516\022\035\n\030SERVER_INITDATA_USERINFO"
      "\020\3526\022 \n\033SERVER_INITDATA_APPROLETYPE\020\3536\022\037\n"
      "\032SERVER_INITDATA_APPROLEFUN\020\3546\022 \n\033SERVER"
      "_INITDATA_DEVICEGROUP\020\3556\022\031\n\024SERVER_INITD"
      "ATA_ITEM\020\3566\022$\n\037SERVER_INITDATA_ROLETYPEB"
      "ASEFUN\020\3576\022\037\n\032SERVER_INITDATA_ROLEDEVICE\020"
      "\3606\022$\n\037SERVER_INITDATA_APPROLECONTRAST\020\3616"
      "\022#\n\036SERVER_INITDATA_DEVICEPROPERTY\020\3626\022\036\n"
      "\031SERVER_INITDATA_DEVICEFET\020\3636\022%\n SERVER_"
      "INITDATA_GWDEVICECONTRAST\020\3646\022%\n SERVER_I"
      "NITDATA_GWDEVICEBINDTEMP\020\3656\022&\n!SERVER_IN"
      "ITDATA_DEVICEDESRIBEINFO\020\3666\022 \n\033SERVER_IN"
      "ITDATA_DEVICEALARM\020\3676\022(\n#SERVER_INITDATA"
      "_DEVICEALARMPROPERTY\020\3706\022&\n!SERVER_INITDA"
      "TA_DEVICEFETNICKNAME\020\3716\022\037\n\032SERVER_INITDA"
      "TA_FOLDERTREE\020\3726\022#\n\036SERVER_INITDATA_FOLD"
      "ERUPRECORD\020\3736\022)\n$SERVER_INITDATA_MANAGER"
      "SROLECONTRSAT\020\3746\022\037\n\032SERVER_INITDATA_CARD"
      "RECORD\020\3756\022,\n\'SERVER_INITDATA_CARDSAREADE"
      "VICECONTRAST\020\3766\022\036\n\031SERVER_INITDATA_DEVEL"
      "OPER\020\3776\022#\n\036SERVER_INITDATA_APIINTNTERFAC"
      "E\020\2007\022$\n\037SERVER_INITDATA_TYPEAPICONTRAST\020"
      "\2017\022 \n\033SERVER_INITDATA_COUNTRYCODE\020\2027\022!\n\034"
      "SERVER_INITDATA_DEVTYPECRIBE\020\2037\022#\n\036SERVE"
      "R_INITDATA_KEYSHARERECORD\020\2047\022\"\n\035SERVER_I"
      "NITDATA_NOCREDUTEQUIP\020\2057\022\034\n\027SERVER_INITD"
      "ATA_VERSION\020\2067\022\"\n\035SERVER_INITDATA_VERSIO"
      "NRANGLE\020\2077\022!\n\034SERVER_INITDATA_JGPUSHRECO"
      "RD\020\2107\022\034\n\027SERVER_FACE_RECOGNITION\020\2117\022\034\n\027S"
      "ERVER_FIRMWARE_VERSION\020\2127\022\035\n\030SERVER_INIT"
      "DATA_HMRECORD\020\2137\022\030\n\023SERVER_NB_WHITELIST\020"
      "\2147\022\023\n\016SERVER_NB_AIOT\020\2157\022\024\n\017SERVER_INIT_E"
      "ND\020\2167\022&\n!SERVER_INITDATA_DEVICEHEARTRECO"
      "RD\020\2177\022\033\n\026SERVER_H2S_REQUESEDATA\020\2207\022&\n!SE"
      "RVER_INSERT_UPDATE_AREABASEINFO\020\302>\022\'\n\"SE"
      "RVER_INSERT_UPDATE_AREDEVICEINFO\020\303>\022\'\n\"S"
      "ERVER_INSERT_UPDATE_AREAUSERECORD\020\304>\022\"\n\035"
      "SERVER_INSERT_UPDATE_BUILDPSW\020\305>\022(\n#SERV"
      "ER_INSERT_UPDATE_DEVICEBASEINFO\020\306>\022#\n\036SE"
      "RVER_INSERT_UPDATE_DEVICEPSW\020\307>\022\'\n\"SERVE"
      "R_INSERT_UPDATE_ELESENDRECORD\020\310>\022#\n\036SERV"
      "ER_INSERT_UPDATE_MECHANISM\020\311>\022&\n!SERVER_"
      "INSERT_UPDATE_PSWKEYRECORD\020\312>\022\'\n\"SERVER_"
      "INSERT_UPDATE_PSWSENDRECORD\020\313>\022\"\n\035SERVER"
      "_INSERT_UPDATE_ROLEINFO\020\314>\022\"\n\035SERVER_INS"
      "ERT_UPDATE_ROLETYPE\020\315>\022\'\n\"SERVER_INSERT_"
      "UPDATE_TOOLAUTHORITY\020\316>\022#\n\036SERVER_INSERT"
      "_UPDATE_USERECORD\020\317>\022\"\n\035SERVER_INSERT_UP"
      "DATE_USERINFO\020\320>\022%\n SERVER_INSERT_UPDATE"
      "_APPROLETYPE\020\321>\022$\n\037SERVER_INSERT_UPDATE_"
      "APPROLEFUN\020\322>\022%\n SERVER_INSERT_UPDATE_DE"
      "VICEGROUP\020\323>\022\036\n\031SERVER_INSERT_UPDATE_ITE"
      "M\020\324>\022)\n$SERVER_INSERT_UPDATE_ROLETYPEBAS"
      "EFUN\020\325>\022$\n\037SERVER_INSERT_UPDATE_ROLEDEVI"
      "CE\020\326>\022)\n$SERVER_INSERT_UPDATE_APPROLECON"
      "TRAST\020\327>\022(\n#SERVER_INSERT_UPDATE_DEVICEP"
      "ROPERTY\020\330>\022#\n\036SERVER_INSERT_UPDATE_DEVIC"
      "EFET\020\331>\022*\n%SERVER_INSERT_UPDATE_GWDEVICE"
      "CONTRAST\020\332>\022*\n%SERVER_INSERT_UPDATE_GWDE"
      "VICEBINDTEMP\020\333>\022+\n&SERVER_INSERT_UPDATE_"
      "DEVICEDESRIBEINFO\020\334>\022%\n SERVER_INSERT_UP"
      "DATE_DEVICEALARM\020\335>\022-\n(SERVER_INSERT_UPD"
      "ATE_DEVICEALARMPROPERTY\020\336>\022+\n&SERVER_INS"
      "ERT_UPDATE_DEVICEFETNICKNAME\020\337>\022$\n\037SERVE"
      "R_INSERT_UPDATE_FOLDERTREE\020\340>\022(\n#SERVER_"
      "INSERT_UPDATE_FOLDERUPRECORD\020\341>\022.\n)SERVE"
      "R_INSERT_UPDATE_MANAGERSROLECONTRSAT\020\342>\022"
      "$\n\037SERVER_INSERT_UPDATE_CARDRECORD\020\343>\0221\n"
      ",SERVER_INSERT_UPDATE_CARDSAREADEVICECON"
      "TRAST\020\344>\022#\n\036SERVER_INSERT_UPDATE_DEVELOP"
      "ER\020\345>\022(\n#SERVER_INSERT_UPDATE_APIINTNTER"
      "FACE\020\346>\022)\n$SERVER_INSERT_UPDATE_TYPEAPIC"
      "ONTRAST\020\347>\022%\n SERVER_INSERT_UPDATE_COUNT"
      "RYCODE\020\350>\022&\n!SERVER_INSERT_UPDATE_DEVTYP"
      "ECRIBE\020\351>\022(\n#SERVER_INSERT_UPDATE_KEYSHA"
      "RERECORD\020\352>\022\'\n\"SERVER_INSERT_UPDATE_NOCR"
      "EDUTEQUIP\020\353>\022!\n\034SERVER_INSERT_UPDATE_VER"
      "SION\020\354>\022\'\n\"SERVER_INSERT_UPDATE_VERSIONR"
      "ANGLE\020\355>\022&\n!SERVER_INSERT_UPDATE_JGPUSHR"
      "ECORD\020\356>\022#\n\036SERVER_FACE_RECOGNITION_ANSW"
      "ER\020\357>\022#\n\036SERVER_FIRMWARE_VERSION_ANSWER\020"
      "\360>\022\"\n\035SERVER_INSERT_UPDATE_HMRECORD\020\361>\022\037"
      "\n\032SERVER_NB_WHITELIST_ANSWER\020\362>\022+\n&SERVE"
      "R_INSERT_UPDATE_DEVICEHEARTRECORD\020\363>\022\030\n\022"
      "SERVER_SYSTEM_CODE\020\320\206\003\022\032\n\024SERVER_SYSTEM_"
      "JGPUSH\020\321\206\003\022\031\n\023SERVER_SMS_SHAREKEY\020\322\206\003\022\034\n"
      "\030C2S_MESSAGE_SERVICESENCE\0202*\313\004\n\016HttpActi"
      "onType\022\030\n\024ACTION_TYPE_MECH_ADD\020\000\022\033\n\027ACTI"
      "ON_TYPE_MECH_UPDATE\020\001\022\030\n\024ACTION_TYPE_MEC"
      "H_DEL\020\002\022\030\n\024ACTION_TYPE_ITEM_ADD\020\003\022\033\n\027ACT"
      "ION_TYPE_ITEM_UPDATE\020\004\022\030\n\024ACTION_TYPE_IT"
      "EM_DEL\020\005\022\030\n\024ACTION_TYPE_AREA_ADD\020\006\022\033\n\027AC"
      "TION_TYPE_AREA_UPDATE\020\007\022\030\n\024ACTION_TYPE_A"
      "REA_DEL\020\010\022\032\n\026ACTION_TYPE_PUBLIC_ELE\020\t\022\034\n"
      "\030ACTION_TYPE_TYPECRIBINFO\020\n\022\030\n\024ACTION_TY"
      "PE_ROLEINFO\020\013\022\030\n\024ACTION_TYPE_USERINFO\020\014\022"
      "\026\n\022ACTION_TYPE_WBLIST\020\r\022\033\n\027ACTION_TYPE_C"
      "ARDSRECORD\020\016\022\026\n\022ACTION_TYPE_JGPUSH\020\017\022\032\n\026"
      "ACTION_TYPE_WHITEBLACK\020\020\022\033\n\027ACTION_TYPE_"
      "FACEDISCERN\020\021\022\026\n\022ACTION_TYPE_CONFIG\020\022\022\037\n"
      "\033ACTION_TYPE_HARDWAREVERSION\020\023\022\031\n\025ACTION"
      "_TYPE_DELDEVICE\020\024*p\n\rHttpErrorCode\022\026\n\022HT"
      "TP_ERROR_SUCCESS\020\000\022\023\n\017HTTP_ERROR_FAIL\020\001\022"
      "\026\n\022HTTP_ERROR_NOPARAM\020\002\022\032\n\026HTTP_ERROR_NO"
      "SERIALIZE\020\003*N\n\010ItemType\022\017\n\013ITEM_TYPE_0\020\000"
      "\022\017\n\013ITEM_TYPE_1\020\001\022\017\n\013ITEM_TYPE_2\020\002\022\017\n\013IT"
      "EM_TYPE_3\020\003*\335\001\n\014messagestate\022\024\n\020REGISTER"
      "_DEFAULT\020\000\022\033\n\027REGISTER_GW_SUCCESSFULL\020\001\022"
      "\024\n\020REGISTER_GW_FAIL\020\002\022\035\n\031REGISTER_MASS_S"
      "UCCESSFULL\020\003\022\026\n\022REGISTER_MASS_FAIL\020\004\022\036\n\032"
      "REGISTER_COORD_SUCCESSFULL\020\005\022\027\n\023REGISTER"
      "_COORD_FAIL\020\006\022\024\n\020REGISTER_UNKNOWN\020\007*e\n\tD"
      "umpState\022\020\n\014DUMP_UNKNOWN\020\000\022\020\n\014DUMP_STATE"
      "_1\020\001\022\020\n\014DUMP_STATE_2\020\002\022\020\n\014DUMP_STATE_3\020\003"
      "\022\020\n\014DUMP_STATE_4\020\004*\220\001\n\010ServerID\022\025\n\021SERVE"
      "R_ID_UNKNOWN\020\000\022\022\n\016SERVER_ID_MQTT\020d\022\030\n\023SE"
      "RVER_ID_NETSERVER\020\310\001\022\022\n\016SERVER_ID_DATA\020F"
      "\022\021\n\014SERVER_ID_DB\020\220\003\022\030\n\023SERVER_ID_NETCLIE"
      "NT\020\364\003*\260\001\n\nServerType\022\022\n\016SERVER_DEFAULT\020\000"
      "\022\017\n\013SERVER_MQTT\020\001\022\023\n\017SERVER_QZL_DATA\020\003\022\r"
      "\n\tSERVER_DB\020\004\022\021\n\rSERVER_CENTER\020\020\022\016\n\nSERV"
      "ER_NET\020\005\022\017\n\013SERVER_FACE\020\006\022\022\n\016SERVER_DIAN"
      "XIN\020\007\022\021\n\rSERVER_YIDONG\020\010*\336\001\n\nDeviceType\022"
      "\027\n\023DEVICE_TYPE_UNKNOWN\020\000\022\027\n\023DEVICE_TYPE_"
      "GATEWAY\020`\022\026\n\022DEVICE_TYPE_MJLOOK\020 \022\030\n\024DEV"
      "ICE_TYPE_CORELOCK\020!\022\030\n\024DEVICE_TYPE_DOORL"
      "OCK\020\"\022\030\n\024DEVICE_TYPE_HANDLOCK\020#\022\033\n\027DEVIC"
      "E_TYPE_PARKINGLOCK\020$\022\033\n\027DEVICE_TYPE_CABI"
      "NETLOCK\020%*R\n\rServerUseType\022\026\n\022SERVER_USE"
      "_UNKNOWN\020\000\022\023\n\017SERVER_USE_SAVE\020\001\022\024\n\020SERVE"
      "R_USE_CLOSE\020\002*\265\001\n\nWBListType\022\030\n\024WB_LIST_"
      "TYPE_UNKNOWN\020\000\022\025\n\020WB_LIST_TYPE_PSW\020\240\001\022\026\n"
      "\021WB_LIST_TYPE_PSW1\020\241\001\022\026\n\021WB_LIST_TYPE_PS"
      "W2\020\242\001\022\026\n\021WB_LIST_TYPE_PSW3\020\243\001\022\026\n\021WB_LIST"
      "_TYPE_PSW4\020\244\001\022\026\n\022WB_LIST_TYPE_CARDS\020\001*`\n"
      "\017InstallUserType\022\030\n\024INSTALL_TYPE_UNKNOWN"
      "\020\000\022\030\n\024INSTALL_TYPE_MANAGER\020\002\022\031\n\025INSTALL_"
      "TYPE_PERSONAL\020\001*\226\001\n\nJgTempType\022\031\n\025APP_TY"
      "PE_TEMPUNDEFINE\020\000\022\027\n\023APP_TYPE_QUNZHILIAN"
      "\020\001\022\023\n\017APP_TYPE_XINGYI\020\002\022\032\n\026APP_TYPE_QUNZ"
      "HILIAN_GM\020\003\022\020\n\014APP_TYPE_TSL\020\004\022\021\n\rAPP_TYP"
      "E_FACE\020\005*p\n\007AppType\022\023\n\017APP_TYPE_DEFINE\020\000"
      "\022\024\n\020APP_TYPE_MANAGER\020\001\022\021\n\rAPP_TYPE_MAIN\020"
      "\002\022\024\n\020APP_TYPE_NEUTRAL\020\003\022\021\n\rAPP_TYPE_ZNYJ"
      "\020\004B\002H\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 18414);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ServerProtocol.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ServerProtocol_2eproto
namespace ServerProtocol {
const ::google::protobuf::EnumDescriptor* ServerCode_descriptor() {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerProtocol_2eproto::file_level_enum_descriptors[0];
}
bool ServerCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
    case 3:
    case 50:
    case 7004:
    case 7005:
    case 7006:
    case 7007:
    case 7008:
    case 7009:
    case 7010:
    case 7011:
    case 7012:
    case 7013:
    case 7014:
    case 7015:
    case 7016:
    case 7017:
    case 7018:
    case 7019:
    case 7020:
    case 7021:
    case 7022:
    case 7023:
    case 7024:
    case 7025:
    case 7026:
    case 7027:
    case 7028:
    case 7029:
    case 7030:
    case 7031:
    case 7032:
    case 7033:
    case 7034:
    case 7035:
    case 7036:
    case 7037:
    case 7038:
    case 7039:
    case 7040:
    case 7041:
    case 7042:
    case 7043:
    case 7044:
    case 7045:
    case 7046:
    case 7047:
    case 7048:
    case 7049:
    case 7050:
    case 7051:
    case 7052:
    case 7053:
    case 7054:
    case 7055:
    case 7056:
    case 8002:
    case 8003:
    case 8004:
    case 8005:
    case 8006:
    case 8007:
    case 8008:
    case 8009:
    case 8010:
    case 8011:
    case 8012:
    case 8013:
    case 8014:
    case 8015:
    case 8016:
    case 8017:
    case 8018:
    case 8019:
    case 8020:
    case 8021:
    case 8022:
    case 8023:
    case 8024:
    case 8025:
    case 8026:
    case 8027:
    case 8028:
    case 8029:
    case 8030:
    case 8031:
    case 8032:
    case 8033:
    case 8034:
    case 8035:
    case 8036:
    case 8037:
    case 8038:
    case 8039:
    case 8040:
    case 8041:
    case 8042:
    case 8043:
    case 8044:
    case 8045:
    case 8046:
    case 8047:
    case 8048:
    case 8049:
    case 8050:
    case 8051:
    case 50000:
    case 50001:
    case 50002:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HttpActionType_descriptor() {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerProtocol_2eproto::file_level_enum_descriptors[1];
}
bool HttpActionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HttpErrorCode_descriptor() {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerProtocol_2eproto::file_level_enum_descriptors[2];
}
bool HttpErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ItemType_descriptor() {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerProtocol_2eproto::file_level_enum_descriptors[3];
}
bool ItemType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* messagestate_descriptor() {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerProtocol_2eproto::file_level_enum_descriptors[4];
}
bool messagestate_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DumpState_descriptor() {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerProtocol_2eproto::file_level_enum_descriptors[5];
}
bool DumpState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ServerID_descriptor() {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerProtocol_2eproto::file_level_enum_descriptors[6];
}
bool ServerID_IsValid(int value) {
  switch (value) {
    case 0:
    case 70:
    case 100:
    case 200:
    case 400:
    case 500:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ServerType_descriptor() {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerProtocol_2eproto::file_level_enum_descriptors[7];
}
bool ServerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DeviceType_descriptor() {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerProtocol_2eproto::file_level_enum_descriptors[8];
}
bool DeviceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 96:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ServerUseType_descriptor() {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerProtocol_2eproto::file_level_enum_descriptors[9];
}
bool ServerUseType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* WBListType_descriptor() {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerProtocol_2eproto::file_level_enum_descriptors[10];
}
bool WBListType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* InstallUserType_descriptor() {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerProtocol_2eproto::file_level_enum_descriptors[11];
}
bool InstallUserType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* JgTempType_descriptor() {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerProtocol_2eproto::file_level_enum_descriptors[12];
}
bool JgTempType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AppType_descriptor() {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerProtocol_2eproto::file_level_enum_descriptors[13];
}
bool AppType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void SystemCode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemCode::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemCode::SystemCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SystemCode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SystemCode)
}
SystemCode::SystemCode(const SystemCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SystemCode)
}

void SystemCode::SharedCtor() {
  state_ = 0;
}

SystemCode::~SystemCode() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SystemCode)
  SharedDtor();
}

void SystemCode::SharedDtor() {
}

void SystemCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SystemCode::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SystemCode& SystemCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SystemCode.base);
  return *internal_default_instance();
}


void SystemCode::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SystemCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_ = 0;
  _internal_metadata_.Clear();
}

bool SystemCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SystemCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SystemCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SystemCode)
  return false;
#undef DO_
}

void SystemCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SystemCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SystemCode)
}

::google::protobuf::uint8* SystemCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SystemCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SystemCode)
  return target;
}

size_t SystemCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SystemCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SystemCode)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SystemCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SystemCode)
    MergeFrom(*source);
  }
}

void SystemCode::MergeFrom(const SystemCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SystemCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SystemCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SystemCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemCode::CopyFrom(const SystemCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SystemCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemCode::IsInitialized() const {
  return true;
}

void SystemCode::Swap(SystemCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemCode::InternalSwap(SystemCode* other) {
  using std::swap;
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SystemCode::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void H2SRequeseData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int H2SRequeseData::kActionTypeFieldNumber;
const int H2SRequeseData::kDBIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

H2SRequeseData::H2SRequeseData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_H2SRequeseData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.H2SRequeseData)
}
H2SRequeseData::H2SRequeseData(const H2SRequeseData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dbid_, &from.dbid_,
    static_cast<size_t>(reinterpret_cast<char*>(&actiontype_) -
    reinterpret_cast<char*>(&dbid_)) + sizeof(actiontype_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.H2SRequeseData)
}

void H2SRequeseData::SharedCtor() {
  ::memset(&dbid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actiontype_) -
      reinterpret_cast<char*>(&dbid_)) + sizeof(actiontype_));
}

H2SRequeseData::~H2SRequeseData() {
  // @@protoc_insertion_point(destructor:ServerProtocol.H2SRequeseData)
  SharedDtor();
}

void H2SRequeseData::SharedDtor() {
}

void H2SRequeseData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* H2SRequeseData::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const H2SRequeseData& H2SRequeseData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_H2SRequeseData.base);
  return *internal_default_instance();
}


void H2SRequeseData::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.H2SRequeseData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dbid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actiontype_) -
      reinterpret_cast<char*>(&dbid_)) + sizeof(actiontype_));
  _internal_metadata_.Clear();
}

bool H2SRequeseData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.H2SRequeseData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ActionType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actiontype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 DBId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dbid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.H2SRequeseData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.H2SRequeseData)
  return false;
#undef DO_
}

void H2SRequeseData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.H2SRequeseData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ActionType = 1;
  if (this->actiontype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->actiontype(), output);
  }

  // uint64 DBId = 2;
  if (this->dbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->dbid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.H2SRequeseData)
}

::google::protobuf::uint8* H2SRequeseData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.H2SRequeseData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ActionType = 1;
  if (this->actiontype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->actiontype(), target);
  }

  // uint64 DBId = 2;
  if (this->dbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->dbid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.H2SRequeseData)
  return target;
}

size_t H2SRequeseData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.H2SRequeseData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 DBId = 2;
  if (this->dbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dbid());
  }

  // int32 ActionType = 1;
  if (this->actiontype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actiontype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void H2SRequeseData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.H2SRequeseData)
  GOOGLE_DCHECK_NE(&from, this);
  const H2SRequeseData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const H2SRequeseData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.H2SRequeseData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.H2SRequeseData)
    MergeFrom(*source);
  }
}

void H2SRequeseData::MergeFrom(const H2SRequeseData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.H2SRequeseData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dbid() != 0) {
    set_dbid(from.dbid());
  }
  if (from.actiontype() != 0) {
    set_actiontype(from.actiontype());
  }
}

void H2SRequeseData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.H2SRequeseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void H2SRequeseData::CopyFrom(const H2SRequeseData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.H2SRequeseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool H2SRequeseData::IsInitialized() const {
  return true;
}

void H2SRequeseData::Swap(H2SRequeseData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void H2SRequeseData::InternalSwap(H2SRequeseData* other) {
  using std::swap;
  swap(dbid_, other->dbid_);
  swap(actiontype_, other->actiontype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata H2SRequeseData::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameDeviceHeartRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameDeviceHeartRecord::kDeviceHeartRecordlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameDeviceHeartRecord::SFrameDeviceHeartRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceHeartRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameDeviceHeartRecord)
}
SFrameDeviceHeartRecord::SFrameDeviceHeartRecord(const SFrameDeviceHeartRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      deviceheartrecordlist_(from.deviceheartrecordlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameDeviceHeartRecord)
}

void SFrameDeviceHeartRecord::SharedCtor() {
}

SFrameDeviceHeartRecord::~SFrameDeviceHeartRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameDeviceHeartRecord)
  SharedDtor();
}

void SFrameDeviceHeartRecord::SharedDtor() {
}

void SFrameDeviceHeartRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameDeviceHeartRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameDeviceHeartRecord& SFrameDeviceHeartRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceHeartRecord.base);
  return *internal_default_instance();
}


void SFrameDeviceHeartRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameDeviceHeartRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceheartrecordlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameDeviceHeartRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameDeviceHeartRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.DeviceHeartRecord DeviceHeartRecordlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_deviceheartrecordlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameDeviceHeartRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameDeviceHeartRecord)
  return false;
#undef DO_
}

void SFrameDeviceHeartRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameDeviceHeartRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.DeviceHeartRecord DeviceHeartRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deviceheartrecordlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->deviceheartrecordlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameDeviceHeartRecord)
}

::google::protobuf::uint8* SFrameDeviceHeartRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameDeviceHeartRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.DeviceHeartRecord DeviceHeartRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deviceheartrecordlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->deviceheartrecordlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameDeviceHeartRecord)
  return target;
}

size_t SFrameDeviceHeartRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameDeviceHeartRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.DeviceHeartRecord DeviceHeartRecordlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->deviceheartrecordlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->deviceheartrecordlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameDeviceHeartRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameDeviceHeartRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameDeviceHeartRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameDeviceHeartRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameDeviceHeartRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameDeviceHeartRecord)
    MergeFrom(*source);
  }
}

void SFrameDeviceHeartRecord::MergeFrom(const SFrameDeviceHeartRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameDeviceHeartRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  deviceheartrecordlist_.MergeFrom(from.deviceheartrecordlist_);
}

void SFrameDeviceHeartRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameDeviceHeartRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameDeviceHeartRecord::CopyFrom(const SFrameDeviceHeartRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameDeviceHeartRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameDeviceHeartRecord::IsInitialized() const {
  return true;
}

void SFrameDeviceHeartRecord::Swap(SFrameDeviceHeartRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameDeviceHeartRecord::InternalSwap(SFrameDeviceHeartRecord* other) {
  using std::swap;
  CastToBase(&deviceheartrecordlist_)->InternalSwap(CastToBase(&other->deviceheartrecordlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameDeviceHeartRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceHeartRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceHeartRecord::kIdFieldNumber;
const int DeviceHeartRecord::kMacFieldNumber;
const int DeviceHeartRecord::kModifyTimeFieldNumber;
const int DeviceHeartRecord::kValueFieldNumber;
const int DeviceHeartRecord::kActionTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceHeartRecord::DeviceHeartRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_DeviceHeartRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.DeviceHeartRecord)
}
DeviceHeartRecord::DeviceHeartRecord(const DeviceHeartRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac().size() > 0) {
    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&actiontype_) -
    reinterpret_cast<char*>(&id_)) + sizeof(actiontype_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.DeviceHeartRecord)
}

void DeviceHeartRecord::SharedCtor() {
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actiontype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(actiontype_));
}

DeviceHeartRecord::~DeviceHeartRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.DeviceHeartRecord)
  SharedDtor();
}

void DeviceHeartRecord::SharedDtor() {
  mac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceHeartRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceHeartRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceHeartRecord& DeviceHeartRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_DeviceHeartRecord.base);
  return *internal_default_instance();
}


void DeviceHeartRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.DeviceHeartRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&actiontype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(actiontype_));
  _internal_metadata_.Clear();
}

bool DeviceHeartRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.DeviceHeartRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Mac = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac().data(), static_cast<int>(this->mac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.DeviceHeartRecord.Mac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ModifyTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &modifytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ActionType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actiontype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.DeviceHeartRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.DeviceHeartRecord)
  return false;
#undef DO_
}

void DeviceHeartRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.DeviceHeartRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string Mac = 2;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DeviceHeartRecord.Mac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mac(), output);
  }

  // uint64 ModifyTime = 3;
  if (this->modifytime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->modifytime(), output);
  }

  // int32 Value = 4;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->value(), output);
  }

  // int32 ActionType = 5;
  if (this->actiontype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->actiontype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.DeviceHeartRecord)
}

::google::protobuf::uint8* DeviceHeartRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.DeviceHeartRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string Mac = 2;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DeviceHeartRecord.Mac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mac(), target);
  }

  // uint64 ModifyTime = 3;
  if (this->modifytime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->modifytime(), target);
  }

  // int32 Value = 4;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->value(), target);
  }

  // int32 ActionType = 5;
  if (this->actiontype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->actiontype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.DeviceHeartRecord)
  return target;
}

size_t DeviceHeartRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.DeviceHeartRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Mac = 2;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 ModifyTime = 3;
  if (this->modifytime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->modifytime());
  }

  // int32 Value = 4;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  // int32 ActionType = 5;
  if (this->actiontype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actiontype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceHeartRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.DeviceHeartRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceHeartRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceHeartRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.DeviceHeartRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.DeviceHeartRecord)
    MergeFrom(*source);
  }
}

void DeviceHeartRecord::MergeFrom(const DeviceHeartRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.DeviceHeartRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mac().size() > 0) {

    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.modifytime() != 0) {
    set_modifytime(from.modifytime());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.actiontype() != 0) {
    set_actiontype(from.actiontype());
  }
}

void DeviceHeartRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.DeviceHeartRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceHeartRecord::CopyFrom(const DeviceHeartRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.DeviceHeartRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceHeartRecord::IsInitialized() const {
  return true;
}

void DeviceHeartRecord::Swap(DeviceHeartRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceHeartRecord::InternalSwap(DeviceHeartRecord* other) {
  using std::swap;
  mac_.Swap(&other->mac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(modifytime_, other->modifytime_);
  swap(value_, other->value_);
  swap(actiontype_, other->actiontype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceHeartRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameHmRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameHmRecord::kHmRecordlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameHmRecord::SFrameHmRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameHmRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameHmRecord)
}
SFrameHmRecord::SFrameHmRecord(const SFrameHmRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      hmrecordlist_(from.hmrecordlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameHmRecord)
}

void SFrameHmRecord::SharedCtor() {
}

SFrameHmRecord::~SFrameHmRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameHmRecord)
  SharedDtor();
}

void SFrameHmRecord::SharedDtor() {
}

void SFrameHmRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameHmRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameHmRecord& SFrameHmRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameHmRecord.base);
  return *internal_default_instance();
}


void SFrameHmRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameHmRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hmrecordlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameHmRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameHmRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.HmRecord HmRecordlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hmrecordlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameHmRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameHmRecord)
  return false;
#undef DO_
}

void SFrameHmRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameHmRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.HmRecord HmRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hmrecordlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->hmrecordlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameHmRecord)
}

::google::protobuf::uint8* SFrameHmRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameHmRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.HmRecord HmRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hmrecordlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->hmrecordlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameHmRecord)
  return target;
}

size_t SFrameHmRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameHmRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.HmRecord HmRecordlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->hmrecordlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hmrecordlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameHmRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameHmRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameHmRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameHmRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameHmRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameHmRecord)
    MergeFrom(*source);
  }
}

void SFrameHmRecord::MergeFrom(const SFrameHmRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameHmRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hmrecordlist_.MergeFrom(from.hmrecordlist_);
}

void SFrameHmRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameHmRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameHmRecord::CopyFrom(const SFrameHmRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameHmRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameHmRecord::IsInitialized() const {
  return true;
}

void SFrameHmRecord::Swap(SFrameHmRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameHmRecord::InternalSwap(SFrameHmRecord* other) {
  using std::swap;
  CastToBase(&hmrecordlist_)->InternalSwap(CastToBase(&other->hmrecordlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameHmRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HmRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HmRecord::kIdFieldNumber;
const int HmRecord::kMacFieldNumber;
const int HmRecord::kGwMacFieldNumber;
const int HmRecord::kUserIdFieldNumber;
const int HmRecord::kTimeFieldNumber;
const int HmRecord::kStateFieldNumber;
const int HmRecord::kBeginTimeFieldNumber;
const int HmRecord::kEndTimeFieldNumber;
const int HmRecord::kActionTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HmRecord::HmRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_HmRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.HmRecord)
}
HmRecord::HmRecord(const HmRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac().size() > 0) {
    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  gwmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gwmac().size() > 0) {
    gwmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gwmac_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&endtime_) -
    reinterpret_cast<char*>(&id_)) + sizeof(endtime_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.HmRecord)
}

void HmRecord::SharedCtor() {
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gwmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&endtime_) -
      reinterpret_cast<char*>(&id_)) + sizeof(endtime_));
}

HmRecord::~HmRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.HmRecord)
  SharedDtor();
}

void HmRecord::SharedDtor() {
  mac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gwmac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HmRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HmRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HmRecord& HmRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_HmRecord.base);
  return *internal_default_instance();
}


void HmRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.HmRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gwmac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&endtime_) -
      reinterpret_cast<char*>(&id_)) + sizeof(endtime_));
  _internal_metadata_.Clear();
}

bool HmRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.HmRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Mac = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac().data(), static_cast<int>(this->mac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.HmRecord.Mac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string GwMac = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gwmac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gwmac().data(), static_cast<int>(this->gwmac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.HmRecord.GwMac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 UserId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 BeginTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &begintime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 EndTime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &endtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ActionType = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actiontype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.HmRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.HmRecord)
  return false;
#undef DO_
}

void HmRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.HmRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string Mac = 2;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.HmRecord.Mac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mac(), output);
  }

  // string GwMac = 3;
  if (this->gwmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gwmac().data(), static_cast<int>(this->gwmac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.HmRecord.GwMac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gwmac(), output);
  }

  // uint64 UserId = 4;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->userid(), output);
  }

  // int64 Time = 5;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->time(), output);
  }

  // int32 State = 6;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->state(), output);
  }

  // int64 BeginTime = 7;
  if (this->begintime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->begintime(), output);
  }

  // int64 EndTime = 8;
  if (this->endtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->endtime(), output);
  }

  // int32 ActionType = 9;
  if (this->actiontype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->actiontype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.HmRecord)
}

::google::protobuf::uint8* HmRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.HmRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string Mac = 2;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.HmRecord.Mac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mac(), target);
  }

  // string GwMac = 3;
  if (this->gwmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gwmac().data(), static_cast<int>(this->gwmac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.HmRecord.GwMac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gwmac(), target);
  }

  // uint64 UserId = 4;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->userid(), target);
  }

  // int64 Time = 5;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->time(), target);
  }

  // int32 State = 6;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->state(), target);
  }

  // int64 BeginTime = 7;
  if (this->begintime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->begintime(), target);
  }

  // int64 EndTime = 8;
  if (this->endtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->endtime(), target);
  }

  // int32 ActionType = 9;
  if (this->actiontype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->actiontype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.HmRecord)
  return target;
}

size_t HmRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.HmRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Mac = 2;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac());
  }

  // string GwMac = 3;
  if (this->gwmac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gwmac());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 UserId = 4;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // int64 Time = 5;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // int64 BeginTime = 7;
  if (this->begintime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->begintime());
  }

  // int32 State = 6;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int32 ActionType = 9;
  if (this->actiontype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actiontype());
  }

  // int64 EndTime = 8;
  if (this->endtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->endtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HmRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.HmRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const HmRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HmRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.HmRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.HmRecord)
    MergeFrom(*source);
  }
}

void HmRecord::MergeFrom(const HmRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.HmRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mac().size() > 0) {

    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  if (from.gwmac().size() > 0) {

    gwmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gwmac_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.begintime() != 0) {
    set_begintime(from.begintime());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.actiontype() != 0) {
    set_actiontype(from.actiontype());
  }
  if (from.endtime() != 0) {
    set_endtime(from.endtime());
  }
}

void HmRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.HmRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HmRecord::CopyFrom(const HmRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.HmRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HmRecord::IsInitialized() const {
  return true;
}

void HmRecord::Swap(HmRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HmRecord::InternalSwap(HmRecord* other) {
  using std::swap;
  mac_.Swap(&other->mac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gwmac_.Swap(&other->gwmac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(userid_, other->userid_);
  swap(time_, other->time_);
  swap(begintime_, other->begintime_);
  swap(state_, other->state_);
  swap(actiontype_, other->actiontype_);
  swap(endtime_, other->endtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HmRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameFirmwareVersion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameFirmwareVersion::kDownUrlFieldNumber;
const int SFrameFirmwareVersion::kVersionIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameFirmwareVersion::SFrameFirmwareVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameFirmwareVersion.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameFirmwareVersion)
}
SFrameFirmwareVersion::SFrameFirmwareVersion(const SFrameFirmwareVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  downurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.downurl().size() > 0) {
    downurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downurl_);
  }
  versionid_ = from.versionid_;
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameFirmwareVersion)
}

void SFrameFirmwareVersion::SharedCtor() {
  downurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  versionid_ = GOOGLE_ULONGLONG(0);
}

SFrameFirmwareVersion::~SFrameFirmwareVersion() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameFirmwareVersion)
  SharedDtor();
}

void SFrameFirmwareVersion::SharedDtor() {
  downurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SFrameFirmwareVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameFirmwareVersion::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameFirmwareVersion& SFrameFirmwareVersion::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameFirmwareVersion.base);
  return *internal_default_instance();
}


void SFrameFirmwareVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameFirmwareVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  downurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  versionid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SFrameFirmwareVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameFirmwareVersion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string DownUrl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_downurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->downurl().data(), static_cast<int>(this->downurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SFrameFirmwareVersion.DownUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 VersionID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &versionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameFirmwareVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameFirmwareVersion)
  return false;
#undef DO_
}

void SFrameFirmwareVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameFirmwareVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string DownUrl = 1;
  if (this->downurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->downurl().data(), static_cast<int>(this->downurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameFirmwareVersion.DownUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->downurl(), output);
  }

  // uint64 VersionID = 2;
  if (this->versionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->versionid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameFirmwareVersion)
}

::google::protobuf::uint8* SFrameFirmwareVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameFirmwareVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string DownUrl = 1;
  if (this->downurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->downurl().data(), static_cast<int>(this->downurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameFirmwareVersion.DownUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->downurl(), target);
  }

  // uint64 VersionID = 2;
  if (this->versionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->versionid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameFirmwareVersion)
  return target;
}

size_t SFrameFirmwareVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameFirmwareVersion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string DownUrl = 1;
  if (this->downurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->downurl());
  }

  // uint64 VersionID = 2;
  if (this->versionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->versionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameFirmwareVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameFirmwareVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameFirmwareVersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameFirmwareVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameFirmwareVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameFirmwareVersion)
    MergeFrom(*source);
  }
}

void SFrameFirmwareVersion::MergeFrom(const SFrameFirmwareVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameFirmwareVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.downurl().size() > 0) {

    downurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downurl_);
  }
  if (from.versionid() != 0) {
    set_versionid(from.versionid());
  }
}

void SFrameFirmwareVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameFirmwareVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameFirmwareVersion::CopyFrom(const SFrameFirmwareVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameFirmwareVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameFirmwareVersion::IsInitialized() const {
  return true;
}

void SFrameFirmwareVersion::Swap(SFrameFirmwareVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameFirmwareVersion::InternalSwap(SFrameFirmwareVersion* other) {
  using std::swap;
  downurl_.Swap(&other->downurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(versionid_, other->versionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameFirmwareVersion::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameFirmwareVersionAnswer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameFirmwareVersionAnswer::kVersionIDFieldNumber;
const int SFrameFirmwareVersionAnswer::kProductNameFieldNumber;
const int SFrameFirmwareVersionAnswer::kModelFieldNumber;
const int SFrameFirmwareVersionAnswer::kManufactoryFieldNumber;
const int SFrameFirmwareVersionAnswer::kDeviceTypeFieldNumber;
const int SFrameFirmwareVersionAnswer::kDevicePnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameFirmwareVersionAnswer::SFrameFirmwareVersionAnswer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameFirmwareVersionAnswer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameFirmwareVersionAnswer)
}
SFrameFirmwareVersionAnswer::SFrameFirmwareVersionAnswer(const SFrameFirmwareVersionAnswer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  productname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productname().size() > 0) {
    productname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productname_);
  }
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.model().size() > 0) {
    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  manufactory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.manufactory().size() > 0) {
    manufactory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufactory_);
  }
  devicetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.devicetype().size() > 0) {
    devicetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicetype_);
  }
  devicepn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.devicepn().size() > 0) {
    devicepn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicepn_);
  }
  versionid_ = from.versionid_;
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameFirmwareVersionAnswer)
}

void SFrameFirmwareVersionAnswer::SharedCtor() {
  productname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufactory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicepn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  versionid_ = GOOGLE_ULONGLONG(0);
}

SFrameFirmwareVersionAnswer::~SFrameFirmwareVersionAnswer() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameFirmwareVersionAnswer)
  SharedDtor();
}

void SFrameFirmwareVersionAnswer::SharedDtor() {
  productname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufactory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicepn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SFrameFirmwareVersionAnswer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameFirmwareVersionAnswer::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameFirmwareVersionAnswer& SFrameFirmwareVersionAnswer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameFirmwareVersionAnswer.base);
  return *internal_default_instance();
}


void SFrameFirmwareVersionAnswer::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameFirmwareVersionAnswer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  productname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufactory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicepn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  versionid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SFrameFirmwareVersionAnswer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameFirmwareVersionAnswer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 VersionID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &versionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ProductName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productname().data(), static_cast<int>(this->productname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SFrameFirmwareVersionAnswer.ProductName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Model = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->model().data(), static_cast<int>(this->model().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SFrameFirmwareVersionAnswer.Model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Manufactory = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_manufactory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->manufactory().data(), static_cast<int>(this->manufactory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SFrameFirmwareVersionAnswer.Manufactory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DeviceType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicetype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->devicetype().data(), static_cast<int>(this->devicetype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SFrameFirmwareVersionAnswer.DeviceType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DevicePn = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicepn()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->devicepn().data(), static_cast<int>(this->devicepn().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SFrameFirmwareVersionAnswer.DevicePn"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameFirmwareVersionAnswer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameFirmwareVersionAnswer)
  return false;
#undef DO_
}

void SFrameFirmwareVersionAnswer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameFirmwareVersionAnswer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 VersionID = 1;
  if (this->versionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->versionid(), output);
  }

  // string ProductName = 2;
  if (this->productname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productname().data(), static_cast<int>(this->productname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameFirmwareVersionAnswer.ProductName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->productname(), output);
  }

  // string Model = 3;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), static_cast<int>(this->model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameFirmwareVersionAnswer.Model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->model(), output);
  }

  // string Manufactory = 4;
  if (this->manufactory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->manufactory().data(), static_cast<int>(this->manufactory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameFirmwareVersionAnswer.Manufactory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->manufactory(), output);
  }

  // string DeviceType = 5;
  if (this->devicetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicetype().data(), static_cast<int>(this->devicetype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameFirmwareVersionAnswer.DeviceType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->devicetype(), output);
  }

  // string DevicePn = 6;
  if (this->devicepn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicepn().data(), static_cast<int>(this->devicepn().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameFirmwareVersionAnswer.DevicePn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->devicepn(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameFirmwareVersionAnswer)
}

::google::protobuf::uint8* SFrameFirmwareVersionAnswer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameFirmwareVersionAnswer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 VersionID = 1;
  if (this->versionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->versionid(), target);
  }

  // string ProductName = 2;
  if (this->productname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productname().data(), static_cast<int>(this->productname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameFirmwareVersionAnswer.ProductName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->productname(), target);
  }

  // string Model = 3;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), static_cast<int>(this->model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameFirmwareVersionAnswer.Model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->model(), target);
  }

  // string Manufactory = 4;
  if (this->manufactory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->manufactory().data(), static_cast<int>(this->manufactory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameFirmwareVersionAnswer.Manufactory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->manufactory(), target);
  }

  // string DeviceType = 5;
  if (this->devicetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicetype().data(), static_cast<int>(this->devicetype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameFirmwareVersionAnswer.DeviceType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->devicetype(), target);
  }

  // string DevicePn = 6;
  if (this->devicepn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicepn().data(), static_cast<int>(this->devicepn().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameFirmwareVersionAnswer.DevicePn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->devicepn(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameFirmwareVersionAnswer)
  return target;
}

size_t SFrameFirmwareVersionAnswer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameFirmwareVersionAnswer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ProductName = 2;
  if (this->productname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productname());
  }

  // string Model = 3;
  if (this->model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->model());
  }

  // string Manufactory = 4;
  if (this->manufactory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->manufactory());
  }

  // string DeviceType = 5;
  if (this->devicetype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devicetype());
  }

  // string DevicePn = 6;
  if (this->devicepn().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devicepn());
  }

  // uint64 VersionID = 1;
  if (this->versionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->versionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameFirmwareVersionAnswer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameFirmwareVersionAnswer)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameFirmwareVersionAnswer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameFirmwareVersionAnswer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameFirmwareVersionAnswer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameFirmwareVersionAnswer)
    MergeFrom(*source);
  }
}

void SFrameFirmwareVersionAnswer::MergeFrom(const SFrameFirmwareVersionAnswer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameFirmwareVersionAnswer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.productname().size() > 0) {

    productname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productname_);
  }
  if (from.model().size() > 0) {

    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  if (from.manufactory().size() > 0) {

    manufactory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufactory_);
  }
  if (from.devicetype().size() > 0) {

    devicetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicetype_);
  }
  if (from.devicepn().size() > 0) {

    devicepn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicepn_);
  }
  if (from.versionid() != 0) {
    set_versionid(from.versionid());
  }
}

void SFrameFirmwareVersionAnswer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameFirmwareVersionAnswer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameFirmwareVersionAnswer::CopyFrom(const SFrameFirmwareVersionAnswer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameFirmwareVersionAnswer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameFirmwareVersionAnswer::IsInitialized() const {
  return true;
}

void SFrameFirmwareVersionAnswer::Swap(SFrameFirmwareVersionAnswer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameFirmwareVersionAnswer::InternalSwap(SFrameFirmwareVersionAnswer* other) {
  using std::swap;
  productname_.Swap(&other->productname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  model_.Swap(&other->model_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  manufactory_.Swap(&other->manufactory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  devicetype_.Swap(&other->devicetype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  devicepn_.Swap(&other->devicepn_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(versionid_, other->versionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameFirmwareVersionAnswer::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameNBAIOT::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameNBAIOT::kCardsAreaDeviceIDFieldNumber;
const int SFrameNBAIOT::kDataFieldNumber;
const int SFrameNBAIOT::kImeiFieldNumber;
const int SFrameNBAIOT::kResidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameNBAIOT::SFrameNBAIOT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameNBAIOT.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameNBAIOT)
}
SFrameNBAIOT::SFrameNBAIOT(const SFrameNBAIOT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imei().size() > 0) {
    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  resid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resid().size() > 0) {
    resid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resid_);
  }
  cardsareadeviceid_ = from.cardsareadeviceid_;
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameNBAIOT)
}

void SFrameNBAIOT::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cardsareadeviceid_ = GOOGLE_ULONGLONG(0);
}

SFrameNBAIOT::~SFrameNBAIOT() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameNBAIOT)
  SharedDtor();
}

void SFrameNBAIOT::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SFrameNBAIOT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameNBAIOT::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameNBAIOT& SFrameNBAIOT::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameNBAIOT.base);
  return *internal_default_instance();
}


void SFrameNBAIOT::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameNBAIOT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cardsareadeviceid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SFrameNBAIOT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameNBAIOT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 CardsAreaDeviceID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cardsareadeviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SFrameNBAIOT.Data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Imei = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imei().data(), static_cast<int>(this->imei().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SFrameNBAIOT.Imei"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string resid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resid().data(), static_cast<int>(this->resid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SFrameNBAIOT.resid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameNBAIOT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameNBAIOT)
  return false;
#undef DO_
}

void SFrameNBAIOT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameNBAIOT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 CardsAreaDeviceID = 1;
  if (this->cardsareadeviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->cardsareadeviceid(), output);
  }

  // string Data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameNBAIOT.Data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  // string Imei = 3;
  if (this->imei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameNBAIOT.Imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->imei(), output);
  }

  // string resid = 4;
  if (this->resid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resid().data(), static_cast<int>(this->resid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameNBAIOT.resid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->resid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameNBAIOT)
}

::google::protobuf::uint8* SFrameNBAIOT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameNBAIOT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 CardsAreaDeviceID = 1;
  if (this->cardsareadeviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->cardsareadeviceid(), target);
  }

  // string Data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameNBAIOT.Data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  // string Imei = 3;
  if (this->imei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameNBAIOT.Imei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->imei(), target);
  }

  // string resid = 4;
  if (this->resid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resid().data(), static_cast<int>(this->resid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameNBAIOT.resid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->resid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameNBAIOT)
  return target;
}

size_t SFrameNBAIOT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameNBAIOT)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  // string Imei = 3;
  if (this->imei().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imei());
  }

  // string resid = 4;
  if (this->resid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resid());
  }

  // uint64 CardsAreaDeviceID = 1;
  if (this->cardsareadeviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cardsareadeviceid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameNBAIOT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameNBAIOT)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameNBAIOT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameNBAIOT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameNBAIOT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameNBAIOT)
    MergeFrom(*source);
  }
}

void SFrameNBAIOT::MergeFrom(const SFrameNBAIOT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameNBAIOT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.imei().size() > 0) {

    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  if (from.resid().size() > 0) {

    resid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resid_);
  }
  if (from.cardsareadeviceid() != 0) {
    set_cardsareadeviceid(from.cardsareadeviceid());
  }
}

void SFrameNBAIOT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameNBAIOT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameNBAIOT::CopyFrom(const SFrameNBAIOT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameNBAIOT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameNBAIOT::IsInitialized() const {
  return true;
}

void SFrameNBAIOT::Swap(SFrameNBAIOT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameNBAIOT::InternalSwap(SFrameNBAIOT* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  imei_.Swap(&other->imei_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  resid_.Swap(&other->resid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cardsareadeviceid_, other->cardsareadeviceid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameNBAIOT::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameNBAIOTAnswer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameNBAIOTAnswer::kStateFieldNumber;
const int SFrameNBAIOTAnswer::kCardsAreaDeviceIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameNBAIOTAnswer::SFrameNBAIOTAnswer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameNBAIOTAnswer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameNBAIOTAnswer)
}
SFrameNBAIOTAnswer::SFrameNBAIOTAnswer(const SFrameNBAIOTAnswer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cardsareadeviceid_, &from.cardsareadeviceid_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&cardsareadeviceid_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameNBAIOTAnswer)
}

void SFrameNBAIOTAnswer::SharedCtor() {
  ::memset(&cardsareadeviceid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&cardsareadeviceid_)) + sizeof(state_));
}

SFrameNBAIOTAnswer::~SFrameNBAIOTAnswer() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameNBAIOTAnswer)
  SharedDtor();
}

void SFrameNBAIOTAnswer::SharedDtor() {
}

void SFrameNBAIOTAnswer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameNBAIOTAnswer::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameNBAIOTAnswer& SFrameNBAIOTAnswer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameNBAIOTAnswer.base);
  return *internal_default_instance();
}


void SFrameNBAIOTAnswer::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameNBAIOTAnswer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cardsareadeviceid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&cardsareadeviceid_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool SFrameNBAIOTAnswer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameNBAIOTAnswer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 CardsAreaDeviceID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cardsareadeviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameNBAIOTAnswer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameNBAIOTAnswer)
  return false;
#undef DO_
}

void SFrameNBAIOTAnswer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameNBAIOTAnswer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 State = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->state(), output);
  }

  // uint64 CardsAreaDeviceID = 2;
  if (this->cardsareadeviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->cardsareadeviceid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameNBAIOTAnswer)
}

::google::protobuf::uint8* SFrameNBAIOTAnswer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameNBAIOTAnswer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 State = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->state(), target);
  }

  // uint64 CardsAreaDeviceID = 2;
  if (this->cardsareadeviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->cardsareadeviceid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameNBAIOTAnswer)
  return target;
}

size_t SFrameNBAIOTAnswer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameNBAIOTAnswer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 CardsAreaDeviceID = 2;
  if (this->cardsareadeviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cardsareadeviceid());
  }

  // int32 State = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameNBAIOTAnswer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameNBAIOTAnswer)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameNBAIOTAnswer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameNBAIOTAnswer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameNBAIOTAnswer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameNBAIOTAnswer)
    MergeFrom(*source);
  }
}

void SFrameNBAIOTAnswer::MergeFrom(const SFrameNBAIOTAnswer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameNBAIOTAnswer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cardsareadeviceid() != 0) {
    set_cardsareadeviceid(from.cardsareadeviceid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SFrameNBAIOTAnswer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameNBAIOTAnswer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameNBAIOTAnswer::CopyFrom(const SFrameNBAIOTAnswer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameNBAIOTAnswer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameNBAIOTAnswer::IsInitialized() const {
  return true;
}

void SFrameNBAIOTAnswer::Swap(SFrameNBAIOTAnswer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameNBAIOTAnswer::InternalSwap(SFrameNBAIOTAnswer* other) {
  using std::swap;
  swap(cardsareadeviceid_, other->cardsareadeviceid_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameNBAIOTAnswer::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameNBWhiteList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameNBWhiteList::kCardsAreaDeviceIDFieldNumber;
const int SFrameNBWhiteList::kDataFieldNumber;
const int SFrameNBWhiteList::kImeiFieldNumber;
const int SFrameNBWhiteList::kResidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameNBWhiteList::SFrameNBWhiteList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameNBWhiteList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameNBWhiteList)
}
SFrameNBWhiteList::SFrameNBWhiteList(const SFrameNBWhiteList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imei().size() > 0) {
    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  resid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resid().size() > 0) {
    resid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resid_);
  }
  cardsareadeviceid_ = from.cardsareadeviceid_;
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameNBWhiteList)
}

void SFrameNBWhiteList::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cardsareadeviceid_ = GOOGLE_ULONGLONG(0);
}

SFrameNBWhiteList::~SFrameNBWhiteList() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameNBWhiteList)
  SharedDtor();
}

void SFrameNBWhiteList::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SFrameNBWhiteList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameNBWhiteList::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameNBWhiteList& SFrameNBWhiteList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameNBWhiteList.base);
  return *internal_default_instance();
}


void SFrameNBWhiteList::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameNBWhiteList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cardsareadeviceid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SFrameNBWhiteList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameNBWhiteList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 CardsAreaDeviceID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cardsareadeviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SFrameNBWhiteList.Data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Imei = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imei().data(), static_cast<int>(this->imei().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SFrameNBWhiteList.Imei"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string resid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resid().data(), static_cast<int>(this->resid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SFrameNBWhiteList.resid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameNBWhiteList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameNBWhiteList)
  return false;
#undef DO_
}

void SFrameNBWhiteList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameNBWhiteList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 CardsAreaDeviceID = 1;
  if (this->cardsareadeviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->cardsareadeviceid(), output);
  }

  // string Data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameNBWhiteList.Data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  // string Imei = 3;
  if (this->imei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameNBWhiteList.Imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->imei(), output);
  }

  // string resid = 4;
  if (this->resid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resid().data(), static_cast<int>(this->resid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameNBWhiteList.resid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->resid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameNBWhiteList)
}

::google::protobuf::uint8* SFrameNBWhiteList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameNBWhiteList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 CardsAreaDeviceID = 1;
  if (this->cardsareadeviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->cardsareadeviceid(), target);
  }

  // string Data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameNBWhiteList.Data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  // string Imei = 3;
  if (this->imei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameNBWhiteList.Imei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->imei(), target);
  }

  // string resid = 4;
  if (this->resid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resid().data(), static_cast<int>(this->resid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameNBWhiteList.resid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->resid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameNBWhiteList)
  return target;
}

size_t SFrameNBWhiteList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameNBWhiteList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  // string Imei = 3;
  if (this->imei().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imei());
  }

  // string resid = 4;
  if (this->resid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resid());
  }

  // uint64 CardsAreaDeviceID = 1;
  if (this->cardsareadeviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cardsareadeviceid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameNBWhiteList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameNBWhiteList)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameNBWhiteList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameNBWhiteList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameNBWhiteList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameNBWhiteList)
    MergeFrom(*source);
  }
}

void SFrameNBWhiteList::MergeFrom(const SFrameNBWhiteList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameNBWhiteList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.imei().size() > 0) {

    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  if (from.resid().size() > 0) {

    resid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resid_);
  }
  if (from.cardsareadeviceid() != 0) {
    set_cardsareadeviceid(from.cardsareadeviceid());
  }
}

void SFrameNBWhiteList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameNBWhiteList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameNBWhiteList::CopyFrom(const SFrameNBWhiteList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameNBWhiteList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameNBWhiteList::IsInitialized() const {
  return true;
}

void SFrameNBWhiteList::Swap(SFrameNBWhiteList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameNBWhiteList::InternalSwap(SFrameNBWhiteList* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  imei_.Swap(&other->imei_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  resid_.Swap(&other->resid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cardsareadeviceid_, other->cardsareadeviceid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameNBWhiteList::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameNBWhiteListAnswer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameNBWhiteListAnswer::kStateFieldNumber;
const int SFrameNBWhiteListAnswer::kCardsAreaDeviceIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameNBWhiteListAnswer::SFrameNBWhiteListAnswer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameNBWhiteListAnswer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameNBWhiteListAnswer)
}
SFrameNBWhiteListAnswer::SFrameNBWhiteListAnswer(const SFrameNBWhiteListAnswer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cardsareadeviceid_, &from.cardsareadeviceid_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&cardsareadeviceid_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameNBWhiteListAnswer)
}

void SFrameNBWhiteListAnswer::SharedCtor() {
  ::memset(&cardsareadeviceid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&cardsareadeviceid_)) + sizeof(state_));
}

SFrameNBWhiteListAnswer::~SFrameNBWhiteListAnswer() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameNBWhiteListAnswer)
  SharedDtor();
}

void SFrameNBWhiteListAnswer::SharedDtor() {
}

void SFrameNBWhiteListAnswer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameNBWhiteListAnswer::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameNBWhiteListAnswer& SFrameNBWhiteListAnswer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameNBWhiteListAnswer.base);
  return *internal_default_instance();
}


void SFrameNBWhiteListAnswer::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameNBWhiteListAnswer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cardsareadeviceid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&cardsareadeviceid_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool SFrameNBWhiteListAnswer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameNBWhiteListAnswer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 CardsAreaDeviceID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cardsareadeviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameNBWhiteListAnswer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameNBWhiteListAnswer)
  return false;
#undef DO_
}

void SFrameNBWhiteListAnswer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameNBWhiteListAnswer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 State = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->state(), output);
  }

  // uint64 CardsAreaDeviceID = 2;
  if (this->cardsareadeviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->cardsareadeviceid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameNBWhiteListAnswer)
}

::google::protobuf::uint8* SFrameNBWhiteListAnswer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameNBWhiteListAnswer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 State = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->state(), target);
  }

  // uint64 CardsAreaDeviceID = 2;
  if (this->cardsareadeviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->cardsareadeviceid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameNBWhiteListAnswer)
  return target;
}

size_t SFrameNBWhiteListAnswer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameNBWhiteListAnswer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 CardsAreaDeviceID = 2;
  if (this->cardsareadeviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cardsareadeviceid());
  }

  // int32 State = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameNBWhiteListAnswer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameNBWhiteListAnswer)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameNBWhiteListAnswer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameNBWhiteListAnswer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameNBWhiteListAnswer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameNBWhiteListAnswer)
    MergeFrom(*source);
  }
}

void SFrameNBWhiteListAnswer::MergeFrom(const SFrameNBWhiteListAnswer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameNBWhiteListAnswer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cardsareadeviceid() != 0) {
    set_cardsareadeviceid(from.cardsareadeviceid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SFrameNBWhiteListAnswer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameNBWhiteListAnswer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameNBWhiteListAnswer::CopyFrom(const SFrameNBWhiteListAnswer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameNBWhiteListAnswer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameNBWhiteListAnswer::IsInitialized() const {
  return true;
}

void SFrameNBWhiteListAnswer::Swap(SFrameNBWhiteListAnswer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameNBWhiteListAnswer::InternalSwap(SFrameNBWhiteListAnswer* other) {
  using std::swap;
  swap(cardsareadeviceid_, other->cardsareadeviceid_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameNBWhiteListAnswer::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameFaceRecognition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameFaceRecognition::kDownUrlFieldNumber;
const int SFrameFaceRecognition::kUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameFaceRecognition::SFrameFaceRecognition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameFaceRecognition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameFaceRecognition)
}
SFrameFaceRecognition::SFrameFaceRecognition(const SFrameFaceRecognition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  downurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.downurl().size() > 0) {
    downurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downurl_);
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameFaceRecognition)
}

void SFrameFaceRecognition::SharedCtor() {
  downurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = GOOGLE_ULONGLONG(0);
}

SFrameFaceRecognition::~SFrameFaceRecognition() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameFaceRecognition)
  SharedDtor();
}

void SFrameFaceRecognition::SharedDtor() {
  downurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SFrameFaceRecognition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameFaceRecognition::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameFaceRecognition& SFrameFaceRecognition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameFaceRecognition.base);
  return *internal_default_instance();
}


void SFrameFaceRecognition::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameFaceRecognition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  downurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SFrameFaceRecognition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameFaceRecognition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string DownUrl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_downurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->downurl().data(), static_cast<int>(this->downurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SFrameFaceRecognition.DownUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 UserID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameFaceRecognition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameFaceRecognition)
  return false;
#undef DO_
}

void SFrameFaceRecognition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameFaceRecognition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string DownUrl = 1;
  if (this->downurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->downurl().data(), static_cast<int>(this->downurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameFaceRecognition.DownUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->downurl(), output);
  }

  // uint64 UserID = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->userid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameFaceRecognition)
}

::google::protobuf::uint8* SFrameFaceRecognition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameFaceRecognition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string DownUrl = 1;
  if (this->downurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->downurl().data(), static_cast<int>(this->downurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameFaceRecognition.DownUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->downurl(), target);
  }

  // uint64 UserID = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->userid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameFaceRecognition)
  return target;
}

size_t SFrameFaceRecognition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameFaceRecognition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string DownUrl = 1;
  if (this->downurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->downurl());
  }

  // uint64 UserID = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameFaceRecognition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameFaceRecognition)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameFaceRecognition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameFaceRecognition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameFaceRecognition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameFaceRecognition)
    MergeFrom(*source);
  }
}

void SFrameFaceRecognition::MergeFrom(const SFrameFaceRecognition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameFaceRecognition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.downurl().size() > 0) {

    downurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downurl_);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void SFrameFaceRecognition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameFaceRecognition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameFaceRecognition::CopyFrom(const SFrameFaceRecognition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameFaceRecognition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameFaceRecognition::IsInitialized() const {
  return true;
}

void SFrameFaceRecognition::Swap(SFrameFaceRecognition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameFaceRecognition::InternalSwap(SFrameFaceRecognition* other) {
  using std::swap;
  downurl_.Swap(&other->downurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameFaceRecognition::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameFaceRecognitionAnswer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameFaceRecognitionAnswer::kCharacteristicCodeUrlFieldNumber;
const int SFrameFaceRecognitionAnswer::kUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameFaceRecognitionAnswer::SFrameFaceRecognitionAnswer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameFaceRecognitionAnswer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameFaceRecognitionAnswer)
}
SFrameFaceRecognitionAnswer::SFrameFaceRecognitionAnswer(const SFrameFaceRecognitionAnswer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  characteristiccodeurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.characteristiccodeurl().size() > 0) {
    characteristiccodeurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.characteristiccodeurl_);
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameFaceRecognitionAnswer)
}

void SFrameFaceRecognitionAnswer::SharedCtor() {
  characteristiccodeurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = GOOGLE_ULONGLONG(0);
}

SFrameFaceRecognitionAnswer::~SFrameFaceRecognitionAnswer() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameFaceRecognitionAnswer)
  SharedDtor();
}

void SFrameFaceRecognitionAnswer::SharedDtor() {
  characteristiccodeurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SFrameFaceRecognitionAnswer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameFaceRecognitionAnswer::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameFaceRecognitionAnswer& SFrameFaceRecognitionAnswer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameFaceRecognitionAnswer.base);
  return *internal_default_instance();
}


void SFrameFaceRecognitionAnswer::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameFaceRecognitionAnswer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  characteristiccodeurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SFrameFaceRecognitionAnswer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameFaceRecognitionAnswer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string CharacteristicCodeUrl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_characteristiccodeurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->characteristiccodeurl().data(), static_cast<int>(this->characteristiccodeurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SFrameFaceRecognitionAnswer.CharacteristicCodeUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 UserID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameFaceRecognitionAnswer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameFaceRecognitionAnswer)
  return false;
#undef DO_
}

void SFrameFaceRecognitionAnswer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameFaceRecognitionAnswer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string CharacteristicCodeUrl = 1;
  if (this->characteristiccodeurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->characteristiccodeurl().data(), static_cast<int>(this->characteristiccodeurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameFaceRecognitionAnswer.CharacteristicCodeUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->characteristiccodeurl(), output);
  }

  // uint64 UserID = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->userid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameFaceRecognitionAnswer)
}

::google::protobuf::uint8* SFrameFaceRecognitionAnswer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameFaceRecognitionAnswer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string CharacteristicCodeUrl = 1;
  if (this->characteristiccodeurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->characteristiccodeurl().data(), static_cast<int>(this->characteristiccodeurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFrameFaceRecognitionAnswer.CharacteristicCodeUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->characteristiccodeurl(), target);
  }

  // uint64 UserID = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->userid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameFaceRecognitionAnswer)
  return target;
}

size_t SFrameFaceRecognitionAnswer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameFaceRecognitionAnswer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string CharacteristicCodeUrl = 1;
  if (this->characteristiccodeurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->characteristiccodeurl());
  }

  // uint64 UserID = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameFaceRecognitionAnswer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameFaceRecognitionAnswer)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameFaceRecognitionAnswer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameFaceRecognitionAnswer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameFaceRecognitionAnswer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameFaceRecognitionAnswer)
    MergeFrom(*source);
  }
}

void SFrameFaceRecognitionAnswer::MergeFrom(const SFrameFaceRecognitionAnswer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameFaceRecognitionAnswer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.characteristiccodeurl().size() > 0) {

    characteristiccodeurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.characteristiccodeurl_);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void SFrameFaceRecognitionAnswer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameFaceRecognitionAnswer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameFaceRecognitionAnswer::CopyFrom(const SFrameFaceRecognitionAnswer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameFaceRecognitionAnswer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameFaceRecognitionAnswer::IsInitialized() const {
  return true;
}

void SFrameFaceRecognitionAnswer::Swap(SFrameFaceRecognitionAnswer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameFaceRecognitionAnswer::InternalSwap(SFrameFaceRecognitionAnswer* other) {
  using std::swap;
  characteristiccodeurl_.Swap(&other->characteristiccodeurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameFaceRecognitionAnswer::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameJgPushRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameJgPushRecord::kJgPushRecordlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameJgPushRecord::SFrameJgPushRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameJgPushRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameJgPushRecord)
}
SFrameJgPushRecord::SFrameJgPushRecord(const SFrameJgPushRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      jgpushrecordlist_(from.jgpushrecordlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameJgPushRecord)
}

void SFrameJgPushRecord::SharedCtor() {
}

SFrameJgPushRecord::~SFrameJgPushRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameJgPushRecord)
  SharedDtor();
}

void SFrameJgPushRecord::SharedDtor() {
}

void SFrameJgPushRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameJgPushRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameJgPushRecord& SFrameJgPushRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameJgPushRecord.base);
  return *internal_default_instance();
}


void SFrameJgPushRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameJgPushRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  jgpushrecordlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameJgPushRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameJgPushRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.JgPushRecord JgPushRecordlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_jgpushrecordlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameJgPushRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameJgPushRecord)
  return false;
#undef DO_
}

void SFrameJgPushRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameJgPushRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.JgPushRecord JgPushRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jgpushrecordlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->jgpushrecordlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameJgPushRecord)
}

::google::protobuf::uint8* SFrameJgPushRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameJgPushRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.JgPushRecord JgPushRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jgpushrecordlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->jgpushrecordlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameJgPushRecord)
  return target;
}

size_t SFrameJgPushRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameJgPushRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.JgPushRecord JgPushRecordlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->jgpushrecordlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->jgpushrecordlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameJgPushRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameJgPushRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameJgPushRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameJgPushRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameJgPushRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameJgPushRecord)
    MergeFrom(*source);
  }
}

void SFrameJgPushRecord::MergeFrom(const SFrameJgPushRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameJgPushRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  jgpushrecordlist_.MergeFrom(from.jgpushrecordlist_);
}

void SFrameJgPushRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameJgPushRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameJgPushRecord::CopyFrom(const SFrameJgPushRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameJgPushRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameJgPushRecord::IsInitialized() const {
  return true;
}

void SFrameJgPushRecord::Swap(SFrameJgPushRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameJgPushRecord::InternalSwap(SFrameJgPushRecord* other) {
  using std::swap;
  CastToBase(&jgpushrecordlist_)->InternalSwap(CastToBase(&other->jgpushrecordlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameJgPushRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JgPushRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JgPushRecord::kIdFieldNumber;
const int JgPushRecord::kPushTypeFieldNumber;
const int JgPushRecord::kActionTypeFieldNumber;
const int JgPushRecord::kAlertFieldNumber;
const int JgPushRecord::kTitleFieldNumber;
const int JgPushRecord::kContentFieldNumber;
const int JgPushRecord::kContentTitleFieldNumber;
const int JgPushRecord::kTagAliasFieldNumber;
const int JgPushRecord::kPushAppTypeFieldNumber;
const int JgPushRecord::kPushTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JgPushRecord::JgPushRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_JgPushRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.JgPushRecord)
}
JgPushRecord::JgPushRecord(const JgPushRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  alert_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alert().size() > 0) {
    alert_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alert_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  contenttitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contenttitle().size() > 0) {
    contenttitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contenttitle_);
  }
  tagalias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tagalias().size() > 0) {
    tagalias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tagalias_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&pushapptype_) -
    reinterpret_cast<char*>(&id_)) + sizeof(pushapptype_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.JgPushRecord)
}

void JgPushRecord::SharedCtor() {
  alert_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contenttitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tagalias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pushapptype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(pushapptype_));
}

JgPushRecord::~JgPushRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.JgPushRecord)
  SharedDtor();
}

void JgPushRecord::SharedDtor() {
  alert_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contenttitle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tagalias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JgPushRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JgPushRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JgPushRecord& JgPushRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_JgPushRecord.base);
  return *internal_default_instance();
}


void JgPushRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.JgPushRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alert_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contenttitle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tagalias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pushapptype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(pushapptype_));
  _internal_metadata_.Clear();
}

bool JgPushRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.JgPushRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PushType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pushtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ActionType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actiontype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Alert = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alert()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alert().data(), static_cast<int>(this->alert().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.JgPushRecord.Alert"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Title = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.JgPushRecord.Title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Content = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.JgPushRecord.Content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ContentTitle = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contenttitle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contenttitle().data(), static_cast<int>(this->contenttitle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.JgPushRecord.ContentTitle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string TagAlias = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tagalias()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tagalias().data(), static_cast<int>(this->tagalias().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.JgPushRecord.TagAlias"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PushAppType = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pushapptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 PushTime = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pushtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.JgPushRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.JgPushRecord)
  return false;
#undef DO_
}

void JgPushRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.JgPushRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // int32 PushType = 2;
  if (this->pushtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pushtype(), output);
  }

  // int32 ActionType = 3;
  if (this->actiontype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->actiontype(), output);
  }

  // string Alert = 4;
  if (this->alert().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alert().data(), static_cast<int>(this->alert().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.JgPushRecord.Alert");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->alert(), output);
  }

  // string Title = 5;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.JgPushRecord.Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->title(), output);
  }

  // string Content = 6;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.JgPushRecord.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->content(), output);
  }

  // string ContentTitle = 7;
  if (this->contenttitle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contenttitle().data(), static_cast<int>(this->contenttitle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.JgPushRecord.ContentTitle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->contenttitle(), output);
  }

  // string TagAlias = 8;
  if (this->tagalias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tagalias().data(), static_cast<int>(this->tagalias().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.JgPushRecord.TagAlias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->tagalias(), output);
  }

  // int32 PushAppType = 9;
  if (this->pushapptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->pushapptype(), output);
  }

  // int64 PushTime = 10;
  if (this->pushtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->pushtime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.JgPushRecord)
}

::google::protobuf::uint8* JgPushRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.JgPushRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // int32 PushType = 2;
  if (this->pushtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pushtype(), target);
  }

  // int32 ActionType = 3;
  if (this->actiontype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->actiontype(), target);
  }

  // string Alert = 4;
  if (this->alert().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alert().data(), static_cast<int>(this->alert().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.JgPushRecord.Alert");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->alert(), target);
  }

  // string Title = 5;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.JgPushRecord.Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->title(), target);
  }

  // string Content = 6;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.JgPushRecord.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->content(), target);
  }

  // string ContentTitle = 7;
  if (this->contenttitle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contenttitle().data(), static_cast<int>(this->contenttitle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.JgPushRecord.ContentTitle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->contenttitle(), target);
  }

  // string TagAlias = 8;
  if (this->tagalias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tagalias().data(), static_cast<int>(this->tagalias().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.JgPushRecord.TagAlias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->tagalias(), target);
  }

  // int32 PushAppType = 9;
  if (this->pushapptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->pushapptype(), target);
  }

  // int64 PushTime = 10;
  if (this->pushtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->pushtime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.JgPushRecord)
  return target;
}

size_t JgPushRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.JgPushRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Alert = 4;
  if (this->alert().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alert());
  }

  // string Title = 5;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string Content = 6;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // string ContentTitle = 7;
  if (this->contenttitle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contenttitle());
  }

  // string TagAlias = 8;
  if (this->tagalias().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tagalias());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 PushType = 2;
  if (this->pushtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pushtype());
  }

  // int32 ActionType = 3;
  if (this->actiontype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actiontype());
  }

  // int64 PushTime = 10;
  if (this->pushtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pushtime());
  }

  // int32 PushAppType = 9;
  if (this->pushapptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pushapptype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JgPushRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.JgPushRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const JgPushRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JgPushRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.JgPushRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.JgPushRecord)
    MergeFrom(*source);
  }
}

void JgPushRecord::MergeFrom(const JgPushRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.JgPushRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.alert().size() > 0) {

    alert_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alert_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.contenttitle().size() > 0) {

    contenttitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contenttitle_);
  }
  if (from.tagalias().size() > 0) {

    tagalias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tagalias_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.pushtype() != 0) {
    set_pushtype(from.pushtype());
  }
  if (from.actiontype() != 0) {
    set_actiontype(from.actiontype());
  }
  if (from.pushtime() != 0) {
    set_pushtime(from.pushtime());
  }
  if (from.pushapptype() != 0) {
    set_pushapptype(from.pushapptype());
  }
}

void JgPushRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.JgPushRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JgPushRecord::CopyFrom(const JgPushRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.JgPushRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JgPushRecord::IsInitialized() const {
  return true;
}

void JgPushRecord::Swap(JgPushRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JgPushRecord::InternalSwap(JgPushRecord* other) {
  using std::swap;
  alert_.Swap(&other->alert_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contenttitle_.Swap(&other->contenttitle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tagalias_.Swap(&other->tagalias_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(pushtype_, other->pushtype_);
  swap(actiontype_, other->actiontype_);
  swap(pushtime_, other->pushtime_);
  swap(pushapptype_, other->pushapptype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JgPushRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameVersionRangle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameVersionRangle::kVersionRanglelistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameVersionRangle::SFrameVersionRangle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameVersionRangle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameVersionRangle)
}
SFrameVersionRangle::SFrameVersionRangle(const SFrameVersionRangle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      versionranglelist_(from.versionranglelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameVersionRangle)
}

void SFrameVersionRangle::SharedCtor() {
}

SFrameVersionRangle::~SFrameVersionRangle() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameVersionRangle)
  SharedDtor();
}

void SFrameVersionRangle::SharedDtor() {
}

void SFrameVersionRangle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameVersionRangle::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameVersionRangle& SFrameVersionRangle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameVersionRangle.base);
  return *internal_default_instance();
}


void SFrameVersionRangle::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameVersionRangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  versionranglelist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameVersionRangle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameVersionRangle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.VersionRangle VersionRanglelist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_versionranglelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameVersionRangle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameVersionRangle)
  return false;
#undef DO_
}

void SFrameVersionRangle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameVersionRangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.VersionRangle VersionRanglelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->versionranglelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->versionranglelist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameVersionRangle)
}

::google::protobuf::uint8* SFrameVersionRangle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameVersionRangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.VersionRangle VersionRanglelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->versionranglelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->versionranglelist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameVersionRangle)
  return target;
}

size_t SFrameVersionRangle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameVersionRangle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.VersionRangle VersionRanglelist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->versionranglelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->versionranglelist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameVersionRangle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameVersionRangle)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameVersionRangle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameVersionRangle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameVersionRangle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameVersionRangle)
    MergeFrom(*source);
  }
}

void SFrameVersionRangle::MergeFrom(const SFrameVersionRangle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameVersionRangle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  versionranglelist_.MergeFrom(from.versionranglelist_);
}

void SFrameVersionRangle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameVersionRangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameVersionRangle::CopyFrom(const SFrameVersionRangle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameVersionRangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameVersionRangle::IsInitialized() const {
  return true;
}

void SFrameVersionRangle::Swap(SFrameVersionRangle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameVersionRangle::InternalSwap(SFrameVersionRangle* other) {
  using std::swap;
  CastToBase(&versionranglelist_)->InternalSwap(CastToBase(&other->versionranglelist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameVersionRangle::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VersionRangle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VersionRangle::kIdFieldNumber;
const int VersionRangle::kVerIDFieldNumber;
const int VersionRangle::kUserIDFieldNumber;
const int VersionRangle::kStateFieldNumber;
const int VersionRangle::kUserTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VersionRangle::VersionRangle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_VersionRangle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.VersionRangle)
}
VersionRangle::VersionRangle(const VersionRangle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&usertype_) -
    reinterpret_cast<char*>(&id_)) + sizeof(usertype_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.VersionRangle)
}

void VersionRangle::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usertype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(usertype_));
}

VersionRangle::~VersionRangle() {
  // @@protoc_insertion_point(destructor:ServerProtocol.VersionRangle)
  SharedDtor();
}

void VersionRangle::SharedDtor() {
}

void VersionRangle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VersionRangle::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VersionRangle& VersionRangle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_VersionRangle.base);
  return *internal_default_instance();
}


void VersionRangle::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.VersionRangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usertype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(usertype_));
  _internal_metadata_.Clear();
}

bool VersionRangle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.VersionRangle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 VerID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &verid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 UserID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 UserType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.VersionRangle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.VersionRangle)
  return false;
#undef DO_
}

void VersionRangle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.VersionRangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 VerID = 2;
  if (this->verid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->verid(), output);
  }

  // uint64 UserID = 3;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->userid(), output);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  // int32 UserType = 5;
  if (this->usertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->usertype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.VersionRangle)
}

::google::protobuf::uint8* VersionRangle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.VersionRangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 VerID = 2;
  if (this->verid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->verid(), target);
  }

  // uint64 UserID = 3;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->userid(), target);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  // int32 UserType = 5;
  if (this->usertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->usertype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.VersionRangle)
  return target;
}

size_t VersionRangle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.VersionRangle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 VerID = 2;
  if (this->verid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->verid());
  }

  // uint64 UserID = 3;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // int32 State = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int32 UserType = 5;
  if (this->usertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->usertype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VersionRangle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.VersionRangle)
  GOOGLE_DCHECK_NE(&from, this);
  const VersionRangle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VersionRangle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.VersionRangle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.VersionRangle)
    MergeFrom(*source);
  }
}

void VersionRangle::MergeFrom(const VersionRangle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.VersionRangle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.verid() != 0) {
    set_verid(from.verid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.usertype() != 0) {
    set_usertype(from.usertype());
  }
}

void VersionRangle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.VersionRangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionRangle::CopyFrom(const VersionRangle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.VersionRangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionRangle::IsInitialized() const {
  return true;
}

void VersionRangle::Swap(VersionRangle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VersionRangle::InternalSwap(VersionRangle* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(verid_, other->verid_);
  swap(userid_, other->userid_);
  swap(state_, other->state_);
  swap(usertype_, other->usertype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VersionRangle::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameVersion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameVersion::kVersionlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameVersion::SFrameVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameVersion.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameVersion)
}
SFrameVersion::SFrameVersion(const SFrameVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      versionlist_(from.versionlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameVersion)
}

void SFrameVersion::SharedCtor() {
}

SFrameVersion::~SFrameVersion() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameVersion)
  SharedDtor();
}

void SFrameVersion::SharedDtor() {
}

void SFrameVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameVersion::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameVersion& SFrameVersion::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameVersion.base);
  return *internal_default_instance();
}


void SFrameVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  versionlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameVersion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.Version Versionlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_versionlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameVersion)
  return false;
#undef DO_
}

void SFrameVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.Version Versionlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->versionlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->versionlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameVersion)
}

::google::protobuf::uint8* SFrameVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.Version Versionlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->versionlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->versionlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameVersion)
  return target;
}

size_t SFrameVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameVersion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.Version Versionlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->versionlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->versionlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameVersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameVersion)
    MergeFrom(*source);
  }
}

void SFrameVersion::MergeFrom(const SFrameVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  versionlist_.MergeFrom(from.versionlist_);
}

void SFrameVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameVersion::CopyFrom(const SFrameVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameVersion::IsInitialized() const {
  return true;
}

void SFrameVersion::Swap(SFrameVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameVersion::InternalSwap(SFrameVersion* other) {
  using std::swap;
  CastToBase(&versionlist_)->InternalSwap(CastToBase(&other->versionlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameVersion::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Version::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Version::kIdFieldNumber;
const int Version::kProductTypeFieldNumber;
const int Version::kReleaseModeFieldNumber;
const int Version::kMandatoryStateFieldNumber;
const int Version::kUpdateRangeFieldNumber;
const int Version::kUrlFieldNumber;
const int Version::kVersionCodeFieldNumber;
const int Version::kFileSizeFieldNumber;
const int Version::kUpTimeFieldNumber;
const int Version::kLogFieldNumber;
const int Version::kStateFieldNumber;
const int Version::kUpdateCountFieldNumber;
const int Version::kProductNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Version::Version()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_Version.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.Version)
}
Version::Version(const Version& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  log_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log().size() > 0) {
    log_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_);
  }
  productname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productname().size() > 0) {
    productname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productname_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&updatecount_) -
    reinterpret_cast<char*>(&id_)) + sizeof(updatecount_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.Version)
}

void Version::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updatecount_) -
      reinterpret_cast<char*>(&id_)) + sizeof(updatecount_));
}

Version::~Version() {
  // @@protoc_insertion_point(destructor:ServerProtocol.Version)
  SharedDtor();
}

void Version::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Version::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Version::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Version& Version::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_Version.base);
  return *internal_default_instance();
}


void Version::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updatecount_) -
      reinterpret_cast<char*>(&id_)) + sizeof(updatecount_));
  _internal_metadata_.Clear();
}

bool Version::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.Version)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ProductType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &producttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ReleaseMode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &releasemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MandatoryState = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mandatorystate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 UpdateRange = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &updaterange_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Url = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.Version.Url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 VersionCode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &versioncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 FileSize = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 UpTime = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uptime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Log = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log().data(), static_cast<int>(this->log().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.Version.Log"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 UpdateCount = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &updatecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ProductName = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productname().data(), static_cast<int>(this->productname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.Version.ProductName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.Version)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.Version)
  return false;
#undef DO_
}

void Version::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // int32 ProductType = 2;
  if (this->producttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->producttype(), output);
  }

  // int32 ReleaseMode = 3;
  if (this->releasemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->releasemode(), output);
  }

  // int32 MandatoryState = 4;
  if (this->mandatorystate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mandatorystate(), output);
  }

  // int32 UpdateRange = 5;
  if (this->updaterange() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->updaterange(), output);
  }

  // string Url = 6;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.Version.Url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->url(), output);
  }

  // int64 VersionCode = 7;
  if (this->versioncode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->versioncode(), output);
  }

  // int64 FileSize = 8;
  if (this->filesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->filesize(), output);
  }

  // int64 UpTime = 9;
  if (this->uptime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->uptime(), output);
  }

  // string Log = 10;
  if (this->log().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log().data(), static_cast<int>(this->log().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.Version.Log");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->log(), output);
  }

  // int32 State = 11;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->state(), output);
  }

  // int32 UpdateCount = 12;
  if (this->updatecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->updatecount(), output);
  }

  // string ProductName = 13;
  if (this->productname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productname().data(), static_cast<int>(this->productname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.Version.ProductName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->productname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.Version)
}

::google::protobuf::uint8* Version::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // int32 ProductType = 2;
  if (this->producttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->producttype(), target);
  }

  // int32 ReleaseMode = 3;
  if (this->releasemode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->releasemode(), target);
  }

  // int32 MandatoryState = 4;
  if (this->mandatorystate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mandatorystate(), target);
  }

  // int32 UpdateRange = 5;
  if (this->updaterange() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->updaterange(), target);
  }

  // string Url = 6;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.Version.Url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->url(), target);
  }

  // int64 VersionCode = 7;
  if (this->versioncode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->versioncode(), target);
  }

  // int64 FileSize = 8;
  if (this->filesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->filesize(), target);
  }

  // int64 UpTime = 9;
  if (this->uptime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->uptime(), target);
  }

  // string Log = 10;
  if (this->log().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log().data(), static_cast<int>(this->log().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.Version.Log");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->log(), target);
  }

  // int32 State = 11;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->state(), target);
  }

  // int32 UpdateCount = 12;
  if (this->updatecount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->updatecount(), target);
  }

  // string ProductName = 13;
  if (this->productname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productname().data(), static_cast<int>(this->productname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.Version.ProductName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->productname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.Version)
  return target;
}

size_t Version::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.Version)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Url = 6;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // string Log = 10;
  if (this->log().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log());
  }

  // string ProductName = 13;
  if (this->productname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productname());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 ProductType = 2;
  if (this->producttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->producttype());
  }

  // int32 ReleaseMode = 3;
  if (this->releasemode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->releasemode());
  }

  // int32 MandatoryState = 4;
  if (this->mandatorystate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mandatorystate());
  }

  // int32 UpdateRange = 5;
  if (this->updaterange() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->updaterange());
  }

  // int64 VersionCode = 7;
  if (this->versioncode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->versioncode());
  }

  // int64 FileSize = 8;
  if (this->filesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->filesize());
  }

  // int64 UpTime = 9;
  if (this->uptime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uptime());
  }

  // int32 State = 11;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int32 UpdateCount = 12;
  if (this->updatecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->updatecount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Version::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.Version)
  GOOGLE_DCHECK_NE(&from, this);
  const Version* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Version>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.Version)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.Version)
    MergeFrom(*source);
  }
}

void Version::MergeFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.Version)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.log().size() > 0) {

    log_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_);
  }
  if (from.productname().size() > 0) {

    productname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productname_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.producttype() != 0) {
    set_producttype(from.producttype());
  }
  if (from.releasemode() != 0) {
    set_releasemode(from.releasemode());
  }
  if (from.mandatorystate() != 0) {
    set_mandatorystate(from.mandatorystate());
  }
  if (from.updaterange() != 0) {
    set_updaterange(from.updaterange());
  }
  if (from.versioncode() != 0) {
    set_versioncode(from.versioncode());
  }
  if (from.filesize() != 0) {
    set_filesize(from.filesize());
  }
  if (from.uptime() != 0) {
    set_uptime(from.uptime());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.updatecount() != 0) {
    set_updatecount(from.updatecount());
  }
}

void Version::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Version::CopyFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Version::IsInitialized() const {
  return true;
}

void Version::Swap(Version* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Version::InternalSwap(Version* other) {
  using std::swap;
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  log_.Swap(&other->log_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  productname_.Swap(&other->productname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(producttype_, other->producttype_);
  swap(releasemode_, other->releasemode_);
  swap(mandatorystate_, other->mandatorystate_);
  swap(updaterange_, other->updaterange_);
  swap(versioncode_, other->versioncode_);
  swap(filesize_, other->filesize_);
  swap(uptime_, other->uptime_);
  swap(state_, other->state_);
  swap(updatecount_, other->updatecount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Version::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameNoCreditEquip::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameNoCreditEquip::kNoCreditEquiplistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameNoCreditEquip::SFrameNoCreditEquip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameNoCreditEquip.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameNoCreditEquip)
}
SFrameNoCreditEquip::SFrameNoCreditEquip(const SFrameNoCreditEquip& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nocreditequiplist_(from.nocreditequiplist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameNoCreditEquip)
}

void SFrameNoCreditEquip::SharedCtor() {
}

SFrameNoCreditEquip::~SFrameNoCreditEquip() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameNoCreditEquip)
  SharedDtor();
}

void SFrameNoCreditEquip::SharedDtor() {
}

void SFrameNoCreditEquip::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameNoCreditEquip::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameNoCreditEquip& SFrameNoCreditEquip::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameNoCreditEquip.base);
  return *internal_default_instance();
}


void SFrameNoCreditEquip::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameNoCreditEquip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nocreditequiplist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameNoCreditEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameNoCreditEquip)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.NoCreditEquip NoCreditEquiplist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nocreditequiplist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameNoCreditEquip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameNoCreditEquip)
  return false;
#undef DO_
}

void SFrameNoCreditEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameNoCreditEquip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.NoCreditEquip NoCreditEquiplist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nocreditequiplist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->nocreditequiplist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameNoCreditEquip)
}

::google::protobuf::uint8* SFrameNoCreditEquip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameNoCreditEquip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.NoCreditEquip NoCreditEquiplist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nocreditequiplist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->nocreditequiplist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameNoCreditEquip)
  return target;
}

size_t SFrameNoCreditEquip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameNoCreditEquip)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.NoCreditEquip NoCreditEquiplist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nocreditequiplist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nocreditequiplist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameNoCreditEquip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameNoCreditEquip)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameNoCreditEquip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameNoCreditEquip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameNoCreditEquip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameNoCreditEquip)
    MergeFrom(*source);
  }
}

void SFrameNoCreditEquip::MergeFrom(const SFrameNoCreditEquip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameNoCreditEquip)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nocreditequiplist_.MergeFrom(from.nocreditequiplist_);
}

void SFrameNoCreditEquip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameNoCreditEquip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameNoCreditEquip::CopyFrom(const SFrameNoCreditEquip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameNoCreditEquip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameNoCreditEquip::IsInitialized() const {
  return true;
}

void SFrameNoCreditEquip::Swap(SFrameNoCreditEquip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameNoCreditEquip::InternalSwap(SFrameNoCreditEquip* other) {
  using std::swap;
  CastToBase(&nocreditequiplist_)->InternalSwap(CastToBase(&other->nocreditequiplist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameNoCreditEquip::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NoCreditEquip::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NoCreditEquip::kIdFieldNumber;
const int NoCreditEquip::kEuipMentFlagFieldNumber;
const int NoCreditEquip::kUserIDFieldNumber;
const int NoCreditEquip::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NoCreditEquip::NoCreditEquip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_NoCreditEquip.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.NoCreditEquip)
}
NoCreditEquip::NoCreditEquip(const NoCreditEquip& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  euipmentflag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.euipmentflag().size() > 0) {
    euipmentflag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.euipmentflag_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.NoCreditEquip)
}

void NoCreditEquip::SharedCtor() {
  euipmentflag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

NoCreditEquip::~NoCreditEquip() {
  // @@protoc_insertion_point(destructor:ServerProtocol.NoCreditEquip)
  SharedDtor();
}

void NoCreditEquip::SharedDtor() {
  euipmentflag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NoCreditEquip::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NoCreditEquip::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NoCreditEquip& NoCreditEquip::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_NoCreditEquip.base);
  return *internal_default_instance();
}


void NoCreditEquip::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.NoCreditEquip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  euipmentflag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool NoCreditEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.NoCreditEquip)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string EuipMentFlag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_euipmentflag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->euipmentflag().data(), static_cast<int>(this->euipmentflag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.NoCreditEquip.EuipMentFlag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 UserID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.NoCreditEquip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.NoCreditEquip)
  return false;
#undef DO_
}

void NoCreditEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.NoCreditEquip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string EuipMentFlag = 2;
  if (this->euipmentflag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->euipmentflag().data(), static_cast<int>(this->euipmentflag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.NoCreditEquip.EuipMentFlag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->euipmentflag(), output);
  }

  // uint64 UserID = 3;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->userid(), output);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.NoCreditEquip)
}

::google::protobuf::uint8* NoCreditEquip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.NoCreditEquip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string EuipMentFlag = 2;
  if (this->euipmentflag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->euipmentflag().data(), static_cast<int>(this->euipmentflag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.NoCreditEquip.EuipMentFlag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->euipmentflag(), target);
  }

  // uint64 UserID = 3;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->userid(), target);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.NoCreditEquip)
  return target;
}

size_t NoCreditEquip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.NoCreditEquip)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string EuipMentFlag = 2;
  if (this->euipmentflag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->euipmentflag());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 UserID = 3;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // int32 State = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NoCreditEquip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.NoCreditEquip)
  GOOGLE_DCHECK_NE(&from, this);
  const NoCreditEquip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NoCreditEquip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.NoCreditEquip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.NoCreditEquip)
    MergeFrom(*source);
  }
}

void NoCreditEquip::MergeFrom(const NoCreditEquip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.NoCreditEquip)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.euipmentflag().size() > 0) {

    euipmentflag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.euipmentflag_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void NoCreditEquip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.NoCreditEquip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NoCreditEquip::CopyFrom(const NoCreditEquip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.NoCreditEquip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NoCreditEquip::IsInitialized() const {
  return true;
}

void NoCreditEquip::Swap(NoCreditEquip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NoCreditEquip::InternalSwap(NoCreditEquip* other) {
  using std::swap;
  euipmentflag_.Swap(&other->euipmentflag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(userid_, other->userid_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NoCreditEquip::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameKeyShareRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameKeyShareRecord::kKeyShareRecordlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameKeyShareRecord::SFrameKeyShareRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameKeyShareRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameKeyShareRecord)
}
SFrameKeyShareRecord::SFrameKeyShareRecord(const SFrameKeyShareRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keysharerecordlist_(from.keysharerecordlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameKeyShareRecord)
}

void SFrameKeyShareRecord::SharedCtor() {
}

SFrameKeyShareRecord::~SFrameKeyShareRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameKeyShareRecord)
  SharedDtor();
}

void SFrameKeyShareRecord::SharedDtor() {
}

void SFrameKeyShareRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameKeyShareRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameKeyShareRecord& SFrameKeyShareRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameKeyShareRecord.base);
  return *internal_default_instance();
}


void SFrameKeyShareRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameKeyShareRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keysharerecordlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameKeyShareRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameKeyShareRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.KeyShareRecord KeyShareRecordlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keysharerecordlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameKeyShareRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameKeyShareRecord)
  return false;
#undef DO_
}

void SFrameKeyShareRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameKeyShareRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.KeyShareRecord KeyShareRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keysharerecordlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->keysharerecordlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameKeyShareRecord)
}

::google::protobuf::uint8* SFrameKeyShareRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameKeyShareRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.KeyShareRecord KeyShareRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keysharerecordlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->keysharerecordlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameKeyShareRecord)
  return target;
}

size_t SFrameKeyShareRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameKeyShareRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.KeyShareRecord KeyShareRecordlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->keysharerecordlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keysharerecordlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameKeyShareRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameKeyShareRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameKeyShareRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameKeyShareRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameKeyShareRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameKeyShareRecord)
    MergeFrom(*source);
  }
}

void SFrameKeyShareRecord::MergeFrom(const SFrameKeyShareRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameKeyShareRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keysharerecordlist_.MergeFrom(from.keysharerecordlist_);
}

void SFrameKeyShareRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameKeyShareRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameKeyShareRecord::CopyFrom(const SFrameKeyShareRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameKeyShareRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameKeyShareRecord::IsInitialized() const {
  return true;
}

void SFrameKeyShareRecord::Swap(SFrameKeyShareRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameKeyShareRecord::InternalSwap(SFrameKeyShareRecord* other) {
  using std::swap;
  CastToBase(&keysharerecordlist_)->InternalSwap(CastToBase(&other->keysharerecordlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameKeyShareRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyShareRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyShareRecord::kIdFieldNumber;
const int KeyShareRecord::kKeyIDFieldNumber;
const int KeyShareRecord::kCipherFieldNumber;
const int KeyShareRecord::kUserFromMobileFieldNumber;
const int KeyShareRecord::kUserNameFromFieldNumber;
const int KeyShareRecord::kCountryCodeFieldNumber;
const int KeyShareRecord::kUserToFieldNumber;
const int KeyShareRecord::kUserNameToFieldNumber;
const int KeyShareRecord::kAliasFieldNumber;
const int KeyShareRecord::kTypeFieldNumber;
const int KeyShareRecord::kLockStateFieldNumber;
const int KeyShareRecord::kStartTimeFieldNumber;
const int KeyShareRecord::kEndTimeFieldNumber;
const int KeyShareRecord::kIsShareableFieldNumber;
const int KeyShareRecord::kLockCodeFieldNumber;
const int KeyShareRecord::kCreateTimeFieldNumber;
const int KeyShareRecord::kIsShowFieldNumber;
const int KeyShareRecord::kSortFieldNumber;
const int KeyShareRecord::kIsNeedCheckInFieldNumber;
const int KeyShareRecord::kGroupIdFieldNumber;
const int KeyShareRecord::kGroupNameFieldNumber;
const int KeyShareRecord::kAuthTypeFieldNumber;
const int KeyShareRecord::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyShareRecord::KeyShareRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_KeyShareRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.KeyShareRecord)
}
KeyShareRecord::KeyShareRecord(const KeyShareRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  keyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.keyid().size() > 0) {
    keyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyid_);
  }
  cipher_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cipher().size() > 0) {
    cipher_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cipher_);
  }
  userfrommobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userfrommobile().size() > 0) {
    userfrommobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userfrommobile_);
  }
  usernamefrom_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.usernamefrom().size() > 0) {
    usernamefrom_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usernamefrom_);
  }
  userto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userto().size() > 0) {
    userto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userto_);
  }
  usernameto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.usernameto().size() > 0) {
    usernameto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usernameto_);
  }
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alias().size() > 0) {
    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  lockcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lockcode().size() > 0) {
    lockcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lockcode_);
  }
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.groupname().size() > 0) {
    groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.KeyShareRecord)
}

void KeyShareRecord::SharedCtor() {
  keyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cipher_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userfrommobile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usernamefrom_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usernameto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lockcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

KeyShareRecord::~KeyShareRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.KeyShareRecord)
  SharedDtor();
}

void KeyShareRecord::SharedDtor() {
  keyid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cipher_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userfrommobile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usernamefrom_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userto_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usernameto_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lockcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyShareRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyShareRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyShareRecord& KeyShareRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_KeyShareRecord.base);
  return *internal_default_instance();
}


void KeyShareRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.KeyShareRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cipher_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userfrommobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usernamefrom_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usernameto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lockcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool KeyShareRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.KeyShareRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string KeyID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keyid().data(), static_cast<int>(this->keyid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.KeyShareRecord.KeyID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Cipher = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cipher()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cipher().data(), static_cast<int>(this->cipher().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.KeyShareRecord.Cipher"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UserFromMobile = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userfrommobile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userfrommobile().data(), static_cast<int>(this->userfrommobile().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.KeyShareRecord.UserFromMobile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UserNameFrom = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usernamefrom()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usernamefrom().data(), static_cast<int>(this->usernamefrom().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.KeyShareRecord.UserNameFrom"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CountryCode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &countrycode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UserTo = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userto()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userto().data(), static_cast<int>(this->userto().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.KeyShareRecord.UserTo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UserNameTo = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usernameto()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usernameto().data(), static_cast<int>(this->usernameto().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.KeyShareRecord.UserNameTo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Alias = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alias().data(), static_cast<int>(this->alias().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.KeyShareRecord.Alias"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LockState = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lockstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 StartTime = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &starttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 EndTime = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &endtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 IsShareable = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isshareable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LockCode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lockcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lockcode().data(), static_cast<int>(this->lockcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.KeyShareRecord.LockCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 CreateTime = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 IsShow = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Sort = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sort_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 IsNeedCheckIn = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isneedcheckin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 GroupId = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string GroupName = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->groupname().data(), static_cast<int>(this->groupname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.KeyShareRecord.GroupName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 AuthType = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &authtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.KeyShareRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.KeyShareRecord)
  return false;
#undef DO_
}

void KeyShareRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.KeyShareRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string KeyID = 2;
  if (this->keyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyid().data(), static_cast<int>(this->keyid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.KeyID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->keyid(), output);
  }

  // string Cipher = 3;
  if (this->cipher().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cipher().data(), static_cast<int>(this->cipher().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.Cipher");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cipher(), output);
  }

  // string UserFromMobile = 4;
  if (this->userfrommobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userfrommobile().data(), static_cast<int>(this->userfrommobile().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.UserFromMobile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->userfrommobile(), output);
  }

  // string UserNameFrom = 5;
  if (this->usernamefrom().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usernamefrom().data(), static_cast<int>(this->usernamefrom().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.UserNameFrom");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->usernamefrom(), output);
  }

  // int32 CountryCode = 6;
  if (this->countrycode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->countrycode(), output);
  }

  // string UserTo = 7;
  if (this->userto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userto().data(), static_cast<int>(this->userto().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.UserTo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->userto(), output);
  }

  // string UserNameTo = 8;
  if (this->usernameto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usernameto().data(), static_cast<int>(this->usernameto().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.UserNameTo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->usernameto(), output);
  }

  // string Alias = 9;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.Alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->alias(), output);
  }

  // int32 Type = 10;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->type(), output);
  }

  // int32 LockState = 11;
  if (this->lockstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->lockstate(), output);
  }

  // int64 StartTime = 12;
  if (this->starttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->starttime(), output);
  }

  // int64 EndTime = 13;
  if (this->endtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->endtime(), output);
  }

  // int32 IsShareable = 14;
  if (this->isshareable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->isshareable(), output);
  }

  // string LockCode = 15;
  if (this->lockcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lockcode().data(), static_cast<int>(this->lockcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.LockCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->lockcode(), output);
  }

  // int64 CreateTime = 16;
  if (this->createtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->createtime(), output);
  }

  // int32 IsShow = 17;
  if (this->isshow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->isshow(), output);
  }

  // int32 Sort = 18;
  if (this->sort() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->sort(), output);
  }

  // int32 IsNeedCheckIn = 19;
  if (this->isneedcheckin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->isneedcheckin(), output);
  }

  // int64 GroupId = 20;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->groupid(), output);
  }

  // string GroupName = 21;
  if (this->groupname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groupname().data(), static_cast<int>(this->groupname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.GroupName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->groupname(), output);
  }

  // int32 AuthType = 22;
  if (this->authtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->authtype(), output);
  }

  // int32 State = 23;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.KeyShareRecord)
}

::google::protobuf::uint8* KeyShareRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.KeyShareRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string KeyID = 2;
  if (this->keyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyid().data(), static_cast<int>(this->keyid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.KeyID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->keyid(), target);
  }

  // string Cipher = 3;
  if (this->cipher().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cipher().data(), static_cast<int>(this->cipher().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.Cipher");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cipher(), target);
  }

  // string UserFromMobile = 4;
  if (this->userfrommobile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userfrommobile().data(), static_cast<int>(this->userfrommobile().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.UserFromMobile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->userfrommobile(), target);
  }

  // string UserNameFrom = 5;
  if (this->usernamefrom().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usernamefrom().data(), static_cast<int>(this->usernamefrom().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.UserNameFrom");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->usernamefrom(), target);
  }

  // int32 CountryCode = 6;
  if (this->countrycode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->countrycode(), target);
  }

  // string UserTo = 7;
  if (this->userto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userto().data(), static_cast<int>(this->userto().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.UserTo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->userto(), target);
  }

  // string UserNameTo = 8;
  if (this->usernameto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usernameto().data(), static_cast<int>(this->usernameto().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.UserNameTo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->usernameto(), target);
  }

  // string Alias = 9;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.Alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->alias(), target);
  }

  // int32 Type = 10;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->type(), target);
  }

  // int32 LockState = 11;
  if (this->lockstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->lockstate(), target);
  }

  // int64 StartTime = 12;
  if (this->starttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->starttime(), target);
  }

  // int64 EndTime = 13;
  if (this->endtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->endtime(), target);
  }

  // int32 IsShareable = 14;
  if (this->isshareable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->isshareable(), target);
  }

  // string LockCode = 15;
  if (this->lockcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lockcode().data(), static_cast<int>(this->lockcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.LockCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->lockcode(), target);
  }

  // int64 CreateTime = 16;
  if (this->createtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->createtime(), target);
  }

  // int32 IsShow = 17;
  if (this->isshow() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->isshow(), target);
  }

  // int32 Sort = 18;
  if (this->sort() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->sort(), target);
  }

  // int32 IsNeedCheckIn = 19;
  if (this->isneedcheckin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->isneedcheckin(), target);
  }

  // int64 GroupId = 20;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(20, this->groupid(), target);
  }

  // string GroupName = 21;
  if (this->groupname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groupname().data(), static_cast<int>(this->groupname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.KeyShareRecord.GroupName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->groupname(), target);
  }

  // int32 AuthType = 22;
  if (this->authtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->authtype(), target);
  }

  // int32 State = 23;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.KeyShareRecord)
  return target;
}

size_t KeyShareRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.KeyShareRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string KeyID = 2;
  if (this->keyid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->keyid());
  }

  // string Cipher = 3;
  if (this->cipher().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cipher());
  }

  // string UserFromMobile = 4;
  if (this->userfrommobile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userfrommobile());
  }

  // string UserNameFrom = 5;
  if (this->usernamefrom().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usernamefrom());
  }

  // string UserTo = 7;
  if (this->userto().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userto());
  }

  // string UserNameTo = 8;
  if (this->usernameto().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usernameto());
  }

  // string Alias = 9;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alias());
  }

  // string LockCode = 15;
  if (this->lockcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lockcode());
  }

  // string GroupName = 21;
  if (this->groupname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->groupname());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 CountryCode = 6;
  if (this->countrycode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->countrycode());
  }

  // int32 Type = 10;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int64 StartTime = 12;
  if (this->starttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->starttime());
  }

  // int32 LockState = 11;
  if (this->lockstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lockstate());
  }

  // int32 IsShareable = 14;
  if (this->isshareable() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isshareable());
  }

  // int64 EndTime = 13;
  if (this->endtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->endtime());
  }

  // int64 CreateTime = 16;
  if (this->createtime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->createtime());
  }

  // int32 IsShow = 17;
  if (this->isshow() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isshow());
  }

  // int32 Sort = 18;
  if (this->sort() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sort());
  }

  // int64 GroupId = 20;
  if (this->groupid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->groupid());
  }

  // int32 IsNeedCheckIn = 19;
  if (this->isneedcheckin() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isneedcheckin());
  }

  // int32 AuthType = 22;
  if (this->authtype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->authtype());
  }

  // int32 State = 23;
  if (this->state() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyShareRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.KeyShareRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyShareRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyShareRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.KeyShareRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.KeyShareRecord)
    MergeFrom(*source);
  }
}

void KeyShareRecord::MergeFrom(const KeyShareRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.KeyShareRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keyid().size() > 0) {

    keyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyid_);
  }
  if (from.cipher().size() > 0) {

    cipher_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cipher_);
  }
  if (from.userfrommobile().size() > 0) {

    userfrommobile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userfrommobile_);
  }
  if (from.usernamefrom().size() > 0) {

    usernamefrom_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usernamefrom_);
  }
  if (from.userto().size() > 0) {

    userto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userto_);
  }
  if (from.usernameto().size() > 0) {

    usernameto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usernameto_);
  }
  if (from.alias().size() > 0) {

    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  if (from.lockcode().size() > 0) {

    lockcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lockcode_);
  }
  if (from.groupname().size() > 0) {

    groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.countrycode() != 0) {
    set_countrycode(from.countrycode());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.starttime() != 0) {
    set_starttime(from.starttime());
  }
  if (from.lockstate() != 0) {
    set_lockstate(from.lockstate());
  }
  if (from.isshareable() != 0) {
    set_isshareable(from.isshareable());
  }
  if (from.endtime() != 0) {
    set_endtime(from.endtime());
  }
  if (from.createtime() != 0) {
    set_createtime(from.createtime());
  }
  if (from.isshow() != 0) {
    set_isshow(from.isshow());
  }
  if (from.sort() != 0) {
    set_sort(from.sort());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.isneedcheckin() != 0) {
    set_isneedcheckin(from.isneedcheckin());
  }
  if (from.authtype() != 0) {
    set_authtype(from.authtype());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void KeyShareRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.KeyShareRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyShareRecord::CopyFrom(const KeyShareRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.KeyShareRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyShareRecord::IsInitialized() const {
  return true;
}

void KeyShareRecord::Swap(KeyShareRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyShareRecord::InternalSwap(KeyShareRecord* other) {
  using std::swap;
  keyid_.Swap(&other->keyid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cipher_.Swap(&other->cipher_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  userfrommobile_.Swap(&other->userfrommobile_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  usernamefrom_.Swap(&other->usernamefrom_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  userto_.Swap(&other->userto_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  usernameto_.Swap(&other->usernameto_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  alias_.Swap(&other->alias_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  lockcode_.Swap(&other->lockcode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  groupname_.Swap(&other->groupname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(countrycode_, other->countrycode_);
  swap(type_, other->type_);
  swap(starttime_, other->starttime_);
  swap(lockstate_, other->lockstate_);
  swap(isshareable_, other->isshareable_);
  swap(endtime_, other->endtime_);
  swap(createtime_, other->createtime_);
  swap(isshow_, other->isshow_);
  swap(sort_, other->sort_);
  swap(groupid_, other->groupid_);
  swap(isneedcheckin_, other->isneedcheckin_);
  swap(authtype_, other->authtype_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyShareRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameDevTypeCribe::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameDevTypeCribe::kDevTypeCribelistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameDevTypeCribe::SFrameDevTypeCribe()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameDevTypeCribe.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameDevTypeCribe)
}
SFrameDevTypeCribe::SFrameDevTypeCribe(const SFrameDevTypeCribe& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      devtypecribelist_(from.devtypecribelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameDevTypeCribe)
}

void SFrameDevTypeCribe::SharedCtor() {
}

SFrameDevTypeCribe::~SFrameDevTypeCribe() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameDevTypeCribe)
  SharedDtor();
}

void SFrameDevTypeCribe::SharedDtor() {
}

void SFrameDevTypeCribe::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameDevTypeCribe::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameDevTypeCribe& SFrameDevTypeCribe::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameDevTypeCribe.base);
  return *internal_default_instance();
}


void SFrameDevTypeCribe::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameDevTypeCribe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devtypecribelist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameDevTypeCribe::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameDevTypeCribe)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.DevTypeCribe DevTypeCribelist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_devtypecribelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameDevTypeCribe)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameDevTypeCribe)
  return false;
#undef DO_
}

void SFrameDevTypeCribe::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameDevTypeCribe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.DevTypeCribe DevTypeCribelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devtypecribelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->devtypecribelist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameDevTypeCribe)
}

::google::protobuf::uint8* SFrameDevTypeCribe::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameDevTypeCribe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.DevTypeCribe DevTypeCribelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devtypecribelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->devtypecribelist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameDevTypeCribe)
  return target;
}

size_t SFrameDevTypeCribe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameDevTypeCribe)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.DevTypeCribe DevTypeCribelist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->devtypecribelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->devtypecribelist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameDevTypeCribe::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameDevTypeCribe)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameDevTypeCribe* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameDevTypeCribe>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameDevTypeCribe)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameDevTypeCribe)
    MergeFrom(*source);
  }
}

void SFrameDevTypeCribe::MergeFrom(const SFrameDevTypeCribe& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameDevTypeCribe)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  devtypecribelist_.MergeFrom(from.devtypecribelist_);
}

void SFrameDevTypeCribe::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameDevTypeCribe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameDevTypeCribe::CopyFrom(const SFrameDevTypeCribe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameDevTypeCribe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameDevTypeCribe::IsInitialized() const {
  return true;
}

void SFrameDevTypeCribe::Swap(SFrameDevTypeCribe* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameDevTypeCribe::InternalSwap(SFrameDevTypeCribe* other) {
  using std::swap;
  CastToBase(&devtypecribelist_)->InternalSwap(CastToBase(&other->devtypecribelist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameDevTypeCribe::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DevTypeCribe::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DevTypeCribe::kIdFieldNumber;
const int DevTypeCribe::kDevCribeFieldNumber;
const int DevTypeCribe::kChineseFieldNumber;
const int DevTypeCribe::kEnglishFieldNumber;
const int DevTypeCribe::kGermanFieldNumber;
const int DevTypeCribe::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DevTypeCribe::DevTypeCribe()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_DevTypeCribe.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.DevTypeCribe)
}
DevTypeCribe::DevTypeCribe(const DevTypeCribe& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  devcribe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.devcribe().size() > 0) {
    devcribe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devcribe_);
  }
  chinese_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chinese().size() > 0) {
    chinese_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chinese_);
  }
  english_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.english().size() > 0) {
    english_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.english_);
  }
  german_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.german().size() > 0) {
    german_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.german_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.DevTypeCribe)
}

void DevTypeCribe::SharedCtor() {
  devcribe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chinese_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  english_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  german_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

DevTypeCribe::~DevTypeCribe() {
  // @@protoc_insertion_point(destructor:ServerProtocol.DevTypeCribe)
  SharedDtor();
}

void DevTypeCribe::SharedDtor() {
  devcribe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chinese_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  english_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  german_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DevTypeCribe::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DevTypeCribe::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DevTypeCribe& DevTypeCribe::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_DevTypeCribe.base);
  return *internal_default_instance();
}


void DevTypeCribe::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.DevTypeCribe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devcribe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chinese_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  english_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  german_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool DevTypeCribe::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.DevTypeCribe)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DevCribe = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devcribe()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->devcribe().data(), static_cast<int>(this->devcribe().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.DevTypeCribe.DevCribe"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Chinese = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chinese()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chinese().data(), static_cast<int>(this->chinese().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.DevTypeCribe.Chinese"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string English = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_english()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->english().data(), static_cast<int>(this->english().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.DevTypeCribe.English"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string German = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_german()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->german().data(), static_cast<int>(this->german().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.DevTypeCribe.German"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.DevTypeCribe)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.DevTypeCribe)
  return false;
#undef DO_
}

void DevTypeCribe::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.DevTypeCribe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string DevCribe = 2;
  if (this->devcribe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devcribe().data(), static_cast<int>(this->devcribe().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DevTypeCribe.DevCribe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->devcribe(), output);
  }

  // string Chinese = 3;
  if (this->chinese().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chinese().data(), static_cast<int>(this->chinese().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DevTypeCribe.Chinese");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->chinese(), output);
  }

  // string English = 4;
  if (this->english().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->english().data(), static_cast<int>(this->english().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DevTypeCribe.English");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->english(), output);
  }

  // string German = 5;
  if (this->german().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->german().data(), static_cast<int>(this->german().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DevTypeCribe.German");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->german(), output);
  }

  // int32 State = 6;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.DevTypeCribe)
}

::google::protobuf::uint8* DevTypeCribe::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.DevTypeCribe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string DevCribe = 2;
  if (this->devcribe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devcribe().data(), static_cast<int>(this->devcribe().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DevTypeCribe.DevCribe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->devcribe(), target);
  }

  // string Chinese = 3;
  if (this->chinese().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chinese().data(), static_cast<int>(this->chinese().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DevTypeCribe.Chinese");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->chinese(), target);
  }

  // string English = 4;
  if (this->english().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->english().data(), static_cast<int>(this->english().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DevTypeCribe.English");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->english(), target);
  }

  // string German = 5;
  if (this->german().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->german().data(), static_cast<int>(this->german().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DevTypeCribe.German");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->german(), target);
  }

  // int32 State = 6;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.DevTypeCribe)
  return target;
}

size_t DevTypeCribe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.DevTypeCribe)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string DevCribe = 2;
  if (this->devcribe().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devcribe());
  }

  // string Chinese = 3;
  if (this->chinese().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chinese());
  }

  // string English = 4;
  if (this->english().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->english());
  }

  // string German = 5;
  if (this->german().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->german());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 State = 6;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DevTypeCribe::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.DevTypeCribe)
  GOOGLE_DCHECK_NE(&from, this);
  const DevTypeCribe* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DevTypeCribe>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.DevTypeCribe)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.DevTypeCribe)
    MergeFrom(*source);
  }
}

void DevTypeCribe::MergeFrom(const DevTypeCribe& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.DevTypeCribe)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.devcribe().size() > 0) {

    devcribe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devcribe_);
  }
  if (from.chinese().size() > 0) {

    chinese_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chinese_);
  }
  if (from.english().size() > 0) {

    english_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.english_);
  }
  if (from.german().size() > 0) {

    german_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.german_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void DevTypeCribe::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.DevTypeCribe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevTypeCribe::CopyFrom(const DevTypeCribe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.DevTypeCribe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevTypeCribe::IsInitialized() const {
  return true;
}

void DevTypeCribe::Swap(DevTypeCribe* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DevTypeCribe::InternalSwap(DevTypeCribe* other) {
  using std::swap;
  devcribe_.Swap(&other->devcribe_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  chinese_.Swap(&other->chinese_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  english_.Swap(&other->english_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  german_.Swap(&other->german_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DevTypeCribe::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameCountryCode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameCountryCode::kCountryCodelistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameCountryCode::SFrameCountryCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameCountryCode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameCountryCode)
}
SFrameCountryCode::SFrameCountryCode(const SFrameCountryCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      countrycodelist_(from.countrycodelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameCountryCode)
}

void SFrameCountryCode::SharedCtor() {
}

SFrameCountryCode::~SFrameCountryCode() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameCountryCode)
  SharedDtor();
}

void SFrameCountryCode::SharedDtor() {
}

void SFrameCountryCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameCountryCode::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameCountryCode& SFrameCountryCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameCountryCode.base);
  return *internal_default_instance();
}


void SFrameCountryCode::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameCountryCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  countrycodelist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameCountryCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameCountryCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.CountryCode CountryCodelist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_countrycodelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameCountryCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameCountryCode)
  return false;
#undef DO_
}

void SFrameCountryCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameCountryCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.CountryCode CountryCodelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->countrycodelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->countrycodelist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameCountryCode)
}

::google::protobuf::uint8* SFrameCountryCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameCountryCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.CountryCode CountryCodelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->countrycodelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->countrycodelist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameCountryCode)
  return target;
}

size_t SFrameCountryCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameCountryCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.CountryCode CountryCodelist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->countrycodelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->countrycodelist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameCountryCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameCountryCode)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameCountryCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameCountryCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameCountryCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameCountryCode)
    MergeFrom(*source);
  }
}

void SFrameCountryCode::MergeFrom(const SFrameCountryCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameCountryCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  countrycodelist_.MergeFrom(from.countrycodelist_);
}

void SFrameCountryCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameCountryCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameCountryCode::CopyFrom(const SFrameCountryCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameCountryCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameCountryCode::IsInitialized() const {
  return true;
}

void SFrameCountryCode::Swap(SFrameCountryCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameCountryCode::InternalSwap(SFrameCountryCode* other) {
  using std::swap;
  CastToBase(&countrycodelist_)->InternalSwap(CastToBase(&other->countrycodelist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameCountryCode::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CountryCode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CountryCode::kIdFieldNumber;
const int CountryCode::kNameFieldNumber;
const int CountryCode::kCodeFieldNumber;
const int CountryCode::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CountryCode::CountryCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_CountryCode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.CountryCode)
}
CountryCode::CountryCode(const CountryCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.CountryCode)
}

void CountryCode::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

CountryCode::~CountryCode() {
  // @@protoc_insertion_point(destructor:ServerProtocol.CountryCode)
  SharedDtor();
}

void CountryCode::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CountryCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CountryCode::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CountryCode& CountryCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_CountryCode.base);
  return *internal_default_instance();
}


void CountryCode::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.CountryCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool CountryCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.CountryCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.CountryCode.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.CountryCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.CountryCode)
  return false;
#undef DO_
}

void CountryCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.CountryCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.CountryCode.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 Code = 3;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->code(), output);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.CountryCode)
}

::google::protobuf::uint8* CountryCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.CountryCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.CountryCode.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 Code = 3;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->code(), target);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.CountryCode)
  return target;
}

size_t CountryCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.CountryCode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 Code = 3;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  // int32 State = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CountryCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.CountryCode)
  GOOGLE_DCHECK_NE(&from, this);
  const CountryCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CountryCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.CountryCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.CountryCode)
    MergeFrom(*source);
  }
}

void CountryCode::MergeFrom(const CountryCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.CountryCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void CountryCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.CountryCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CountryCode::CopyFrom(const CountryCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.CountryCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CountryCode::IsInitialized() const {
  return true;
}

void CountryCode::Swap(CountryCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CountryCode::InternalSwap(CountryCode* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(code_, other->code_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CountryCode::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameDeveloper::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameDeveloper::kDeveloperlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameDeveloper::SFrameDeveloper()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameDeveloper.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameDeveloper)
}
SFrameDeveloper::SFrameDeveloper(const SFrameDeveloper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      developerlist_(from.developerlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameDeveloper)
}

void SFrameDeveloper::SharedCtor() {
}

SFrameDeveloper::~SFrameDeveloper() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameDeveloper)
  SharedDtor();
}

void SFrameDeveloper::SharedDtor() {
}

void SFrameDeveloper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameDeveloper::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameDeveloper& SFrameDeveloper::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameDeveloper.base);
  return *internal_default_instance();
}


void SFrameDeveloper::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameDeveloper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  developerlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameDeveloper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameDeveloper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.Developer Developerlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_developerlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameDeveloper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameDeveloper)
  return false;
#undef DO_
}

void SFrameDeveloper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameDeveloper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.Developer Developerlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->developerlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->developerlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameDeveloper)
}

::google::protobuf::uint8* SFrameDeveloper::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameDeveloper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.Developer Developerlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->developerlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->developerlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameDeveloper)
  return target;
}

size_t SFrameDeveloper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameDeveloper)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.Developer Developerlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->developerlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->developerlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameDeveloper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameDeveloper)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameDeveloper* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameDeveloper>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameDeveloper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameDeveloper)
    MergeFrom(*source);
  }
}

void SFrameDeveloper::MergeFrom(const SFrameDeveloper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameDeveloper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  developerlist_.MergeFrom(from.developerlist_);
}

void SFrameDeveloper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameDeveloper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameDeveloper::CopyFrom(const SFrameDeveloper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameDeveloper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameDeveloper::IsInitialized() const {
  return true;
}

void SFrameDeveloper::Swap(SFrameDeveloper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameDeveloper::InternalSwap(SFrameDeveloper* other) {
  using std::swap;
  CastToBase(&developerlist_)->InternalSwap(CastToBase(&other->developerlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameDeveloper::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Developer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Developer::kIdFieldNumber;
const int Developer::kNameFieldNumber;
const int Developer::kApikeyFieldNumber;
const int Developer::kSecretKeyFieldNumber;
const int Developer::kRangeFieldNumber;
const int Developer::kDeveloperTypeFieldNumber;
const int Developer::kCreateTimeFieldNumber;
const int Developer::kLastTimeFieldNumber;
const int Developer::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Developer::Developer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_Developer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.Developer)
}
Developer::Developer(const Developer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  apikey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apikey().size() > 0) {
    apikey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apikey_);
  }
  secretkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secretkey().size() > 0) {
    secretkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secretkey_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.Developer)
}

void Developer::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apikey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secretkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

Developer::~Developer() {
  // @@protoc_insertion_point(destructor:ServerProtocol.Developer)
  SharedDtor();
}

void Developer::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apikey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secretkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Developer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Developer::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Developer& Developer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_Developer.base);
  return *internal_default_instance();
}


void Developer::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.Developer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apikey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secretkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool Developer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.Developer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.Developer.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Apikey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apikey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->apikey().data(), static_cast<int>(this->apikey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.Developer.Apikey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SecretKey = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secretkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secretkey().data(), static_cast<int>(this->secretkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.Developer.SecretKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Range = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 DeveloperType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &developertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 CreateTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 LastTime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lasttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.Developer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.Developer)
  return false;
#undef DO_
}

void Developer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.Developer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.Developer.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string Apikey = 3;
  if (this->apikey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apikey().data(), static_cast<int>(this->apikey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.Developer.Apikey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->apikey(), output);
  }

  // string SecretKey = 4;
  if (this->secretkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secretkey().data(), static_cast<int>(this->secretkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.Developer.SecretKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->secretkey(), output);
  }

  // int32 Range = 5;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->range(), output);
  }

  // int32 DeveloperType = 6;
  if (this->developertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->developertype(), output);
  }

  // uint64 CreateTime = 7;
  if (this->createtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->createtime(), output);
  }

  // uint64 LastTime = 8;
  if (this->lasttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->lasttime(), output);
  }

  // int32 State = 9;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.Developer)
}

::google::protobuf::uint8* Developer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.Developer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.Developer.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string Apikey = 3;
  if (this->apikey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apikey().data(), static_cast<int>(this->apikey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.Developer.Apikey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->apikey(), target);
  }

  // string SecretKey = 4;
  if (this->secretkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secretkey().data(), static_cast<int>(this->secretkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.Developer.SecretKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->secretkey(), target);
  }

  // int32 Range = 5;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->range(), target);
  }

  // int32 DeveloperType = 6;
  if (this->developertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->developertype(), target);
  }

  // uint64 CreateTime = 7;
  if (this->createtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->createtime(), target);
  }

  // uint64 LastTime = 8;
  if (this->lasttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->lasttime(), target);
  }

  // int32 State = 9;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.Developer)
  return target;
}

size_t Developer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.Developer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Apikey = 3;
  if (this->apikey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->apikey());
  }

  // string SecretKey = 4;
  if (this->secretkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->secretkey());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 Range = 5;
  if (this->range() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->range());
  }

  // int32 DeveloperType = 6;
  if (this->developertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->developertype());
  }

  // uint64 CreateTime = 7;
  if (this->createtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->createtime());
  }

  // uint64 LastTime = 8;
  if (this->lasttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lasttime());
  }

  // int32 State = 9;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Developer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.Developer)
  GOOGLE_DCHECK_NE(&from, this);
  const Developer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Developer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.Developer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.Developer)
    MergeFrom(*source);
  }
}

void Developer::MergeFrom(const Developer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.Developer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.apikey().size() > 0) {

    apikey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apikey_);
  }
  if (from.secretkey().size() > 0) {

    secretkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secretkey_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
  if (from.developertype() != 0) {
    set_developertype(from.developertype());
  }
  if (from.createtime() != 0) {
    set_createtime(from.createtime());
  }
  if (from.lasttime() != 0) {
    set_lasttime(from.lasttime());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void Developer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.Developer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Developer::CopyFrom(const Developer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.Developer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Developer::IsInitialized() const {
  return true;
}

void Developer::Swap(Developer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Developer::InternalSwap(Developer* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  apikey_.Swap(&other->apikey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  secretkey_.Swap(&other->secretkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(range_, other->range_);
  swap(developertype_, other->developertype_);
  swap(createtime_, other->createtime_);
  swap(lasttime_, other->lasttime_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Developer::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameWebInterface::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameWebInterface::kWebInterfacelistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameWebInterface::SFrameWebInterface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameWebInterface.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameWebInterface)
}
SFrameWebInterface::SFrameWebInterface(const SFrameWebInterface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      webinterfacelist_(from.webinterfacelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameWebInterface)
}

void SFrameWebInterface::SharedCtor() {
}

SFrameWebInterface::~SFrameWebInterface() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameWebInterface)
  SharedDtor();
}

void SFrameWebInterface::SharedDtor() {
}

void SFrameWebInterface::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameWebInterface::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameWebInterface& SFrameWebInterface::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameWebInterface.base);
  return *internal_default_instance();
}


void SFrameWebInterface::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameWebInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  webinterfacelist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameWebInterface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameWebInterface)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.WebInterface WebInterfacelist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_webinterfacelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameWebInterface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameWebInterface)
  return false;
#undef DO_
}

void SFrameWebInterface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameWebInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.WebInterface WebInterfacelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->webinterfacelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->webinterfacelist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameWebInterface)
}

::google::protobuf::uint8* SFrameWebInterface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameWebInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.WebInterface WebInterfacelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->webinterfacelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->webinterfacelist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameWebInterface)
  return target;
}

size_t SFrameWebInterface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameWebInterface)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.WebInterface WebInterfacelist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->webinterfacelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->webinterfacelist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameWebInterface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameWebInterface)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameWebInterface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameWebInterface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameWebInterface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameWebInterface)
    MergeFrom(*source);
  }
}

void SFrameWebInterface::MergeFrom(const SFrameWebInterface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameWebInterface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  webinterfacelist_.MergeFrom(from.webinterfacelist_);
}

void SFrameWebInterface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameWebInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameWebInterface::CopyFrom(const SFrameWebInterface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameWebInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameWebInterface::IsInitialized() const {
  return true;
}

void SFrameWebInterface::Swap(SFrameWebInterface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameWebInterface::InternalSwap(SFrameWebInterface* other) {
  using std::swap;
  CastToBase(&webinterfacelist_)->InternalSwap(CastToBase(&other->webinterfacelist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameWebInterface::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WebInterface::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WebInterface::kIdFieldNumber;
const int WebInterface::kNameFieldNumber;
const int WebInterface::kApiUrlFieldNumber;
const int WebInterface::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WebInterface::WebInterface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_WebInterface.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.WebInterface)
}
WebInterface::WebInterface(const WebInterface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  apiurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apiurl().size() > 0) {
    apiurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apiurl_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.WebInterface)
}

void WebInterface::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apiurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

WebInterface::~WebInterface() {
  // @@protoc_insertion_point(destructor:ServerProtocol.WebInterface)
  SharedDtor();
}

void WebInterface::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apiurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WebInterface::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WebInterface::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WebInterface& WebInterface::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_WebInterface.base);
  return *internal_default_instance();
}


void WebInterface::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.WebInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apiurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool WebInterface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.WebInterface)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.WebInterface.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ApiUrl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apiurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->apiurl().data(), static_cast<int>(this->apiurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.WebInterface.ApiUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.WebInterface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.WebInterface)
  return false;
#undef DO_
}

void WebInterface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.WebInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.WebInterface.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string ApiUrl = 3;
  if (this->apiurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apiurl().data(), static_cast<int>(this->apiurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.WebInterface.ApiUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->apiurl(), output);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.WebInterface)
}

::google::protobuf::uint8* WebInterface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.WebInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.WebInterface.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string ApiUrl = 3;
  if (this->apiurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apiurl().data(), static_cast<int>(this->apiurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.WebInterface.ApiUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->apiurl(), target);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.WebInterface)
  return target;
}

size_t WebInterface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.WebInterface)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string ApiUrl = 3;
  if (this->apiurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->apiurl());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 State = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WebInterface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.WebInterface)
  GOOGLE_DCHECK_NE(&from, this);
  const WebInterface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WebInterface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.WebInterface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.WebInterface)
    MergeFrom(*source);
  }
}

void WebInterface::MergeFrom(const WebInterface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.WebInterface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.apiurl().size() > 0) {

    apiurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apiurl_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void WebInterface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.WebInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WebInterface::CopyFrom(const WebInterface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.WebInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WebInterface::IsInitialized() const {
  return true;
}

void WebInterface::Swap(WebInterface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WebInterface::InternalSwap(WebInterface* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  apiurl_.Swap(&other->apiurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WebInterface::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameTypeApiContrast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameTypeApiContrast::kTypeApiContrastlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameTypeApiContrast::SFrameTypeApiContrast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameTypeApiContrast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameTypeApiContrast)
}
SFrameTypeApiContrast::SFrameTypeApiContrast(const SFrameTypeApiContrast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      typeapicontrastlist_(from.typeapicontrastlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameTypeApiContrast)
}

void SFrameTypeApiContrast::SharedCtor() {
}

SFrameTypeApiContrast::~SFrameTypeApiContrast() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameTypeApiContrast)
  SharedDtor();
}

void SFrameTypeApiContrast::SharedDtor() {
}

void SFrameTypeApiContrast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameTypeApiContrast::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameTypeApiContrast& SFrameTypeApiContrast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameTypeApiContrast.base);
  return *internal_default_instance();
}


void SFrameTypeApiContrast::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameTypeApiContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  typeapicontrastlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameTypeApiContrast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameTypeApiContrast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.TypeApiContrast TypeApiContrastlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_typeapicontrastlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameTypeApiContrast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameTypeApiContrast)
  return false;
#undef DO_
}

void SFrameTypeApiContrast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameTypeApiContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.TypeApiContrast TypeApiContrastlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->typeapicontrastlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->typeapicontrastlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameTypeApiContrast)
}

::google::protobuf::uint8* SFrameTypeApiContrast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameTypeApiContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.TypeApiContrast TypeApiContrastlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->typeapicontrastlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->typeapicontrastlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameTypeApiContrast)
  return target;
}

size_t SFrameTypeApiContrast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameTypeApiContrast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.TypeApiContrast TypeApiContrastlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->typeapicontrastlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->typeapicontrastlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameTypeApiContrast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameTypeApiContrast)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameTypeApiContrast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameTypeApiContrast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameTypeApiContrast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameTypeApiContrast)
    MergeFrom(*source);
  }
}

void SFrameTypeApiContrast::MergeFrom(const SFrameTypeApiContrast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameTypeApiContrast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  typeapicontrastlist_.MergeFrom(from.typeapicontrastlist_);
}

void SFrameTypeApiContrast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameTypeApiContrast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameTypeApiContrast::CopyFrom(const SFrameTypeApiContrast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameTypeApiContrast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameTypeApiContrast::IsInitialized() const {
  return true;
}

void SFrameTypeApiContrast::Swap(SFrameTypeApiContrast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameTypeApiContrast::InternalSwap(SFrameTypeApiContrast* other) {
  using std::swap;
  CastToBase(&typeapicontrastlist_)->InternalSwap(CastToBase(&other->typeapicontrastlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameTypeApiContrast::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TypeApiContrast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypeApiContrast::kIdFieldNumber;
const int TypeApiContrast::kDeveloperTypeFieldNumber;
const int TypeApiContrast::kApiIdFieldNumber;
const int TypeApiContrast::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeApiContrast::TypeApiContrast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_TypeApiContrast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.TypeApiContrast)
}
TypeApiContrast::TypeApiContrast(const TypeApiContrast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.TypeApiContrast)
}

void TypeApiContrast::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

TypeApiContrast::~TypeApiContrast() {
  // @@protoc_insertion_point(destructor:ServerProtocol.TypeApiContrast)
  SharedDtor();
}

void TypeApiContrast::SharedDtor() {
}

void TypeApiContrast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TypeApiContrast::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TypeApiContrast& TypeApiContrast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_TypeApiContrast.base);
  return *internal_default_instance();
}


void TypeApiContrast::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.TypeApiContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool TypeApiContrast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.TypeApiContrast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 DeveloperType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &developertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ApiId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &apiid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.TypeApiContrast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.TypeApiContrast)
  return false;
#undef DO_
}

void TypeApiContrast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.TypeApiContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // int32 DeveloperType = 2;
  if (this->developertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->developertype(), output);
  }

  // uint64 ApiId = 3;
  if (this->apiid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->apiid(), output);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.TypeApiContrast)
}

::google::protobuf::uint8* TypeApiContrast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.TypeApiContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // int32 DeveloperType = 2;
  if (this->developertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->developertype(), target);
  }

  // uint64 ApiId = 3;
  if (this->apiid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->apiid(), target);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.TypeApiContrast)
  return target;
}

size_t TypeApiContrast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.TypeApiContrast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 ApiId = 3;
  if (this->apiid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->apiid());
  }

  // int32 DeveloperType = 2;
  if (this->developertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->developertype());
  }

  // int32 State = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TypeApiContrast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.TypeApiContrast)
  GOOGLE_DCHECK_NE(&from, this);
  const TypeApiContrast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypeApiContrast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.TypeApiContrast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.TypeApiContrast)
    MergeFrom(*source);
  }
}

void TypeApiContrast::MergeFrom(const TypeApiContrast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.TypeApiContrast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.apiid() != 0) {
    set_apiid(from.apiid());
  }
  if (from.developertype() != 0) {
    set_developertype(from.developertype());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void TypeApiContrast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.TypeApiContrast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeApiContrast::CopyFrom(const TypeApiContrast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.TypeApiContrast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypeApiContrast::IsInitialized() const {
  return true;
}

void TypeApiContrast::Swap(TypeApiContrast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypeApiContrast::InternalSwap(TypeApiContrast* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(apiid_, other->apiid_);
  swap(developertype_, other->developertype_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TypeApiContrast::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameCardsAreaDeviceContrast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameCardsAreaDeviceContrast::kCardsAreaDeviceContrastlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameCardsAreaDeviceContrast::SFrameCardsAreaDeviceContrast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameCardsAreaDeviceContrast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameCardsAreaDeviceContrast)
}
SFrameCardsAreaDeviceContrast::SFrameCardsAreaDeviceContrast(const SFrameCardsAreaDeviceContrast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cardsareadevicecontrastlist_(from.cardsareadevicecontrastlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameCardsAreaDeviceContrast)
}

void SFrameCardsAreaDeviceContrast::SharedCtor() {
}

SFrameCardsAreaDeviceContrast::~SFrameCardsAreaDeviceContrast() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameCardsAreaDeviceContrast)
  SharedDtor();
}

void SFrameCardsAreaDeviceContrast::SharedDtor() {
}

void SFrameCardsAreaDeviceContrast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameCardsAreaDeviceContrast::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameCardsAreaDeviceContrast& SFrameCardsAreaDeviceContrast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameCardsAreaDeviceContrast.base);
  return *internal_default_instance();
}


void SFrameCardsAreaDeviceContrast::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameCardsAreaDeviceContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cardsareadevicecontrastlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameCardsAreaDeviceContrast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameCardsAreaDeviceContrast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.CardsAreaDeviceContrast CardsAreaDeviceContrastlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cardsareadevicecontrastlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameCardsAreaDeviceContrast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameCardsAreaDeviceContrast)
  return false;
#undef DO_
}

void SFrameCardsAreaDeviceContrast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameCardsAreaDeviceContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.CardsAreaDeviceContrast CardsAreaDeviceContrastlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cardsareadevicecontrastlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->cardsareadevicecontrastlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameCardsAreaDeviceContrast)
}

::google::protobuf::uint8* SFrameCardsAreaDeviceContrast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameCardsAreaDeviceContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.CardsAreaDeviceContrast CardsAreaDeviceContrastlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cardsareadevicecontrastlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->cardsareadevicecontrastlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameCardsAreaDeviceContrast)
  return target;
}

size_t SFrameCardsAreaDeviceContrast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameCardsAreaDeviceContrast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.CardsAreaDeviceContrast CardsAreaDeviceContrastlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->cardsareadevicecontrastlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cardsareadevicecontrastlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameCardsAreaDeviceContrast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameCardsAreaDeviceContrast)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameCardsAreaDeviceContrast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameCardsAreaDeviceContrast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameCardsAreaDeviceContrast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameCardsAreaDeviceContrast)
    MergeFrom(*source);
  }
}

void SFrameCardsAreaDeviceContrast::MergeFrom(const SFrameCardsAreaDeviceContrast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameCardsAreaDeviceContrast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cardsareadevicecontrastlist_.MergeFrom(from.cardsareadevicecontrastlist_);
}

void SFrameCardsAreaDeviceContrast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameCardsAreaDeviceContrast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameCardsAreaDeviceContrast::CopyFrom(const SFrameCardsAreaDeviceContrast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameCardsAreaDeviceContrast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameCardsAreaDeviceContrast::IsInitialized() const {
  return true;
}

void SFrameCardsAreaDeviceContrast::Swap(SFrameCardsAreaDeviceContrast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameCardsAreaDeviceContrast::InternalSwap(SFrameCardsAreaDeviceContrast* other) {
  using std::swap;
  CastToBase(&cardsareadevicecontrastlist_)->InternalSwap(CastToBase(&other->cardsareadevicecontrastlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameCardsAreaDeviceContrast::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CardsAreaDeviceContrast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardsAreaDeviceContrast::kIdFieldNumber;
const int CardsAreaDeviceContrast::kCardsIDFieldNumber;
const int CardsAreaDeviceContrast::kAreaDeviceIDFieldNumber;
const int CardsAreaDeviceContrast::kStateFieldNumber;
const int CardsAreaDeviceContrast::kCardSendStateFieldNumber;
const int CardsAreaDeviceContrast::kCardSendCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardsAreaDeviceContrast::CardsAreaDeviceContrast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_CardsAreaDeviceContrast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.CardsAreaDeviceContrast)
}
CardsAreaDeviceContrast::CardsAreaDeviceContrast(const CardsAreaDeviceContrast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cardsendcount_) -
    reinterpret_cast<char*>(&id_)) + sizeof(cardsendcount_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.CardsAreaDeviceContrast)
}

void CardsAreaDeviceContrast::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cardsendcount_) -
      reinterpret_cast<char*>(&id_)) + sizeof(cardsendcount_));
}

CardsAreaDeviceContrast::~CardsAreaDeviceContrast() {
  // @@protoc_insertion_point(destructor:ServerProtocol.CardsAreaDeviceContrast)
  SharedDtor();
}

void CardsAreaDeviceContrast::SharedDtor() {
}

void CardsAreaDeviceContrast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CardsAreaDeviceContrast::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CardsAreaDeviceContrast& CardsAreaDeviceContrast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_CardsAreaDeviceContrast.base);
  return *internal_default_instance();
}


void CardsAreaDeviceContrast::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.CardsAreaDeviceContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cardsendcount_) -
      reinterpret_cast<char*>(&id_)) + sizeof(cardsendcount_));
  _internal_metadata_.Clear();
}

bool CardsAreaDeviceContrast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.CardsAreaDeviceContrast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 CardsID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cardsid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 AreaDeviceID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &areadeviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CardSendState = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cardsendstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CardSendCount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cardsendcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.CardsAreaDeviceContrast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.CardsAreaDeviceContrast)
  return false;
#undef DO_
}

void CardsAreaDeviceContrast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.CardsAreaDeviceContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 CardsID = 2;
  if (this->cardsid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->cardsid(), output);
  }

  // uint64 AreaDeviceID = 3;
  if (this->areadeviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->areadeviceid(), output);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  // int32 CardSendState = 5;
  if (this->cardsendstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cardsendstate(), output);
  }

  // int32 CardSendCount = 6;
  if (this->cardsendcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->cardsendcount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.CardsAreaDeviceContrast)
}

::google::protobuf::uint8* CardsAreaDeviceContrast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.CardsAreaDeviceContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 CardsID = 2;
  if (this->cardsid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->cardsid(), target);
  }

  // uint64 AreaDeviceID = 3;
  if (this->areadeviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->areadeviceid(), target);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  // int32 CardSendState = 5;
  if (this->cardsendstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cardsendstate(), target);
  }

  // int32 CardSendCount = 6;
  if (this->cardsendcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->cardsendcount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.CardsAreaDeviceContrast)
  return target;
}

size_t CardsAreaDeviceContrast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.CardsAreaDeviceContrast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 CardsID = 2;
  if (this->cardsid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cardsid());
  }

  // uint64 AreaDeviceID = 3;
  if (this->areadeviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->areadeviceid());
  }

  // int32 State = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int32 CardSendState = 5;
  if (this->cardsendstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cardsendstate());
  }

  // int32 CardSendCount = 6;
  if (this->cardsendcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cardsendcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardsAreaDeviceContrast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.CardsAreaDeviceContrast)
  GOOGLE_DCHECK_NE(&from, this);
  const CardsAreaDeviceContrast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardsAreaDeviceContrast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.CardsAreaDeviceContrast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.CardsAreaDeviceContrast)
    MergeFrom(*source);
  }
}

void CardsAreaDeviceContrast::MergeFrom(const CardsAreaDeviceContrast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.CardsAreaDeviceContrast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.cardsid() != 0) {
    set_cardsid(from.cardsid());
  }
  if (from.areadeviceid() != 0) {
    set_areadeviceid(from.areadeviceid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.cardsendstate() != 0) {
    set_cardsendstate(from.cardsendstate());
  }
  if (from.cardsendcount() != 0) {
    set_cardsendcount(from.cardsendcount());
  }
}

void CardsAreaDeviceContrast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.CardsAreaDeviceContrast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardsAreaDeviceContrast::CopyFrom(const CardsAreaDeviceContrast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.CardsAreaDeviceContrast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardsAreaDeviceContrast::IsInitialized() const {
  return true;
}

void CardsAreaDeviceContrast::Swap(CardsAreaDeviceContrast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardsAreaDeviceContrast::InternalSwap(CardsAreaDeviceContrast* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(cardsid_, other->cardsid_);
  swap(areadeviceid_, other->areadeviceid_);
  swap(state_, other->state_);
  swap(cardsendstate_, other->cardsendstate_);
  swap(cardsendcount_, other->cardsendcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CardsAreaDeviceContrast::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameCardRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameCardRecord::kCardRecordlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameCardRecord::SFrameCardRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameCardRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameCardRecord)
}
SFrameCardRecord::SFrameCardRecord(const SFrameCardRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cardrecordlist_(from.cardrecordlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameCardRecord)
}

void SFrameCardRecord::SharedCtor() {
}

SFrameCardRecord::~SFrameCardRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameCardRecord)
  SharedDtor();
}

void SFrameCardRecord::SharedDtor() {
}

void SFrameCardRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameCardRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameCardRecord& SFrameCardRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameCardRecord.base);
  return *internal_default_instance();
}


void SFrameCardRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameCardRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cardrecordlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameCardRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameCardRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.CardRecord CardRecordlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cardrecordlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameCardRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameCardRecord)
  return false;
#undef DO_
}

void SFrameCardRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameCardRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.CardRecord CardRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cardrecordlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->cardrecordlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameCardRecord)
}

::google::protobuf::uint8* SFrameCardRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameCardRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.CardRecord CardRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cardrecordlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->cardrecordlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameCardRecord)
  return target;
}

size_t SFrameCardRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameCardRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.CardRecord CardRecordlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->cardrecordlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cardrecordlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameCardRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameCardRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameCardRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameCardRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameCardRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameCardRecord)
    MergeFrom(*source);
  }
}

void SFrameCardRecord::MergeFrom(const SFrameCardRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameCardRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cardrecordlist_.MergeFrom(from.cardrecordlist_);
}

void SFrameCardRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameCardRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameCardRecord::CopyFrom(const SFrameCardRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameCardRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameCardRecord::IsInitialized() const {
  return true;
}

void SFrameCardRecord::Swap(SFrameCardRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameCardRecord::InternalSwap(SFrameCardRecord* other) {
  using std::swap;
  CastToBase(&cardrecordlist_)->InternalSwap(CastToBase(&other->cardrecordlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameCardRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CardRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CardRecord::kIdFieldNumber;
const int CardRecord::kCardFieldNumber;
const int CardRecord::kUserIDFieldNumber;
const int CardRecord::kAreaIDFieldNumber;
const int CardRecord::kBeginTimeFieldNumber;
const int CardRecord::kEndTimeFieldNumber;
const int CardRecord::kRoleIDFieldNumber;
const int CardRecord::kTimeFieldNumber;
const int CardRecord::kStateFieldNumber;
const int CardRecord::kCardTypeFieldNumber;
const int CardRecord::kListTypeFieldNumber;
const int CardRecord::kFunTypeFieldNumber;
const int CardRecord::kPhoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CardRecord::CardRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_CardRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.CardRecord)
}
CardRecord::CardRecord(const CardRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  card_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.card().size() > 0) {
    card_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&funtype_) -
    reinterpret_cast<char*>(&id_)) + sizeof(funtype_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.CardRecord)
}

void CardRecord::SharedCtor() {
  card_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&funtype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(funtype_));
}

CardRecord::~CardRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.CardRecord)
  SharedDtor();
}

void CardRecord::SharedDtor() {
  card_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CardRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CardRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CardRecord& CardRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_CardRecord.base);
  return *internal_default_instance();
}


void CardRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.CardRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&funtype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(funtype_));
  _internal_metadata_.Clear();
}

bool CardRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.CardRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Card = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_card()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->card().data(), static_cast<int>(this->card().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.CardRecord.Card"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 UserID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 AreaID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &areaid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 BeginTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &begintime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 EndTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &endtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CardType = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cardtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ListType = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &listtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 FunType = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &funtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Phone = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.CardRecord.Phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.CardRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.CardRecord)
  return false;
#undef DO_
}

void CardRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.CardRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string Card = 2;
  if (this->card().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card().data(), static_cast<int>(this->card().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.CardRecord.Card");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->card(), output);
  }

  // uint64 UserID = 3;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->userid(), output);
  }

  // uint64 AreaID = 4;
  if (this->areaid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->areaid(), output);
  }

  // int64 BeginTime = 5;
  if (this->begintime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->begintime(), output);
  }

  // int64 EndTime = 6;
  if (this->endtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->endtime(), output);
  }

  // uint64 RoleID = 7;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->roleid(), output);
  }

  // int64 Time = 8;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->time(), output);
  }

  // int32 State = 9;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->state(), output);
  }

  // int32 CardType = 10;
  if (this->cardtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->cardtype(), output);
  }

  // int32 ListType = 11;
  if (this->listtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->listtype(), output);
  }

  // int32 FunType = 12;
  if (this->funtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->funtype(), output);
  }

  // string Phone = 13;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.CardRecord.Phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->phone(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.CardRecord)
}

::google::protobuf::uint8* CardRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.CardRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string Card = 2;
  if (this->card().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card().data(), static_cast<int>(this->card().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.CardRecord.Card");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->card(), target);
  }

  // uint64 UserID = 3;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->userid(), target);
  }

  // uint64 AreaID = 4;
  if (this->areaid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->areaid(), target);
  }

  // int64 BeginTime = 5;
  if (this->begintime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->begintime(), target);
  }

  // int64 EndTime = 6;
  if (this->endtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->endtime(), target);
  }

  // uint64 RoleID = 7;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->roleid(), target);
  }

  // int64 Time = 8;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->time(), target);
  }

  // int32 State = 9;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->state(), target);
  }

  // int32 CardType = 10;
  if (this->cardtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->cardtype(), target);
  }

  // int32 ListType = 11;
  if (this->listtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->listtype(), target);
  }

  // int32 FunType = 12;
  if (this->funtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->funtype(), target);
  }

  // string Phone = 13;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.CardRecord.Phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->phone(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.CardRecord)
  return target;
}

size_t CardRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.CardRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Card = 2;
  if (this->card().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->card());
  }

  // string Phone = 13;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 UserID = 3;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // uint64 AreaID = 4;
  if (this->areaid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->areaid());
  }

  // int64 BeginTime = 5;
  if (this->begintime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->begintime());
  }

  // int64 EndTime = 6;
  if (this->endtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->endtime());
  }

  // uint64 RoleID = 7;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int64 Time = 8;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // int32 State = 9;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int32 CardType = 10;
  if (this->cardtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cardtype());
  }

  // int32 ListType = 11;
  if (this->listtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->listtype());
  }

  // int32 FunType = 12;
  if (this->funtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->funtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.CardRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const CardRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CardRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.CardRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.CardRecord)
    MergeFrom(*source);
  }
}

void CardRecord::MergeFrom(const CardRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.CardRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.card().size() > 0) {

    card_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_);
  }
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.areaid() != 0) {
    set_areaid(from.areaid());
  }
  if (from.begintime() != 0) {
    set_begintime(from.begintime());
  }
  if (from.endtime() != 0) {
    set_endtime(from.endtime());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.cardtype() != 0) {
    set_cardtype(from.cardtype());
  }
  if (from.listtype() != 0) {
    set_listtype(from.listtype());
  }
  if (from.funtype() != 0) {
    set_funtype(from.funtype());
  }
}

void CardRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.CardRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardRecord::CopyFrom(const CardRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.CardRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardRecord::IsInitialized() const {
  return true;
}

void CardRecord::Swap(CardRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CardRecord::InternalSwap(CardRecord* other) {
  using std::swap;
  card_.Swap(&other->card_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phone_.Swap(&other->phone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(userid_, other->userid_);
  swap(areaid_, other->areaid_);
  swap(begintime_, other->begintime_);
  swap(endtime_, other->endtime_);
  swap(roleid_, other->roleid_);
  swap(time_, other->time_);
  swap(state_, other->state_);
  swap(cardtype_, other->cardtype_);
  swap(listtype_, other->listtype_);
  swap(funtype_, other->funtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CardRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameManagersRoleContrast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameManagersRoleContrast::kManagersRoleContrastlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameManagersRoleContrast::SFrameManagersRoleContrast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameManagersRoleContrast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameManagersRoleContrast)
}
SFrameManagersRoleContrast::SFrameManagersRoleContrast(const SFrameManagersRoleContrast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      managersrolecontrastlist_(from.managersrolecontrastlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameManagersRoleContrast)
}

void SFrameManagersRoleContrast::SharedCtor() {
}

SFrameManagersRoleContrast::~SFrameManagersRoleContrast() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameManagersRoleContrast)
  SharedDtor();
}

void SFrameManagersRoleContrast::SharedDtor() {
}

void SFrameManagersRoleContrast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameManagersRoleContrast::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameManagersRoleContrast& SFrameManagersRoleContrast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameManagersRoleContrast.base);
  return *internal_default_instance();
}


void SFrameManagersRoleContrast::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameManagersRoleContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  managersrolecontrastlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameManagersRoleContrast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameManagersRoleContrast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.ManagersRoleContrast ManagersRoleContrastlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_managersrolecontrastlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameManagersRoleContrast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameManagersRoleContrast)
  return false;
#undef DO_
}

void SFrameManagersRoleContrast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameManagersRoleContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.ManagersRoleContrast ManagersRoleContrastlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->managersrolecontrastlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->managersrolecontrastlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameManagersRoleContrast)
}

::google::protobuf::uint8* SFrameManagersRoleContrast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameManagersRoleContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.ManagersRoleContrast ManagersRoleContrastlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->managersrolecontrastlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->managersrolecontrastlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameManagersRoleContrast)
  return target;
}

size_t SFrameManagersRoleContrast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameManagersRoleContrast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.ManagersRoleContrast ManagersRoleContrastlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->managersrolecontrastlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->managersrolecontrastlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameManagersRoleContrast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameManagersRoleContrast)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameManagersRoleContrast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameManagersRoleContrast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameManagersRoleContrast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameManagersRoleContrast)
    MergeFrom(*source);
  }
}

void SFrameManagersRoleContrast::MergeFrom(const SFrameManagersRoleContrast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameManagersRoleContrast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  managersrolecontrastlist_.MergeFrom(from.managersrolecontrastlist_);
}

void SFrameManagersRoleContrast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameManagersRoleContrast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameManagersRoleContrast::CopyFrom(const SFrameManagersRoleContrast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameManagersRoleContrast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameManagersRoleContrast::IsInitialized() const {
  return true;
}

void SFrameManagersRoleContrast::Swap(SFrameManagersRoleContrast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameManagersRoleContrast::InternalSwap(SFrameManagersRoleContrast* other) {
  using std::swap;
  CastToBase(&managersrolecontrastlist_)->InternalSwap(CastToBase(&other->managersrolecontrastlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameManagersRoleContrast::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ManagersRoleContrast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ManagersRoleContrast::kIdFieldNumber;
const int ManagersRoleContrast::kRoleTypeIDFieldNumber;
const int ManagersRoleContrast::kManagersIDFieldNumber;
const int ManagersRoleContrast::kStateFieldNumber;
const int ManagersRoleContrast::kMechIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ManagersRoleContrast::ManagersRoleContrast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_ManagersRoleContrast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.ManagersRoleContrast)
}
ManagersRoleContrast::ManagersRoleContrast(const ManagersRoleContrast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.ManagersRoleContrast)
}

void ManagersRoleContrast::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

ManagersRoleContrast::~ManagersRoleContrast() {
  // @@protoc_insertion_point(destructor:ServerProtocol.ManagersRoleContrast)
  SharedDtor();
}

void ManagersRoleContrast::SharedDtor() {
}

void ManagersRoleContrast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ManagersRoleContrast::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ManagersRoleContrast& ManagersRoleContrast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_ManagersRoleContrast.base);
  return *internal_default_instance();
}


void ManagersRoleContrast::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.ManagersRoleContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool ManagersRoleContrast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.ManagersRoleContrast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleTypeID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roletypeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ManagersID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &managersid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 MechID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mechid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.ManagersRoleContrast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.ManagersRoleContrast)
  return false;
#undef DO_
}

void ManagersRoleContrast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.ManagersRoleContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 RoleTypeID = 2;
  if (this->roletypeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roletypeid(), output);
  }

  // uint64 ManagersID = 3;
  if (this->managersid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->managersid(), output);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  // uint64 MechID = 5;
  if (this->mechid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->mechid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.ManagersRoleContrast)
}

::google::protobuf::uint8* ManagersRoleContrast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.ManagersRoleContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 RoleTypeID = 2;
  if (this->roletypeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roletypeid(), target);
  }

  // uint64 ManagersID = 3;
  if (this->managersid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->managersid(), target);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  // uint64 MechID = 5;
  if (this->mechid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->mechid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.ManagersRoleContrast)
  return target;
}

size_t ManagersRoleContrast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.ManagersRoleContrast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 RoleTypeID = 2;
  if (this->roletypeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roletypeid());
  }

  // uint64 ManagersID = 3;
  if (this->managersid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->managersid());
  }

  // uint64 MechID = 5;
  if (this->mechid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mechid());
  }

  // int32 State = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ManagersRoleContrast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.ManagersRoleContrast)
  GOOGLE_DCHECK_NE(&from, this);
  const ManagersRoleContrast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ManagersRoleContrast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.ManagersRoleContrast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.ManagersRoleContrast)
    MergeFrom(*source);
  }
}

void ManagersRoleContrast::MergeFrom(const ManagersRoleContrast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.ManagersRoleContrast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.roletypeid() != 0) {
    set_roletypeid(from.roletypeid());
  }
  if (from.managersid() != 0) {
    set_managersid(from.managersid());
  }
  if (from.mechid() != 0) {
    set_mechid(from.mechid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void ManagersRoleContrast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.ManagersRoleContrast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManagersRoleContrast::CopyFrom(const ManagersRoleContrast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.ManagersRoleContrast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManagersRoleContrast::IsInitialized() const {
  return true;
}

void ManagersRoleContrast::Swap(ManagersRoleContrast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ManagersRoleContrast::InternalSwap(ManagersRoleContrast* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(roletypeid_, other->roletypeid_);
  swap(managersid_, other->managersid_);
  swap(mechid_, other->mechid_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ManagersRoleContrast::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameFolderUpRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameFolderUpRecord::kFolderUpRecordlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameFolderUpRecord::SFrameFolderUpRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameFolderUpRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameFolderUpRecord)
}
SFrameFolderUpRecord::SFrameFolderUpRecord(const SFrameFolderUpRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      folderuprecordlist_(from.folderuprecordlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameFolderUpRecord)
}

void SFrameFolderUpRecord::SharedCtor() {
}

SFrameFolderUpRecord::~SFrameFolderUpRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameFolderUpRecord)
  SharedDtor();
}

void SFrameFolderUpRecord::SharedDtor() {
}

void SFrameFolderUpRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameFolderUpRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameFolderUpRecord& SFrameFolderUpRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameFolderUpRecord.base);
  return *internal_default_instance();
}


void SFrameFolderUpRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameFolderUpRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  folderuprecordlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameFolderUpRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameFolderUpRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.FolderUpRecord FolderUpRecordlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_folderuprecordlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameFolderUpRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameFolderUpRecord)
  return false;
#undef DO_
}

void SFrameFolderUpRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameFolderUpRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.FolderUpRecord FolderUpRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->folderuprecordlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->folderuprecordlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameFolderUpRecord)
}

::google::protobuf::uint8* SFrameFolderUpRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameFolderUpRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.FolderUpRecord FolderUpRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->folderuprecordlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->folderuprecordlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameFolderUpRecord)
  return target;
}

size_t SFrameFolderUpRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameFolderUpRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.FolderUpRecord FolderUpRecordlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->folderuprecordlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->folderuprecordlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameFolderUpRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameFolderUpRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameFolderUpRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameFolderUpRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameFolderUpRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameFolderUpRecord)
    MergeFrom(*source);
  }
}

void SFrameFolderUpRecord::MergeFrom(const SFrameFolderUpRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameFolderUpRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  folderuprecordlist_.MergeFrom(from.folderuprecordlist_);
}

void SFrameFolderUpRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameFolderUpRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameFolderUpRecord::CopyFrom(const SFrameFolderUpRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameFolderUpRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameFolderUpRecord::IsInitialized() const {
  return true;
}

void SFrameFolderUpRecord::Swap(SFrameFolderUpRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameFolderUpRecord::InternalSwap(SFrameFolderUpRecord* other) {
  using std::swap;
  CastToBase(&folderuprecordlist_)->InternalSwap(CastToBase(&other->folderuprecordlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameFolderUpRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FolderUpRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FolderUpRecord::kIdFieldNumber;
const int FolderUpRecord::kNameFieldNumber;
const int FolderUpRecord::kSizeFieldNumber;
const int FolderUpRecord::kPathFieldNumber;
const int FolderUpRecord::kUpdateFieldNumber;
const int FolderUpRecord::kUpuserIDFieldNumber;
const int FolderUpRecord::kUpusernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FolderUpRecord::FolderUpRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_FolderUpRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.FolderUpRecord)
}
FolderUpRecord::FolderUpRecord(const FolderUpRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  upusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.upusername().size() > 0) {
    upusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upusername_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&upuserid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(upuserid_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.FolderUpRecord)
}

void FolderUpRecord::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upuserid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(upuserid_));
}

FolderUpRecord::~FolderUpRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.FolderUpRecord)
  SharedDtor();
}

void FolderUpRecord::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FolderUpRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FolderUpRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FolderUpRecord& FolderUpRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_FolderUpRecord.base);
  return *internal_default_instance();
}


void FolderUpRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.FolderUpRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upuserid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(upuserid_));
  _internal_metadata_.Clear();
}

bool FolderUpRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.FolderUpRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.FolderUpRecord.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Path = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.FolderUpRecord.Path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Update = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 UpuserID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &upuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Upusername = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_upusername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->upusername().data(), static_cast<int>(this->upusername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.FolderUpRecord.Upusername"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.FolderUpRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.FolderUpRecord)
  return false;
#undef DO_
}

void FolderUpRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.FolderUpRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.FolderUpRecord.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 Size = 3;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->size(), output);
  }

  // string Path = 4;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.FolderUpRecord.Path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->path(), output);
  }

  // int32 Update = 5;
  if (this->update() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->update(), output);
  }

  // uint64 UpuserID = 6;
  if (this->upuserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->upuserid(), output);
  }

  // string Upusername = 7;
  if (this->upusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->upusername().data(), static_cast<int>(this->upusername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.FolderUpRecord.Upusername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->upusername(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.FolderUpRecord)
}

::google::protobuf::uint8* FolderUpRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.FolderUpRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.FolderUpRecord.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 Size = 3;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->size(), target);
  }

  // string Path = 4;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.FolderUpRecord.Path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->path(), target);
  }

  // int32 Update = 5;
  if (this->update() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->update(), target);
  }

  // uint64 UpuserID = 6;
  if (this->upuserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->upuserid(), target);
  }

  // string Upusername = 7;
  if (this->upusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->upusername().data(), static_cast<int>(this->upusername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.FolderUpRecord.Upusername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->upusername(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.FolderUpRecord)
  return target;
}

size_t FolderUpRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.FolderUpRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Path = 4;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // string Upusername = 7;
  if (this->upusername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upusername());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 Size = 3;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  // int32 Update = 5;
  if (this->update() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->update());
  }

  // uint64 UpuserID = 6;
  if (this->upuserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->upuserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FolderUpRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.FolderUpRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const FolderUpRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FolderUpRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.FolderUpRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.FolderUpRecord)
    MergeFrom(*source);
  }
}

void FolderUpRecord::MergeFrom(const FolderUpRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.FolderUpRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.upusername().size() > 0) {

    upusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upusername_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.update() != 0) {
    set_update(from.update());
  }
  if (from.upuserid() != 0) {
    set_upuserid(from.upuserid());
  }
}

void FolderUpRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.FolderUpRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FolderUpRecord::CopyFrom(const FolderUpRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.FolderUpRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FolderUpRecord::IsInitialized() const {
  return true;
}

void FolderUpRecord::Swap(FolderUpRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FolderUpRecord::InternalSwap(FolderUpRecord* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  upusername_.Swap(&other->upusername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(size_, other->size_);
  swap(update_, other->update_);
  swap(upuserid_, other->upuserid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FolderUpRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameFolderTree::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameFolderTree::kFolderTreelistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameFolderTree::SFrameFolderTree()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameFolderTree.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameFolderTree)
}
SFrameFolderTree::SFrameFolderTree(const SFrameFolderTree& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      foldertreelist_(from.foldertreelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameFolderTree)
}

void SFrameFolderTree::SharedCtor() {
}

SFrameFolderTree::~SFrameFolderTree() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameFolderTree)
  SharedDtor();
}

void SFrameFolderTree::SharedDtor() {
}

void SFrameFolderTree::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameFolderTree::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameFolderTree& SFrameFolderTree::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameFolderTree.base);
  return *internal_default_instance();
}


void SFrameFolderTree::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameFolderTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  foldertreelist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameFolderTree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameFolderTree)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.FolderTree FolderTreelist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_foldertreelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameFolderTree)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameFolderTree)
  return false;
#undef DO_
}

void SFrameFolderTree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameFolderTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.FolderTree FolderTreelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->foldertreelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->foldertreelist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameFolderTree)
}

::google::protobuf::uint8* SFrameFolderTree::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameFolderTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.FolderTree FolderTreelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->foldertreelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->foldertreelist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameFolderTree)
  return target;
}

size_t SFrameFolderTree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameFolderTree)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.FolderTree FolderTreelist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->foldertreelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->foldertreelist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameFolderTree::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameFolderTree)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameFolderTree* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameFolderTree>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameFolderTree)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameFolderTree)
    MergeFrom(*source);
  }
}

void SFrameFolderTree::MergeFrom(const SFrameFolderTree& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameFolderTree)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  foldertreelist_.MergeFrom(from.foldertreelist_);
}

void SFrameFolderTree::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameFolderTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameFolderTree::CopyFrom(const SFrameFolderTree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameFolderTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameFolderTree::IsInitialized() const {
  return true;
}

void SFrameFolderTree::Swap(SFrameFolderTree* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameFolderTree::InternalSwap(SFrameFolderTree* other) {
  using std::swap;
  CastToBase(&foldertreelist_)->InternalSwap(CastToBase(&other->foldertreelist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameFolderTree::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FolderTree::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FolderTree::kIdFieldNumber;
const int FolderTree::kNameFieldNumber;
const int FolderTree::kPidFieldNumber;
const int FolderTree::kFileUrlFieldNumber;
const int FolderTree::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FolderTree::FolderTree()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_FolderTree.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.FolderTree)
}
FolderTree::FolderTree(const FolderTree& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  fileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fileurl().size() > 0) {
    fileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fileurl_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.FolderTree)
}

void FolderTree::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(userid_));
}

FolderTree::~FolderTree() {
  // @@protoc_insertion_point(destructor:ServerProtocol.FolderTree)
  SharedDtor();
}

void FolderTree::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FolderTree::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FolderTree::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FolderTree& FolderTree::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_FolderTree.base);
  return *internal_default_instance();
}


void FolderTree::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.FolderTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(userid_));
  _internal_metadata_.Clear();
}

bool FolderTree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.FolderTree)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.FolderTree.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Pid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string FileUrl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fileurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fileurl().data(), static_cast<int>(this->fileurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.FolderTree.FileUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Userid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.FolderTree)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.FolderTree)
  return false;
#undef DO_
}

void FolderTree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.FolderTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.FolderTree.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // uint64 Pid = 3;
  if (this->pid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->pid(), output);
  }

  // string FileUrl = 4;
  if (this->fileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fileurl().data(), static_cast<int>(this->fileurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.FolderTree.FileUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->fileurl(), output);
  }

  // uint64 Userid = 5;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->userid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.FolderTree)
}

::google::protobuf::uint8* FolderTree::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.FolderTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.FolderTree.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // uint64 Pid = 3;
  if (this->pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->pid(), target);
  }

  // string FileUrl = 4;
  if (this->fileurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fileurl().data(), static_cast<int>(this->fileurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.FolderTree.FileUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->fileurl(), target);
  }

  // uint64 Userid = 5;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->userid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.FolderTree)
  return target;
}

size_t FolderTree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.FolderTree)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string FileUrl = 4;
  if (this->fileurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fileurl());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 Pid = 3;
  if (this->pid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pid());
  }

  // uint64 Userid = 5;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FolderTree::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.FolderTree)
  GOOGLE_DCHECK_NE(&from, this);
  const FolderTree* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FolderTree>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.FolderTree)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.FolderTree)
    MergeFrom(*source);
  }
}

void FolderTree::MergeFrom(const FolderTree& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.FolderTree)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.fileurl().size() > 0) {

    fileurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fileurl_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.pid() != 0) {
    set_pid(from.pid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void FolderTree::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.FolderTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FolderTree::CopyFrom(const FolderTree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.FolderTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FolderTree::IsInitialized() const {
  return true;
}

void FolderTree::Swap(FolderTree* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FolderTree::InternalSwap(FolderTree* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fileurl_.Swap(&other->fileurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(pid_, other->pid_);
  swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FolderTree::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameDeviceAlarm::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameDeviceAlarm::kDeviceAlarmlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameDeviceAlarm::SFrameDeviceAlarm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceAlarm.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameDeviceAlarm)
}
SFrameDeviceAlarm::SFrameDeviceAlarm(const SFrameDeviceAlarm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      devicealarmlist_(from.devicealarmlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameDeviceAlarm)
}

void SFrameDeviceAlarm::SharedCtor() {
}

SFrameDeviceAlarm::~SFrameDeviceAlarm() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameDeviceAlarm)
  SharedDtor();
}

void SFrameDeviceAlarm::SharedDtor() {
}

void SFrameDeviceAlarm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameDeviceAlarm::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameDeviceAlarm& SFrameDeviceAlarm::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceAlarm.base);
  return *internal_default_instance();
}


void SFrameDeviceAlarm::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameDeviceAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devicealarmlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameDeviceAlarm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameDeviceAlarm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.DeviceAlarm DeviceAlarmlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_devicealarmlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameDeviceAlarm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameDeviceAlarm)
  return false;
#undef DO_
}

void SFrameDeviceAlarm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameDeviceAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.DeviceAlarm DeviceAlarmlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devicealarmlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->devicealarmlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameDeviceAlarm)
}

::google::protobuf::uint8* SFrameDeviceAlarm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameDeviceAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.DeviceAlarm DeviceAlarmlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devicealarmlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->devicealarmlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameDeviceAlarm)
  return target;
}

size_t SFrameDeviceAlarm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameDeviceAlarm)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.DeviceAlarm DeviceAlarmlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->devicealarmlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->devicealarmlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameDeviceAlarm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameDeviceAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameDeviceAlarm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameDeviceAlarm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameDeviceAlarm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameDeviceAlarm)
    MergeFrom(*source);
  }
}

void SFrameDeviceAlarm::MergeFrom(const SFrameDeviceAlarm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameDeviceAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  devicealarmlist_.MergeFrom(from.devicealarmlist_);
}

void SFrameDeviceAlarm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameDeviceAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameDeviceAlarm::CopyFrom(const SFrameDeviceAlarm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameDeviceAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameDeviceAlarm::IsInitialized() const {
  return true;
}

void SFrameDeviceAlarm::Swap(SFrameDeviceAlarm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameDeviceAlarm::InternalSwap(SFrameDeviceAlarm* other) {
  using std::swap;
  CastToBase(&devicealarmlist_)->InternalSwap(CastToBase(&other->devicealarmlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameDeviceAlarm::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceAlarm::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceAlarm::kIdFieldNumber;
const int DeviceAlarm::kCurTimeFieldNumber;
const int DeviceAlarm::kHeppenTimeFieldNumber;
const int DeviceAlarm::kStateFieldNumber;
const int DeviceAlarm::kDeviceMacFieldNumber;
const int DeviceAlarm::kDevSortFieldNumber;
const int DeviceAlarm::kDevStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceAlarm::DeviceAlarm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_DeviceAlarm.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.DeviceAlarm)
}
DeviceAlarm::DeviceAlarm(const DeviceAlarm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  devicemac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.devicemac().size() > 0) {
    devicemac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicemac_);
  }
  devstate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.devstate().size() > 0) {
    devstate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devstate_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&devsort_) -
    reinterpret_cast<char*>(&id_)) + sizeof(devsort_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.DeviceAlarm)
}

void DeviceAlarm::SharedCtor() {
  devicemac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devstate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&devsort_) -
      reinterpret_cast<char*>(&id_)) + sizeof(devsort_));
}

DeviceAlarm::~DeviceAlarm() {
  // @@protoc_insertion_point(destructor:ServerProtocol.DeviceAlarm)
  SharedDtor();
}

void DeviceAlarm::SharedDtor() {
  devicemac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devstate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceAlarm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceAlarm::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceAlarm& DeviceAlarm::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_DeviceAlarm.base);
  return *internal_default_instance();
}


void DeviceAlarm::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.DeviceAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devicemac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devstate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&devsort_) -
      reinterpret_cast<char*>(&id_)) + sizeof(devsort_));
  _internal_metadata_.Clear();
}

bool DeviceAlarm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.DeviceAlarm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 CurTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &curtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 HeppenTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &heppentime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DeviceMac = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicemac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->devicemac().data(), static_cast<int>(this->devicemac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.DeviceAlarm.DeviceMac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 DevSort = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &devsort_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DevState = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devstate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->devstate().data(), static_cast<int>(this->devstate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.DeviceAlarm.DevState"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.DeviceAlarm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.DeviceAlarm)
  return false;
#undef DO_
}

void DeviceAlarm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.DeviceAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // int64 CurTime = 2;
  if (this->curtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->curtime(), output);
  }

  // int64 HeppenTime = 3;
  if (this->heppentime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->heppentime(), output);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  // string DeviceMac = 5;
  if (this->devicemac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicemac().data(), static_cast<int>(this->devicemac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DeviceAlarm.DeviceMac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->devicemac(), output);
  }

  // int32 DevSort = 6;
  if (this->devsort() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->devsort(), output);
  }

  // string DevState = 7;
  if (this->devstate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devstate().data(), static_cast<int>(this->devstate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DeviceAlarm.DevState");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->devstate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.DeviceAlarm)
}

::google::protobuf::uint8* DeviceAlarm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.DeviceAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // int64 CurTime = 2;
  if (this->curtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->curtime(), target);
  }

  // int64 HeppenTime = 3;
  if (this->heppentime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->heppentime(), target);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  // string DeviceMac = 5;
  if (this->devicemac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicemac().data(), static_cast<int>(this->devicemac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DeviceAlarm.DeviceMac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->devicemac(), target);
  }

  // int32 DevSort = 6;
  if (this->devsort() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->devsort(), target);
  }

  // string DevState = 7;
  if (this->devstate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devstate().data(), static_cast<int>(this->devstate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DeviceAlarm.DevState");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->devstate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.DeviceAlarm)
  return target;
}

size_t DeviceAlarm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.DeviceAlarm)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string DeviceMac = 5;
  if (this->devicemac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devicemac());
  }

  // string DevState = 7;
  if (this->devstate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devstate());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int64 CurTime = 2;
  if (this->curtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->curtime());
  }

  // int64 HeppenTime = 3;
  if (this->heppentime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->heppentime());
  }

  // int32 State = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int32 DevSort = 6;
  if (this->devsort() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->devsort());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceAlarm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.DeviceAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceAlarm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceAlarm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.DeviceAlarm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.DeviceAlarm)
    MergeFrom(*source);
  }
}

void DeviceAlarm::MergeFrom(const DeviceAlarm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.DeviceAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.devicemac().size() > 0) {

    devicemac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicemac_);
  }
  if (from.devstate().size() > 0) {

    devstate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devstate_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.curtime() != 0) {
    set_curtime(from.curtime());
  }
  if (from.heppentime() != 0) {
    set_heppentime(from.heppentime());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.devsort() != 0) {
    set_devsort(from.devsort());
  }
}

void DeviceAlarm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.DeviceAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceAlarm::CopyFrom(const DeviceAlarm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.DeviceAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceAlarm::IsInitialized() const {
  return true;
}

void DeviceAlarm::Swap(DeviceAlarm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceAlarm::InternalSwap(DeviceAlarm* other) {
  using std::swap;
  devicemac_.Swap(&other->devicemac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  devstate_.Swap(&other->devstate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(curtime_, other->curtime_);
  swap(heppentime_, other->heppentime_);
  swap(state_, other->state_);
  swap(devsort_, other->devsort_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceAlarm::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameDeviceAlarmProperty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameDeviceAlarmProperty::kDeviceAlarmPropertylistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameDeviceAlarmProperty::SFrameDeviceAlarmProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceAlarmProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameDeviceAlarmProperty)
}
SFrameDeviceAlarmProperty::SFrameDeviceAlarmProperty(const SFrameDeviceAlarmProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      devicealarmpropertylist_(from.devicealarmpropertylist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameDeviceAlarmProperty)
}

void SFrameDeviceAlarmProperty::SharedCtor() {
}

SFrameDeviceAlarmProperty::~SFrameDeviceAlarmProperty() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameDeviceAlarmProperty)
  SharedDtor();
}

void SFrameDeviceAlarmProperty::SharedDtor() {
}

void SFrameDeviceAlarmProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameDeviceAlarmProperty::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameDeviceAlarmProperty& SFrameDeviceAlarmProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceAlarmProperty.base);
  return *internal_default_instance();
}


void SFrameDeviceAlarmProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameDeviceAlarmProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devicealarmpropertylist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameDeviceAlarmProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameDeviceAlarmProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.DeviceAlarmProperty DeviceAlarmPropertylist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_devicealarmpropertylist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameDeviceAlarmProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameDeviceAlarmProperty)
  return false;
#undef DO_
}

void SFrameDeviceAlarmProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameDeviceAlarmProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.DeviceAlarmProperty DeviceAlarmPropertylist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devicealarmpropertylist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->devicealarmpropertylist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameDeviceAlarmProperty)
}

::google::protobuf::uint8* SFrameDeviceAlarmProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameDeviceAlarmProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.DeviceAlarmProperty DeviceAlarmPropertylist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devicealarmpropertylist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->devicealarmpropertylist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameDeviceAlarmProperty)
  return target;
}

size_t SFrameDeviceAlarmProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameDeviceAlarmProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.DeviceAlarmProperty DeviceAlarmPropertylist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->devicealarmpropertylist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->devicealarmpropertylist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameDeviceAlarmProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameDeviceAlarmProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameDeviceAlarmProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameDeviceAlarmProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameDeviceAlarmProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameDeviceAlarmProperty)
    MergeFrom(*source);
  }
}

void SFrameDeviceAlarmProperty::MergeFrom(const SFrameDeviceAlarmProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameDeviceAlarmProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  devicealarmpropertylist_.MergeFrom(from.devicealarmpropertylist_);
}

void SFrameDeviceAlarmProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameDeviceAlarmProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameDeviceAlarmProperty::CopyFrom(const SFrameDeviceAlarmProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameDeviceAlarmProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameDeviceAlarmProperty::IsInitialized() const {
  return true;
}

void SFrameDeviceAlarmProperty::Swap(SFrameDeviceAlarmProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameDeviceAlarmProperty::InternalSwap(SFrameDeviceAlarmProperty* other) {
  using std::swap;
  CastToBase(&devicealarmpropertylist_)->InternalSwap(CastToBase(&other->devicealarmpropertylist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameDeviceAlarmProperty::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceAlarmProperty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceAlarmProperty::kIdFieldNumber;
const int DeviceAlarmProperty::kDeviceAlarmIdFieldNumber;
const int DeviceAlarmProperty::kAlarmTypeFieldNumber;
const int DeviceAlarmProperty::kAlarmValueFieldNumber;
const int DeviceAlarmProperty::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceAlarmProperty::DeviceAlarmProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_DeviceAlarmProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.DeviceAlarmProperty)
}
DeviceAlarmProperty::DeviceAlarmProperty(const DeviceAlarmProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.DeviceAlarmProperty)
}

void DeviceAlarmProperty::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

DeviceAlarmProperty::~DeviceAlarmProperty() {
  // @@protoc_insertion_point(destructor:ServerProtocol.DeviceAlarmProperty)
  SharedDtor();
}

void DeviceAlarmProperty::SharedDtor() {
}

void DeviceAlarmProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceAlarmProperty::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceAlarmProperty& DeviceAlarmProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_DeviceAlarmProperty.base);
  return *internal_default_instance();
}


void DeviceAlarmProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.DeviceAlarmProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool DeviceAlarmProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.DeviceAlarmProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 DeviceAlarmId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &devicealarmid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 AlarmType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alarmtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 AlarmValue = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alarmvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.DeviceAlarmProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.DeviceAlarmProperty)
  return false;
#undef DO_
}

void DeviceAlarmProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.DeviceAlarmProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 DeviceAlarmId = 2;
  if (this->devicealarmid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->devicealarmid(), output);
  }

  // int32 AlarmType = 3;
  if (this->alarmtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->alarmtype(), output);
  }

  // int32 AlarmValue = 4;
  if (this->alarmvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->alarmvalue(), output);
  }

  // int32 State = 5;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.DeviceAlarmProperty)
}

::google::protobuf::uint8* DeviceAlarmProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.DeviceAlarmProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 DeviceAlarmId = 2;
  if (this->devicealarmid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->devicealarmid(), target);
  }

  // int32 AlarmType = 3;
  if (this->alarmtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->alarmtype(), target);
  }

  // int32 AlarmValue = 4;
  if (this->alarmvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->alarmvalue(), target);
  }

  // int32 State = 5;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.DeviceAlarmProperty)
  return target;
}

size_t DeviceAlarmProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.DeviceAlarmProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 DeviceAlarmId = 2;
  if (this->devicealarmid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->devicealarmid());
  }

  // int32 AlarmType = 3;
  if (this->alarmtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->alarmtype());
  }

  // int32 AlarmValue = 4;
  if (this->alarmvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->alarmvalue());
  }

  // int32 State = 5;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceAlarmProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.DeviceAlarmProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceAlarmProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceAlarmProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.DeviceAlarmProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.DeviceAlarmProperty)
    MergeFrom(*source);
  }
}

void DeviceAlarmProperty::MergeFrom(const DeviceAlarmProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.DeviceAlarmProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.devicealarmid() != 0) {
    set_devicealarmid(from.devicealarmid());
  }
  if (from.alarmtype() != 0) {
    set_alarmtype(from.alarmtype());
  }
  if (from.alarmvalue() != 0) {
    set_alarmvalue(from.alarmvalue());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void DeviceAlarmProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.DeviceAlarmProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceAlarmProperty::CopyFrom(const DeviceAlarmProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.DeviceAlarmProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceAlarmProperty::IsInitialized() const {
  return true;
}

void DeviceAlarmProperty::Swap(DeviceAlarmProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceAlarmProperty::InternalSwap(DeviceAlarmProperty* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(devicealarmid_, other->devicealarmid_);
  swap(alarmtype_, other->alarmtype_);
  swap(alarmvalue_, other->alarmvalue_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceAlarmProperty::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameGwDeviceBindTemp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameGwDeviceBindTemp::kGwDeviceBindTemplistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameGwDeviceBindTemp::SFrameGwDeviceBindTemp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameGwDeviceBindTemp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameGwDeviceBindTemp)
}
SFrameGwDeviceBindTemp::SFrameGwDeviceBindTemp(const SFrameGwDeviceBindTemp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gwdevicebindtemplist_(from.gwdevicebindtemplist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameGwDeviceBindTemp)
}

void SFrameGwDeviceBindTemp::SharedCtor() {
}

SFrameGwDeviceBindTemp::~SFrameGwDeviceBindTemp() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameGwDeviceBindTemp)
  SharedDtor();
}

void SFrameGwDeviceBindTemp::SharedDtor() {
}

void SFrameGwDeviceBindTemp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameGwDeviceBindTemp::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameGwDeviceBindTemp& SFrameGwDeviceBindTemp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameGwDeviceBindTemp.base);
  return *internal_default_instance();
}


void SFrameGwDeviceBindTemp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameGwDeviceBindTemp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gwdevicebindtemplist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameGwDeviceBindTemp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameGwDeviceBindTemp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.GwDeviceBindTemp GwDeviceBindTemplist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_gwdevicebindtemplist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameGwDeviceBindTemp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameGwDeviceBindTemp)
  return false;
#undef DO_
}

void SFrameGwDeviceBindTemp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameGwDeviceBindTemp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.GwDeviceBindTemp GwDeviceBindTemplist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gwdevicebindtemplist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->gwdevicebindtemplist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameGwDeviceBindTemp)
}

::google::protobuf::uint8* SFrameGwDeviceBindTemp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameGwDeviceBindTemp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.GwDeviceBindTemp GwDeviceBindTemplist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gwdevicebindtemplist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->gwdevicebindtemplist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameGwDeviceBindTemp)
  return target;
}

size_t SFrameGwDeviceBindTemp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameGwDeviceBindTemp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.GwDeviceBindTemp GwDeviceBindTemplist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->gwdevicebindtemplist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gwdevicebindtemplist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameGwDeviceBindTemp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameGwDeviceBindTemp)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameGwDeviceBindTemp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameGwDeviceBindTemp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameGwDeviceBindTemp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameGwDeviceBindTemp)
    MergeFrom(*source);
  }
}

void SFrameGwDeviceBindTemp::MergeFrom(const SFrameGwDeviceBindTemp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameGwDeviceBindTemp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gwdevicebindtemplist_.MergeFrom(from.gwdevicebindtemplist_);
}

void SFrameGwDeviceBindTemp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameGwDeviceBindTemp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameGwDeviceBindTemp::CopyFrom(const SFrameGwDeviceBindTemp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameGwDeviceBindTemp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameGwDeviceBindTemp::IsInitialized() const {
  return true;
}

void SFrameGwDeviceBindTemp::Swap(SFrameGwDeviceBindTemp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameGwDeviceBindTemp::InternalSwap(SFrameGwDeviceBindTemp* other) {
  using std::swap;
  CastToBase(&gwdevicebindtemplist_)->InternalSwap(CastToBase(&other->gwdevicebindtemplist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameGwDeviceBindTemp::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GwDeviceBindTemp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GwDeviceBindTemp::kIdFieldNumber;
const int GwDeviceBindTemp::kGwMacFieldNumber;
const int GwDeviceBindTemp::kDeviceMacFieldNumber;
const int GwDeviceBindTemp::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GwDeviceBindTemp::GwDeviceBindTemp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_GwDeviceBindTemp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.GwDeviceBindTemp)
}
GwDeviceBindTemp::GwDeviceBindTemp(const GwDeviceBindTemp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gwmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gwmac().size() > 0) {
    gwmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gwmac_);
  }
  devicemac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.devicemac().size() > 0) {
    devicemac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicemac_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.GwDeviceBindTemp)
}

void GwDeviceBindTemp::SharedCtor() {
  gwmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicemac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

GwDeviceBindTemp::~GwDeviceBindTemp() {
  // @@protoc_insertion_point(destructor:ServerProtocol.GwDeviceBindTemp)
  SharedDtor();
}

void GwDeviceBindTemp::SharedDtor() {
  gwmac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicemac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GwDeviceBindTemp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GwDeviceBindTemp::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GwDeviceBindTemp& GwDeviceBindTemp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_GwDeviceBindTemp.base);
  return *internal_default_instance();
}


void GwDeviceBindTemp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.GwDeviceBindTemp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gwmac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicemac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool GwDeviceBindTemp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.GwDeviceBindTemp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string GwMac = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gwmac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gwmac().data(), static_cast<int>(this->gwmac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.GwDeviceBindTemp.GwMac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DeviceMac = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicemac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->devicemac().data(), static_cast<int>(this->devicemac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.GwDeviceBindTemp.DeviceMac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.GwDeviceBindTemp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.GwDeviceBindTemp)
  return false;
#undef DO_
}

void GwDeviceBindTemp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.GwDeviceBindTemp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string GwMac = 2;
  if (this->gwmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gwmac().data(), static_cast<int>(this->gwmac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.GwDeviceBindTemp.GwMac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gwmac(), output);
  }

  // string DeviceMac = 3;
  if (this->devicemac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicemac().data(), static_cast<int>(this->devicemac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.GwDeviceBindTemp.DeviceMac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->devicemac(), output);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.GwDeviceBindTemp)
}

::google::protobuf::uint8* GwDeviceBindTemp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.GwDeviceBindTemp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string GwMac = 2;
  if (this->gwmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gwmac().data(), static_cast<int>(this->gwmac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.GwDeviceBindTemp.GwMac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gwmac(), target);
  }

  // string DeviceMac = 3;
  if (this->devicemac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicemac().data(), static_cast<int>(this->devicemac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.GwDeviceBindTemp.DeviceMac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->devicemac(), target);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.GwDeviceBindTemp)
  return target;
}

size_t GwDeviceBindTemp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.GwDeviceBindTemp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string GwMac = 2;
  if (this->gwmac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gwmac());
  }

  // string DeviceMac = 3;
  if (this->devicemac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devicemac());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 State = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GwDeviceBindTemp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.GwDeviceBindTemp)
  GOOGLE_DCHECK_NE(&from, this);
  const GwDeviceBindTemp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GwDeviceBindTemp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.GwDeviceBindTemp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.GwDeviceBindTemp)
    MergeFrom(*source);
  }
}

void GwDeviceBindTemp::MergeFrom(const GwDeviceBindTemp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.GwDeviceBindTemp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gwmac().size() > 0) {

    gwmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gwmac_);
  }
  if (from.devicemac().size() > 0) {

    devicemac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicemac_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void GwDeviceBindTemp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.GwDeviceBindTemp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GwDeviceBindTemp::CopyFrom(const GwDeviceBindTemp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.GwDeviceBindTemp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GwDeviceBindTemp::IsInitialized() const {
  return true;
}

void GwDeviceBindTemp::Swap(GwDeviceBindTemp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GwDeviceBindTemp::InternalSwap(GwDeviceBindTemp* other) {
  using std::swap;
  gwmac_.Swap(&other->gwmac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  devicemac_.Swap(&other->devicemac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GwDeviceBindTemp::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameDeviceDescribeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameDeviceDescribeInfo::kDeviceDescribeInfotlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameDeviceDescribeInfo::SFrameDeviceDescribeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceDescribeInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameDeviceDescribeInfo)
}
SFrameDeviceDescribeInfo::SFrameDeviceDescribeInfo(const SFrameDeviceDescribeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      devicedescribeinfotlist_(from.devicedescribeinfotlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameDeviceDescribeInfo)
}

void SFrameDeviceDescribeInfo::SharedCtor() {
}

SFrameDeviceDescribeInfo::~SFrameDeviceDescribeInfo() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameDeviceDescribeInfo)
  SharedDtor();
}

void SFrameDeviceDescribeInfo::SharedDtor() {
}

void SFrameDeviceDescribeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameDeviceDescribeInfo::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameDeviceDescribeInfo& SFrameDeviceDescribeInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceDescribeInfo.base);
  return *internal_default_instance();
}


void SFrameDeviceDescribeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameDeviceDescribeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devicedescribeinfotlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameDeviceDescribeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameDeviceDescribeInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.DeviceDescribeInfo DeviceDescribeInfotlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_devicedescribeinfotlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameDeviceDescribeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameDeviceDescribeInfo)
  return false;
#undef DO_
}

void SFrameDeviceDescribeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameDeviceDescribeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.DeviceDescribeInfo DeviceDescribeInfotlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devicedescribeinfotlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->devicedescribeinfotlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameDeviceDescribeInfo)
}

::google::protobuf::uint8* SFrameDeviceDescribeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameDeviceDescribeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.DeviceDescribeInfo DeviceDescribeInfotlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devicedescribeinfotlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->devicedescribeinfotlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameDeviceDescribeInfo)
  return target;
}

size_t SFrameDeviceDescribeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameDeviceDescribeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.DeviceDescribeInfo DeviceDescribeInfotlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->devicedescribeinfotlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->devicedescribeinfotlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameDeviceDescribeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameDeviceDescribeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameDeviceDescribeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameDeviceDescribeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameDeviceDescribeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameDeviceDescribeInfo)
    MergeFrom(*source);
  }
}

void SFrameDeviceDescribeInfo::MergeFrom(const SFrameDeviceDescribeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameDeviceDescribeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  devicedescribeinfotlist_.MergeFrom(from.devicedescribeinfotlist_);
}

void SFrameDeviceDescribeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameDeviceDescribeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameDeviceDescribeInfo::CopyFrom(const SFrameDeviceDescribeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameDeviceDescribeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameDeviceDescribeInfo::IsInitialized() const {
  return true;
}

void SFrameDeviceDescribeInfo::Swap(SFrameDeviceDescribeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameDeviceDescribeInfo::InternalSwap(SFrameDeviceDescribeInfo* other) {
  using std::swap;
  CastToBase(&devicedescribeinfotlist_)->InternalSwap(CastToBase(&other->devicedescribeinfotlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameDeviceDescribeInfo::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceDescribeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceDescribeInfo::kIdFieldNumber;
const int DeviceDescribeInfo::kDesribeFieldNumber;
const int DeviceDescribeInfo::kTypeValueFieldNumber;
const int DeviceDescribeInfo::kStateFieldNumber;
const int DeviceDescribeInfo::kBigDesribeFieldNumber;
const int DeviceDescribeInfo::kDevTypeCribeIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceDescribeInfo::DeviceDescribeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_DeviceDescribeInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.DeviceDescribeInfo)
}
DeviceDescribeInfo::DeviceDescribeInfo(const DeviceDescribeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  desribe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desribe().size() > 0) {
    desribe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desribe_);
  }
  bigdesribe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bigdesribe().size() > 0) {
    bigdesribe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bigdesribe_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&devtypecribeid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(devtypecribeid_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.DeviceDescribeInfo)
}

void DeviceDescribeInfo::SharedCtor() {
  desribe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bigdesribe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&devtypecribeid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(devtypecribeid_));
}

DeviceDescribeInfo::~DeviceDescribeInfo() {
  // @@protoc_insertion_point(destructor:ServerProtocol.DeviceDescribeInfo)
  SharedDtor();
}

void DeviceDescribeInfo::SharedDtor() {
  desribe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bigdesribe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceDescribeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceDescribeInfo::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceDescribeInfo& DeviceDescribeInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_DeviceDescribeInfo.base);
  return *internal_default_instance();
}


void DeviceDescribeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.DeviceDescribeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  desribe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bigdesribe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&devtypecribeid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(devtypecribeid_));
  _internal_metadata_.Clear();
}

bool DeviceDescribeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.DeviceDescribeInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Desribe = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desribe()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desribe().data(), static_cast<int>(this->desribe().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.DeviceDescribeInfo.Desribe"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 TypeValue = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &typevalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string BigDesribe = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bigdesribe()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bigdesribe().data(), static_cast<int>(this->bigdesribe().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.DeviceDescribeInfo.BigDesribe"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 DevTypeCribeID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &devtypecribeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.DeviceDescribeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.DeviceDescribeInfo)
  return false;
#undef DO_
}

void DeviceDescribeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.DeviceDescribeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string Desribe = 2;
  if (this->desribe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desribe().data(), static_cast<int>(this->desribe().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DeviceDescribeInfo.Desribe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->desribe(), output);
  }

  // int32 TypeValue = 3;
  if (this->typevalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->typevalue(), output);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  // string BigDesribe = 5;
  if (this->bigdesribe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bigdesribe().data(), static_cast<int>(this->bigdesribe().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DeviceDescribeInfo.BigDesribe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->bigdesribe(), output);
  }

  // uint64 DevTypeCribeID = 6;
  if (this->devtypecribeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->devtypecribeid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.DeviceDescribeInfo)
}

::google::protobuf::uint8* DeviceDescribeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.DeviceDescribeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string Desribe = 2;
  if (this->desribe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desribe().data(), static_cast<int>(this->desribe().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DeviceDescribeInfo.Desribe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->desribe(), target);
  }

  // int32 TypeValue = 3;
  if (this->typevalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->typevalue(), target);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  // string BigDesribe = 5;
  if (this->bigdesribe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bigdesribe().data(), static_cast<int>(this->bigdesribe().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.DeviceDescribeInfo.BigDesribe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->bigdesribe(), target);
  }

  // uint64 DevTypeCribeID = 6;
  if (this->devtypecribeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->devtypecribeid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.DeviceDescribeInfo)
  return target;
}

size_t DeviceDescribeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.DeviceDescribeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Desribe = 2;
  if (this->desribe().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desribe());
  }

  // string BigDesribe = 5;
  if (this->bigdesribe().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bigdesribe());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 TypeValue = 3;
  if (this->typevalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->typevalue());
  }

  // int32 State = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // uint64 DevTypeCribeID = 6;
  if (this->devtypecribeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->devtypecribeid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceDescribeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.DeviceDescribeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceDescribeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceDescribeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.DeviceDescribeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.DeviceDescribeInfo)
    MergeFrom(*source);
  }
}

void DeviceDescribeInfo::MergeFrom(const DeviceDescribeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.DeviceDescribeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.desribe().size() > 0) {

    desribe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desribe_);
  }
  if (from.bigdesribe().size() > 0) {

    bigdesribe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bigdesribe_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.typevalue() != 0) {
    set_typevalue(from.typevalue());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.devtypecribeid() != 0) {
    set_devtypecribeid(from.devtypecribeid());
  }
}

void DeviceDescribeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.DeviceDescribeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceDescribeInfo::CopyFrom(const DeviceDescribeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.DeviceDescribeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceDescribeInfo::IsInitialized() const {
  return true;
}

void DeviceDescribeInfo::Swap(DeviceDescribeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceDescribeInfo::InternalSwap(DeviceDescribeInfo* other) {
  using std::swap;
  desribe_.Swap(&other->desribe_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bigdesribe_.Swap(&other->bigdesribe_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(typevalue_, other->typevalue_);
  swap(state_, other->state_);
  swap(devtypecribeid_, other->devtypecribeid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceDescribeInfo::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SystemJGPush::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemJGPush::kPushTypeFieldNumber;
const int SystemJGPush::kActionTypeFieldNumber;
const int SystemJGPush::kPushTagOrAliasFieldNumber;
const int SystemJGPush::kAlertFieldNumber;
const int SystemJGPush::kTitleFieldNumber;
const int SystemJGPush::kContentFieldNumber;
const int SystemJGPush::kMsgTitleFieldNumber;
const int SystemJGPush::kPushAppTypeFieldNumber;
const int SystemJGPush::kPushTempTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemJGPush::SystemJGPush()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SystemJGPush.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SystemJGPush)
}
SystemJGPush::SystemJGPush(const SystemJGPush& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pushtagoralias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pushtagoralias().size() > 0) {
    pushtagoralias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pushtagoralias_);
  }
  alert_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alert().size() > 0) {
    alert_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alert_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  msgtitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgtitle().size() > 0) {
    msgtitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgtitle_);
  }
  ::memcpy(&pushtype_, &from.pushtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&pushtemptype_) -
    reinterpret_cast<char*>(&pushtype_)) + sizeof(pushtemptype_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SystemJGPush)
}

void SystemJGPush::SharedCtor() {
  pushtagoralias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alert_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pushtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pushtemptype_) -
      reinterpret_cast<char*>(&pushtype_)) + sizeof(pushtemptype_));
}

SystemJGPush::~SystemJGPush() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SystemJGPush)
  SharedDtor();
}

void SystemJGPush::SharedDtor() {
  pushtagoralias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alert_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtitle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SystemJGPush::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SystemJGPush::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SystemJGPush& SystemJGPush::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SystemJGPush.base);
  return *internal_default_instance();
}


void SystemJGPush::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SystemJGPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pushtagoralias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alert_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtitle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pushtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pushtemptype_) -
      reinterpret_cast<char*>(&pushtype_)) + sizeof(pushtemptype_));
  _internal_metadata_.Clear();
}

bool SystemJGPush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SystemJGPush)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 PushType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pushtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ActionType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actiontype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PushTagOrAlias = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pushtagoralias()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pushtagoralias().data(), static_cast<int>(this->pushtagoralias().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SystemJGPush.PushTagOrAlias"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Alert = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alert()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alert().data(), static_cast<int>(this->alert().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SystemJGPush.Alert"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Title = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SystemJGPush.Title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Content = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SystemJGPush.Content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MsgTitle = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgtitle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msgtitle().data(), static_cast<int>(this->msgtitle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SystemJGPush.MsgTitle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PushAppType = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pushapptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PushTempType = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pushtemptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SystemJGPush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SystemJGPush)
  return false;
#undef DO_
}

void SystemJGPush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SystemJGPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PushType = 1;
  if (this->pushtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pushtype(), output);
  }

  // int32 ActionType = 2;
  if (this->actiontype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->actiontype(), output);
  }

  // string PushTagOrAlias = 3;
  if (this->pushtagoralias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pushtagoralias().data(), static_cast<int>(this->pushtagoralias().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SystemJGPush.PushTagOrAlias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pushtagoralias(), output);
  }

  // string Alert = 4;
  if (this->alert().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alert().data(), static_cast<int>(this->alert().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SystemJGPush.Alert");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->alert(), output);
  }

  // string Title = 5;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SystemJGPush.Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->title(), output);
  }

  // string Content = 6;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SystemJGPush.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->content(), output);
  }

  // string MsgTitle = 7;
  if (this->msgtitle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgtitle().data(), static_cast<int>(this->msgtitle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SystemJGPush.MsgTitle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->msgtitle(), output);
  }

  // int32 PushAppType = 8;
  if (this->pushapptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->pushapptype(), output);
  }

  // int32 PushTempType = 9;
  if (this->pushtemptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->pushtemptype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SystemJGPush)
}

::google::protobuf::uint8* SystemJGPush::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SystemJGPush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PushType = 1;
  if (this->pushtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pushtype(), target);
  }

  // int32 ActionType = 2;
  if (this->actiontype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->actiontype(), target);
  }

  // string PushTagOrAlias = 3;
  if (this->pushtagoralias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pushtagoralias().data(), static_cast<int>(this->pushtagoralias().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SystemJGPush.PushTagOrAlias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pushtagoralias(), target);
  }

  // string Alert = 4;
  if (this->alert().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alert().data(), static_cast<int>(this->alert().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SystemJGPush.Alert");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->alert(), target);
  }

  // string Title = 5;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SystemJGPush.Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->title(), target);
  }

  // string Content = 6;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SystemJGPush.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->content(), target);
  }

  // string MsgTitle = 7;
  if (this->msgtitle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgtitle().data(), static_cast<int>(this->msgtitle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SystemJGPush.MsgTitle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->msgtitle(), target);
  }

  // int32 PushAppType = 8;
  if (this->pushapptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->pushapptype(), target);
  }

  // int32 PushTempType = 9;
  if (this->pushtemptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->pushtemptype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SystemJGPush)
  return target;
}

size_t SystemJGPush::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SystemJGPush)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string PushTagOrAlias = 3;
  if (this->pushtagoralias().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pushtagoralias());
  }

  // string Alert = 4;
  if (this->alert().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alert());
  }

  // string Title = 5;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string Content = 6;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // string MsgTitle = 7;
  if (this->msgtitle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msgtitle());
  }

  // int32 PushType = 1;
  if (this->pushtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pushtype());
  }

  // int32 ActionType = 2;
  if (this->actiontype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actiontype());
  }

  // int32 PushAppType = 8;
  if (this->pushapptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pushapptype());
  }

  // int32 PushTempType = 9;
  if (this->pushtemptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pushtemptype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemJGPush::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SystemJGPush)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemJGPush* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemJGPush>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SystemJGPush)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SystemJGPush)
    MergeFrom(*source);
  }
}

void SystemJGPush::MergeFrom(const SystemJGPush& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SystemJGPush)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pushtagoralias().size() > 0) {

    pushtagoralias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pushtagoralias_);
  }
  if (from.alert().size() > 0) {

    alert_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alert_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.msgtitle().size() > 0) {

    msgtitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgtitle_);
  }
  if (from.pushtype() != 0) {
    set_pushtype(from.pushtype());
  }
  if (from.actiontype() != 0) {
    set_actiontype(from.actiontype());
  }
  if (from.pushapptype() != 0) {
    set_pushapptype(from.pushapptype());
  }
  if (from.pushtemptype() != 0) {
    set_pushtemptype(from.pushtemptype());
  }
}

void SystemJGPush::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SystemJGPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemJGPush::CopyFrom(const SystemJGPush& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SystemJGPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemJGPush::IsInitialized() const {
  return true;
}

void SystemJGPush::Swap(SystemJGPush* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemJGPush::InternalSwap(SystemJGPush* other) {
  using std::swap;
  pushtagoralias_.Swap(&other->pushtagoralias_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  alert_.Swap(&other->alert_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msgtitle_.Swap(&other->msgtitle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pushtype_, other->pushtype_);
  swap(actiontype_, other->actiontype_);
  swap(pushapptype_, other->pushapptype_);
  swap(pushtemptype_, other->pushtemptype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SystemJGPush::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FrameRegisterServer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameRegisterServer::kIdFieldNumber;
const int FrameRegisterServer::kTypeFieldNumber;
const int FrameRegisterServer::kMaxLinkFieldNumber;
const int FrameRegisterServer::kCmdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameRegisterServer::FrameRegisterServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_FrameRegisterServer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.FrameRegisterServer)
}
FrameRegisterServer::FrameRegisterServer(const FrameRegisterServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cmdlist_(from.cmdlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxlink_) -
    reinterpret_cast<char*>(&id_)) + sizeof(maxlink_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.FrameRegisterServer)
}

void FrameRegisterServer::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxlink_) -
      reinterpret_cast<char*>(&id_)) + sizeof(maxlink_));
}

FrameRegisterServer::~FrameRegisterServer() {
  // @@protoc_insertion_point(destructor:ServerProtocol.FrameRegisterServer)
  SharedDtor();
}

void FrameRegisterServer::SharedDtor() {
}

void FrameRegisterServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FrameRegisterServer::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FrameRegisterServer& FrameRegisterServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_FrameRegisterServer.base);
  return *internal_default_instance();
}


void FrameRegisterServer::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.FrameRegisterServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cmdlist_.Clear();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxlink_) -
      reinterpret_cast<char*>(&id_)) + sizeof(maxlink_));
  _internal_metadata_.Clear();
}

bool FrameRegisterServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.FrameRegisterServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MaxLink = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxlink_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 CmdList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cmdlist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_cmdlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.FrameRegisterServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.FrameRegisterServer)
  return false;
#undef DO_
}

void FrameRegisterServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.FrameRegisterServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 Type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // int32 MaxLink = 3;
  if (this->maxlink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maxlink(), output);
  }

  // repeated int32 CmdList = 4;
  if (this->cmdlist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _cmdlist_cached_byte_size_));
  }
  for (int i = 0, n = this->cmdlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->cmdlist(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.FrameRegisterServer)
}

::google::protobuf::uint8* FrameRegisterServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.FrameRegisterServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 Type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // int32 MaxLink = 3;
  if (this->maxlink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maxlink(), target);
  }

  // repeated int32 CmdList = 4;
  if (this->cmdlist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _cmdlist_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->cmdlist_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.FrameRegisterServer)
  return target;
}

size_t FrameRegisterServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.FrameRegisterServer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 CmdList = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->cmdlist_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cmdlist_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 Type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 MaxLink = 3;
  if (this->maxlink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxlink());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrameRegisterServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.FrameRegisterServer)
  GOOGLE_DCHECK_NE(&from, this);
  const FrameRegisterServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameRegisterServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.FrameRegisterServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.FrameRegisterServer)
    MergeFrom(*source);
  }
}

void FrameRegisterServer::MergeFrom(const FrameRegisterServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.FrameRegisterServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cmdlist_.MergeFrom(from.cmdlist_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.maxlink() != 0) {
    set_maxlink(from.maxlink());
  }
}

void FrameRegisterServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.FrameRegisterServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameRegisterServer::CopyFrom(const FrameRegisterServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.FrameRegisterServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameRegisterServer::IsInitialized() const {
  return true;
}

void FrameRegisterServer::Swap(FrameRegisterServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameRegisterServer::InternalSwap(FrameRegisterServer* other) {
  using std::swap;
  cmdlist_.InternalSwap(&other->cmdlist_);
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(maxlink_, other->maxlink_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FrameRegisterServer::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FrameRegisterServerAnswer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameRegisterServerAnswer::kStateFieldNumber;
const int FrameRegisterServerAnswer::kIdFieldNumber;
const int FrameRegisterServerAnswer::kFrameUserInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameRegisterServerAnswer::FrameRegisterServerAnswer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_FrameRegisterServerAnswer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.FrameRegisterServerAnswer)
}
FrameRegisterServerAnswer::FrameRegisterServerAnswer(const FrameRegisterServerAnswer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      frameuserinfolist_(from.frameuserinfolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&state_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.FrameRegisterServerAnswer)
}

void FrameRegisterServerAnswer::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&state_)) + sizeof(id_));
}

FrameRegisterServerAnswer::~FrameRegisterServerAnswer() {
  // @@protoc_insertion_point(destructor:ServerProtocol.FrameRegisterServerAnswer)
  SharedDtor();
}

void FrameRegisterServerAnswer::SharedDtor() {
}

void FrameRegisterServerAnswer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FrameRegisterServerAnswer::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FrameRegisterServerAnswer& FrameRegisterServerAnswer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_FrameRegisterServerAnswer.base);
  return *internal_default_instance();
}


void FrameRegisterServerAnswer::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.FrameRegisterServerAnswer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frameuserinfolist_.Clear();
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&state_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool FrameRegisterServerAnswer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.FrameRegisterServerAnswer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ServerProtocol.FrameUserInfo FrameUserInfoList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_frameuserinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.FrameRegisterServerAnswer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.FrameRegisterServerAnswer)
  return false;
#undef DO_
}

void FrameRegisterServerAnswer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.FrameRegisterServerAnswer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->state(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // repeated .ServerProtocol.FrameUserInfo FrameUserInfoList = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frameuserinfolist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->frameuserinfolist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.FrameRegisterServerAnswer)
}

::google::protobuf::uint8* FrameRegisterServerAnswer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.FrameRegisterServerAnswer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->state(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // repeated .ServerProtocol.FrameUserInfo FrameUserInfoList = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frameuserinfolist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->frameuserinfolist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.FrameRegisterServerAnswer)
  return target;
}

size_t FrameRegisterServerAnswer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.FrameRegisterServerAnswer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.FrameUserInfo FrameUserInfoList = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->frameuserinfolist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->frameuserinfolist(static_cast<int>(i)));
    }
  }

  // int32 state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrameRegisterServerAnswer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.FrameRegisterServerAnswer)
  GOOGLE_DCHECK_NE(&from, this);
  const FrameRegisterServerAnswer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameRegisterServerAnswer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.FrameRegisterServerAnswer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.FrameRegisterServerAnswer)
    MergeFrom(*source);
  }
}

void FrameRegisterServerAnswer::MergeFrom(const FrameRegisterServerAnswer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.FrameRegisterServerAnswer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  frameuserinfolist_.MergeFrom(from.frameuserinfolist_);
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void FrameRegisterServerAnswer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.FrameRegisterServerAnswer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameRegisterServerAnswer::CopyFrom(const FrameRegisterServerAnswer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.FrameRegisterServerAnswer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameRegisterServerAnswer::IsInitialized() const {
  return true;
}

void FrameRegisterServerAnswer::Swap(FrameRegisterServerAnswer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameRegisterServerAnswer::InternalSwap(FrameRegisterServerAnswer* other) {
  using std::swap;
  CastToBase(&frameuserinfolist_)->InternalSwap(CastToBase(&other->frameuserinfolist_));
  swap(state_, other->state_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FrameRegisterServerAnswer::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FrameUserInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameUserInfo::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameUserInfo::FrameUserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_FrameUserInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.FrameUserInfo)
}
FrameUserInfo::FrameUserInfo(const FrameUserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.FrameUserInfo)
}

void FrameUserInfo::SharedCtor() {
  id_ = 0;
}

FrameUserInfo::~FrameUserInfo() {
  // @@protoc_insertion_point(destructor:ServerProtocol.FrameUserInfo)
  SharedDtor();
}

void FrameUserInfo::SharedDtor() {
}

void FrameUserInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FrameUserInfo::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FrameUserInfo& FrameUserInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_FrameUserInfo.base);
  return *internal_default_instance();
}


void FrameUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.FrameUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _internal_metadata_.Clear();
}

bool FrameUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.FrameUserInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.FrameUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.FrameUserInfo)
  return false;
#undef DO_
}

void FrameUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.FrameUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.FrameUserInfo)
}

::google::protobuf::uint8* FrameUserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.FrameUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.FrameUserInfo)
  return target;
}

size_t FrameUserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.FrameUserInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrameUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.FrameUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FrameUserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameUserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.FrameUserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.FrameUserInfo)
    MergeFrom(*source);
  }
}

void FrameUserInfo::MergeFrom(const FrameUserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.FrameUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void FrameUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.FrameUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameUserInfo::CopyFrom(const FrameUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.FrameUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameUserInfo::IsInitialized() const {
  return true;
}

void FrameUserInfo::Swap(FrameUserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameUserInfo::InternalSwap(FrameUserInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FrameUserInfo::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameGWDeviceContrast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameGWDeviceContrast::kSGWDeviceContrastlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameGWDeviceContrast::SFrameGWDeviceContrast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameGWDeviceContrast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameGWDeviceContrast)
}
SFrameGWDeviceContrast::SFrameGWDeviceContrast(const SFrameGWDeviceContrast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sgwdevicecontrastlist_(from.sgwdevicecontrastlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameGWDeviceContrast)
}

void SFrameGWDeviceContrast::SharedCtor() {
}

SFrameGWDeviceContrast::~SFrameGWDeviceContrast() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameGWDeviceContrast)
  SharedDtor();
}

void SFrameGWDeviceContrast::SharedDtor() {
}

void SFrameGWDeviceContrast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameGWDeviceContrast::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameGWDeviceContrast& SFrameGWDeviceContrast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameGWDeviceContrast.base);
  return *internal_default_instance();
}


void SFrameGWDeviceContrast::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameGWDeviceContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sgwdevicecontrastlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameGWDeviceContrast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameGWDeviceContrast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SGWDeviceContrast SGWDeviceContrastlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sgwdevicecontrastlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameGWDeviceContrast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameGWDeviceContrast)
  return false;
#undef DO_
}

void SFrameGWDeviceContrast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameGWDeviceContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SGWDeviceContrast SGWDeviceContrastlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sgwdevicecontrastlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sgwdevicecontrastlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameGWDeviceContrast)
}

::google::protobuf::uint8* SFrameGWDeviceContrast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameGWDeviceContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SGWDeviceContrast SGWDeviceContrastlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sgwdevicecontrastlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sgwdevicecontrastlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameGWDeviceContrast)
  return target;
}

size_t SFrameGWDeviceContrast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameGWDeviceContrast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SGWDeviceContrast SGWDeviceContrastlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sgwdevicecontrastlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sgwdevicecontrastlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameGWDeviceContrast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameGWDeviceContrast)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameGWDeviceContrast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameGWDeviceContrast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameGWDeviceContrast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameGWDeviceContrast)
    MergeFrom(*source);
  }
}

void SFrameGWDeviceContrast::MergeFrom(const SFrameGWDeviceContrast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameGWDeviceContrast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sgwdevicecontrastlist_.MergeFrom(from.sgwdevicecontrastlist_);
}

void SFrameGWDeviceContrast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameGWDeviceContrast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameGWDeviceContrast::CopyFrom(const SFrameGWDeviceContrast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameGWDeviceContrast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameGWDeviceContrast::IsInitialized() const {
  return true;
}

void SFrameGWDeviceContrast::Swap(SFrameGWDeviceContrast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameGWDeviceContrast::InternalSwap(SFrameGWDeviceContrast* other) {
  using std::swap;
  CastToBase(&sgwdevicecontrastlist_)->InternalSwap(CastToBase(&other->sgwdevicecontrastlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameGWDeviceContrast::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SGWDeviceContrast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SGWDeviceContrast::kIdFieldNumber;
const int SGWDeviceContrast::kGWIdFieldNumber;
const int SGWDeviceContrast::kDeviceIdFieldNumber;
const int SGWDeviceContrast::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SGWDeviceContrast::SGWDeviceContrast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SGWDeviceContrast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SGWDeviceContrast)
}
SGWDeviceContrast::SGWDeviceContrast(const SGWDeviceContrast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SGWDeviceContrast)
}

void SGWDeviceContrast::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

SGWDeviceContrast::~SGWDeviceContrast() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SGWDeviceContrast)
  SharedDtor();
}

void SGWDeviceContrast::SharedDtor() {
}

void SGWDeviceContrast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SGWDeviceContrast::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SGWDeviceContrast& SGWDeviceContrast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SGWDeviceContrast.base);
  return *internal_default_instance();
}


void SGWDeviceContrast::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SGWDeviceContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool SGWDeviceContrast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SGWDeviceContrast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 GWId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gwid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 DeviceId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &deviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SGWDeviceContrast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SGWDeviceContrast)
  return false;
#undef DO_
}

void SGWDeviceContrast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SGWDeviceContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 GWId = 2;
  if (this->gwid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gwid(), output);
  }

  // uint64 DeviceId = 3;
  if (this->deviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->deviceid(), output);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SGWDeviceContrast)
}

::google::protobuf::uint8* SGWDeviceContrast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SGWDeviceContrast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 GWId = 2;
  if (this->gwid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gwid(), target);
  }

  // uint64 DeviceId = 3;
  if (this->deviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->deviceid(), target);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SGWDeviceContrast)
  return target;
}

size_t SGWDeviceContrast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SGWDeviceContrast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 GWId = 2;
  if (this->gwid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gwid());
  }

  // uint64 DeviceId = 3;
  if (this->deviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->deviceid());
  }

  // int32 State = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SGWDeviceContrast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SGWDeviceContrast)
  GOOGLE_DCHECK_NE(&from, this);
  const SGWDeviceContrast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SGWDeviceContrast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SGWDeviceContrast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SGWDeviceContrast)
    MergeFrom(*source);
  }
}

void SGWDeviceContrast::MergeFrom(const SGWDeviceContrast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SGWDeviceContrast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.gwid() != 0) {
    set_gwid(from.gwid());
  }
  if (from.deviceid() != 0) {
    set_deviceid(from.deviceid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SGWDeviceContrast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SGWDeviceContrast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SGWDeviceContrast::CopyFrom(const SGWDeviceContrast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SGWDeviceContrast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SGWDeviceContrast::IsInitialized() const {
  return true;
}

void SGWDeviceContrast::Swap(SGWDeviceContrast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SGWDeviceContrast::InternalSwap(SGWDeviceContrast* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(gwid_, other->gwid_);
  swap(deviceid_, other->deviceid_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SGWDeviceContrast::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameDeviceFetNickName::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameDeviceFetNickName::kSDevFetNickNamelistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameDeviceFetNickName::SFrameDeviceFetNickName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceFetNickName.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameDeviceFetNickName)
}
SFrameDeviceFetNickName::SFrameDeviceFetNickName(const SFrameDeviceFetNickName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sdevfetnicknamelist_(from.sdevfetnicknamelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameDeviceFetNickName)
}

void SFrameDeviceFetNickName::SharedCtor() {
}

SFrameDeviceFetNickName::~SFrameDeviceFetNickName() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameDeviceFetNickName)
  SharedDtor();
}

void SFrameDeviceFetNickName::SharedDtor() {
}

void SFrameDeviceFetNickName::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameDeviceFetNickName::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameDeviceFetNickName& SFrameDeviceFetNickName::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceFetNickName.base);
  return *internal_default_instance();
}


void SFrameDeviceFetNickName::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameDeviceFetNickName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sdevfetnicknamelist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameDeviceFetNickName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameDeviceFetNickName)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SDevFetNickName SDevFetNickNamelist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sdevfetnicknamelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameDeviceFetNickName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameDeviceFetNickName)
  return false;
#undef DO_
}

void SFrameDeviceFetNickName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameDeviceFetNickName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SDevFetNickName SDevFetNickNamelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sdevfetnicknamelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sdevfetnicknamelist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameDeviceFetNickName)
}

::google::protobuf::uint8* SFrameDeviceFetNickName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameDeviceFetNickName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SDevFetNickName SDevFetNickNamelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sdevfetnicknamelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sdevfetnicknamelist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameDeviceFetNickName)
  return target;
}

size_t SFrameDeviceFetNickName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameDeviceFetNickName)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SDevFetNickName SDevFetNickNamelist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sdevfetnicknamelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sdevfetnicknamelist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameDeviceFetNickName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameDeviceFetNickName)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameDeviceFetNickName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameDeviceFetNickName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameDeviceFetNickName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameDeviceFetNickName)
    MergeFrom(*source);
  }
}

void SFrameDeviceFetNickName::MergeFrom(const SFrameDeviceFetNickName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameDeviceFetNickName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sdevfetnicknamelist_.MergeFrom(from.sdevfetnicknamelist_);
}

void SFrameDeviceFetNickName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameDeviceFetNickName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameDeviceFetNickName::CopyFrom(const SFrameDeviceFetNickName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameDeviceFetNickName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameDeviceFetNickName::IsInitialized() const {
  return true;
}

void SFrameDeviceFetNickName::Swap(SFrameDeviceFetNickName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameDeviceFetNickName::InternalSwap(SFrameDeviceFetNickName* other) {
  using std::swap;
  CastToBase(&sdevfetnicknamelist_)->InternalSwap(CastToBase(&other->sdevfetnicknamelist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameDeviceFetNickName::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SDevFetNickName::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SDevFetNickName::kIdFieldNumber;
const int SDevFetNickName::kMacFieldNumber;
const int SDevFetNickName::kFetSortFieldNumber;
const int SDevFetNickName::kNickNameFieldNumber;
const int SDevFetNickName::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SDevFetNickName::SDevFetNickName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SDevFetNickName.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SDevFetNickName)
}
SDevFetNickName::SDevFetNickName(const SDevFetNickName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac().size() > 0) {
    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SDevFetNickName)
}

void SDevFetNickName::SharedCtor() {
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

SDevFetNickName::~SDevFetNickName() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SDevFetNickName)
  SharedDtor();
}

void SDevFetNickName::SharedDtor() {
  mac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SDevFetNickName::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SDevFetNickName::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SDevFetNickName& SDevFetNickName::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SDevFetNickName.base);
  return *internal_default_instance();
}


void SDevFetNickName::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SDevFetNickName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool SDevFetNickName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SDevFetNickName)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Mac = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac().data(), static_cast<int>(this->mac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SDevFetNickName.Mac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 FetSort = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fetsort_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string NickName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SDevFetNickName.NickName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SDevFetNickName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SDevFetNickName)
  return false;
#undef DO_
}

void SDevFetNickName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SDevFetNickName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string Mac = 2;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDevFetNickName.Mac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mac(), output);
  }

  // int32 FetSort = 3;
  if (this->fetsort() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fetsort(), output);
  }

  // string NickName = 4;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDevFetNickName.NickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->nickname(), output);
  }

  // int32 State = 5;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SDevFetNickName)
}

::google::protobuf::uint8* SDevFetNickName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SDevFetNickName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string Mac = 2;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDevFetNickName.Mac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mac(), target);
  }

  // int32 FetSort = 3;
  if (this->fetsort() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fetsort(), target);
  }

  // string NickName = 4;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDevFetNickName.NickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->nickname(), target);
  }

  // int32 State = 5;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SDevFetNickName)
  return target;
}

size_t SDevFetNickName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SDevFetNickName)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Mac = 2;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac());
  }

  // string NickName = 4;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 FetSort = 3;
  if (this->fetsort() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fetsort());
  }

  // int32 State = 5;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SDevFetNickName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SDevFetNickName)
  GOOGLE_DCHECK_NE(&from, this);
  const SDevFetNickName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SDevFetNickName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SDevFetNickName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SDevFetNickName)
    MergeFrom(*source);
  }
}

void SDevFetNickName::MergeFrom(const SDevFetNickName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SDevFetNickName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mac().size() > 0) {

    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.fetsort() != 0) {
    set_fetsort(from.fetsort());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SDevFetNickName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SDevFetNickName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SDevFetNickName::CopyFrom(const SDevFetNickName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SDevFetNickName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SDevFetNickName::IsInitialized() const {
  return true;
}

void SDevFetNickName::Swap(SDevFetNickName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SDevFetNickName::InternalSwap(SDevFetNickName* other) {
  using std::swap;
  mac_.Swap(&other->mac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(fetsort_, other->fetsort_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SDevFetNickName::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameDeviceFet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameDeviceFet::kSDeviceFetlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameDeviceFet::SFrameDeviceFet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceFet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameDeviceFet)
}
SFrameDeviceFet::SFrameDeviceFet(const SFrameDeviceFet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sdevicefetlist_(from.sdevicefetlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameDeviceFet)
}

void SFrameDeviceFet::SharedCtor() {
}

SFrameDeviceFet::~SFrameDeviceFet() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameDeviceFet)
  SharedDtor();
}

void SFrameDeviceFet::SharedDtor() {
}

void SFrameDeviceFet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameDeviceFet::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameDeviceFet& SFrameDeviceFet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceFet.base);
  return *internal_default_instance();
}


void SFrameDeviceFet::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameDeviceFet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sdevicefetlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameDeviceFet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameDeviceFet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SDeviceFet SDeviceFetlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sdevicefetlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameDeviceFet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameDeviceFet)
  return false;
#undef DO_
}

void SFrameDeviceFet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameDeviceFet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SDeviceFet SDeviceFetlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sdevicefetlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sdevicefetlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameDeviceFet)
}

::google::protobuf::uint8* SFrameDeviceFet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameDeviceFet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SDeviceFet SDeviceFetlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sdevicefetlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sdevicefetlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameDeviceFet)
  return target;
}

size_t SFrameDeviceFet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameDeviceFet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SDeviceFet SDeviceFetlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sdevicefetlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sdevicefetlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameDeviceFet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameDeviceFet)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameDeviceFet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameDeviceFet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameDeviceFet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameDeviceFet)
    MergeFrom(*source);
  }
}

void SFrameDeviceFet::MergeFrom(const SFrameDeviceFet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameDeviceFet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sdevicefetlist_.MergeFrom(from.sdevicefetlist_);
}

void SFrameDeviceFet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameDeviceFet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameDeviceFet::CopyFrom(const SFrameDeviceFet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameDeviceFet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameDeviceFet::IsInitialized() const {
  return true;
}

void SFrameDeviceFet::Swap(SFrameDeviceFet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameDeviceFet::InternalSwap(SFrameDeviceFet* other) {
  using std::swap;
  CastToBase(&sdevicefetlist_)->InternalSwap(CastToBase(&other->sdevicefetlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameDeviceFet::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SDeviceFet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SDeviceFet::kIdFieldNumber;
const int SDeviceFet::kLevelFieldNumber;
const int SDeviceFet::kFetNumberFieldNumber;
const int SDeviceFet::kRootIdxFieldNumber;
const int SDeviceFet::kDevSortFieldNumber;
const int SDeviceFet::kSortNumberFieldNumber;
const int SDeviceFet::kStateFieldNumber;
const int SDeviceFet::kDivMacFieldNumber;
const int SDeviceFet::kDBStateFieldNumber;
const int SDeviceFet::kCrcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SDeviceFet::SDeviceFet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SDeviceFet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SDeviceFet)
}
SDeviceFet::SDeviceFet(const SDeviceFet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  divmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.divmac().size() > 0) {
    divmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.divmac_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&crc_) -
    reinterpret_cast<char*>(&id_)) + sizeof(crc_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SDeviceFet)
}

void SDeviceFet::SharedCtor() {
  divmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crc_) -
      reinterpret_cast<char*>(&id_)) + sizeof(crc_));
}

SDeviceFet::~SDeviceFet() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SDeviceFet)
  SharedDtor();
}

void SDeviceFet::SharedDtor() {
  divmac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SDeviceFet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SDeviceFet::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SDeviceFet& SDeviceFet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SDeviceFet.base);
  return *internal_default_instance();
}


void SDeviceFet::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SDeviceFet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  divmac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crc_) -
      reinterpret_cast<char*>(&id_)) + sizeof(crc_));
  _internal_metadata_.Clear();
}

bool SDeviceFet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SDeviceFet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 FetNumber = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fetnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 RootIdx = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rootidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 DevSort = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &devsort_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SortNumber = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sortnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DivMac = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_divmac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->divmac().data(), static_cast<int>(this->divmac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SDeviceFet.DivMac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 DBState = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dbstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Crc = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SDeviceFet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SDeviceFet)
  return false;
#undef DO_
}

void SDeviceFet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SDeviceFet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }

  // int32 FetNumber = 3;
  if (this->fetnumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fetnumber(), output);
  }

  // int32 RootIdx = 4;
  if (this->rootidx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->rootidx(), output);
  }

  // int32 DevSort = 5;
  if (this->devsort() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->devsort(), output);
  }

  // int32 SortNumber = 6;
  if (this->sortnumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sortnumber(), output);
  }

  // int32 State = 7;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->state(), output);
  }

  // string DivMac = 8;
  if (this->divmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->divmac().data(), static_cast<int>(this->divmac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDeviceFet.DivMac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->divmac(), output);
  }

  // int32 DBState = 9;
  if (this->dbstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->dbstate(), output);
  }

  // uint32 Crc = 10;
  if (this->crc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->crc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SDeviceFet)
}

::google::protobuf::uint8* SDeviceFet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SDeviceFet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }

  // int32 FetNumber = 3;
  if (this->fetnumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fetnumber(), target);
  }

  // int32 RootIdx = 4;
  if (this->rootidx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->rootidx(), target);
  }

  // int32 DevSort = 5;
  if (this->devsort() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->devsort(), target);
  }

  // int32 SortNumber = 6;
  if (this->sortnumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sortnumber(), target);
  }

  // int32 State = 7;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->state(), target);
  }

  // string DivMac = 8;
  if (this->divmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->divmac().data(), static_cast<int>(this->divmac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDeviceFet.DivMac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->divmac(), target);
  }

  // int32 DBState = 9;
  if (this->dbstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->dbstate(), target);
  }

  // uint32 Crc = 10;
  if (this->crc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->crc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SDeviceFet)
  return target;
}

size_t SDeviceFet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SDeviceFet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string DivMac = 8;
  if (this->divmac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->divmac());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 Level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // int32 FetNumber = 3;
  if (this->fetnumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fetnumber());
  }

  // int32 RootIdx = 4;
  if (this->rootidx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rootidx());
  }

  // int32 DevSort = 5;
  if (this->devsort() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->devsort());
  }

  // int32 SortNumber = 6;
  if (this->sortnumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sortnumber());
  }

  // int32 State = 7;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int32 DBState = 9;
  if (this->dbstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dbstate());
  }

  // uint32 Crc = 10;
  if (this->crc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->crc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SDeviceFet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SDeviceFet)
  GOOGLE_DCHECK_NE(&from, this);
  const SDeviceFet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SDeviceFet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SDeviceFet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SDeviceFet)
    MergeFrom(*source);
  }
}

void SDeviceFet::MergeFrom(const SDeviceFet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SDeviceFet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.divmac().size() > 0) {

    divmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.divmac_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.fetnumber() != 0) {
    set_fetnumber(from.fetnumber());
  }
  if (from.rootidx() != 0) {
    set_rootidx(from.rootidx());
  }
  if (from.devsort() != 0) {
    set_devsort(from.devsort());
  }
  if (from.sortnumber() != 0) {
    set_sortnumber(from.sortnumber());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.dbstate() != 0) {
    set_dbstate(from.dbstate());
  }
  if (from.crc() != 0) {
    set_crc(from.crc());
  }
}

void SDeviceFet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SDeviceFet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SDeviceFet::CopyFrom(const SDeviceFet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SDeviceFet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SDeviceFet::IsInitialized() const {
  return true;
}

void SDeviceFet::Swap(SDeviceFet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SDeviceFet::InternalSwap(SDeviceFet* other) {
  using std::swap;
  divmac_.Swap(&other->divmac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(level_, other->level_);
  swap(fetnumber_, other->fetnumber_);
  swap(rootidx_, other->rootidx_);
  swap(devsort_, other->devsort_);
  swap(sortnumber_, other->sortnumber_);
  swap(state_, other->state_);
  swap(dbstate_, other->dbstate_);
  swap(crc_, other->crc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SDeviceFet::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameDeviceProperty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameDeviceProperty::kSDevicePropertylistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameDeviceProperty::SFrameDeviceProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameDeviceProperty)
}
SFrameDeviceProperty::SFrameDeviceProperty(const SFrameDeviceProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sdevicepropertylist_(from.sdevicepropertylist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameDeviceProperty)
}

void SFrameDeviceProperty::SharedCtor() {
}

SFrameDeviceProperty::~SFrameDeviceProperty() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameDeviceProperty)
  SharedDtor();
}

void SFrameDeviceProperty::SharedDtor() {
}

void SFrameDeviceProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameDeviceProperty::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameDeviceProperty& SFrameDeviceProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceProperty.base);
  return *internal_default_instance();
}


void SFrameDeviceProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameDeviceProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sdevicepropertylist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameDeviceProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameDeviceProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SDeviceProperty SDevicePropertylist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sdevicepropertylist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameDeviceProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameDeviceProperty)
  return false;
#undef DO_
}

void SFrameDeviceProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameDeviceProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SDeviceProperty SDevicePropertylist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sdevicepropertylist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sdevicepropertylist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameDeviceProperty)
}

::google::protobuf::uint8* SFrameDeviceProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameDeviceProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SDeviceProperty SDevicePropertylist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sdevicepropertylist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sdevicepropertylist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameDeviceProperty)
  return target;
}

size_t SFrameDeviceProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameDeviceProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SDeviceProperty SDevicePropertylist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sdevicepropertylist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sdevicepropertylist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameDeviceProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameDeviceProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameDeviceProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameDeviceProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameDeviceProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameDeviceProperty)
    MergeFrom(*source);
  }
}

void SFrameDeviceProperty::MergeFrom(const SFrameDeviceProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameDeviceProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sdevicepropertylist_.MergeFrom(from.sdevicepropertylist_);
}

void SFrameDeviceProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameDeviceProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameDeviceProperty::CopyFrom(const SFrameDeviceProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameDeviceProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameDeviceProperty::IsInitialized() const {
  return true;
}

void SFrameDeviceProperty::Swap(SFrameDeviceProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameDeviceProperty::InternalSwap(SFrameDeviceProperty* other) {
  using std::swap;
  CastToBase(&sdevicepropertylist_)->InternalSwap(CastToBase(&other->sdevicepropertylist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameDeviceProperty::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SDeviceProperty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SDeviceProperty::kIdFieldNumber;
const int SDeviceProperty::kDeviceIDFieldNumber;
const int SDeviceProperty::kRootFetIdxFieldNumber;
const int SDeviceProperty::kDevIDFieldNumber;
const int SDeviceProperty::kDrvIdxFieldNumber;
const int SDeviceProperty::kPowerLevelFieldNumber;
const int SDeviceProperty::kOnlineFieldNumber;
const int SDeviceProperty::kFetCRCFieldNumber;
const int SDeviceProperty::kGrpFetFieldNumber;
const int SDeviceProperty::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SDeviceProperty::SDeviceProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SDeviceProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SDeviceProperty)
}
SDeviceProperty::SDeviceProperty(const SDeviceProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SDeviceProperty)
}

void SDeviceProperty::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

SDeviceProperty::~SDeviceProperty() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SDeviceProperty)
  SharedDtor();
}

void SDeviceProperty::SharedDtor() {
}

void SDeviceProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SDeviceProperty::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SDeviceProperty& SDeviceProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SDeviceProperty.base);
  return *internal_default_instance();
}


void SDeviceProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SDeviceProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool SDeviceProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SDeviceProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 DeviceID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &deviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 RootFetIdx = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rootfetidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 DevID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &devid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 DrvIdx = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &drvidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PowerLevel = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &powerlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Online = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 FetCRC = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fetcrc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 GrpFet = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grpfet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SDeviceProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SDeviceProperty)
  return false;
#undef DO_
}

void SDeviceProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SDeviceProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 DeviceID = 2;
  if (this->deviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->deviceid(), output);
  }

  // int32 RootFetIdx = 3;
  if (this->rootfetidx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rootfetidx(), output);
  }

  // int32 DevID = 4;
  if (this->devid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->devid(), output);
  }

  // int32 DrvIdx = 5;
  if (this->drvidx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->drvidx(), output);
  }

  // int32 PowerLevel = 6;
  if (this->powerlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->powerlevel(), output);
  }

  // int32 Online = 7;
  if (this->online() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->online(), output);
  }

  // int32 FetCRC = 8;
  if (this->fetcrc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->fetcrc(), output);
  }

  // int32 GrpFet = 9;
  if (this->grpfet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->grpfet(), output);
  }

  // int32 State = 10;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SDeviceProperty)
}

::google::protobuf::uint8* SDeviceProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SDeviceProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 DeviceID = 2;
  if (this->deviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->deviceid(), target);
  }

  // int32 RootFetIdx = 3;
  if (this->rootfetidx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rootfetidx(), target);
  }

  // int32 DevID = 4;
  if (this->devid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->devid(), target);
  }

  // int32 DrvIdx = 5;
  if (this->drvidx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->drvidx(), target);
  }

  // int32 PowerLevel = 6;
  if (this->powerlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->powerlevel(), target);
  }

  // int32 Online = 7;
  if (this->online() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->online(), target);
  }

  // int32 FetCRC = 8;
  if (this->fetcrc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->fetcrc(), target);
  }

  // int32 GrpFet = 9;
  if (this->grpfet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->grpfet(), target);
  }

  // int32 State = 10;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SDeviceProperty)
  return target;
}

size_t SDeviceProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SDeviceProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 DeviceID = 2;
  if (this->deviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->deviceid());
  }

  // int32 RootFetIdx = 3;
  if (this->rootfetidx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rootfetidx());
  }

  // int32 DevID = 4;
  if (this->devid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->devid());
  }

  // int32 DrvIdx = 5;
  if (this->drvidx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->drvidx());
  }

  // int32 PowerLevel = 6;
  if (this->powerlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->powerlevel());
  }

  // int32 Online = 7;
  if (this->online() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->online());
  }

  // int32 FetCRC = 8;
  if (this->fetcrc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fetcrc());
  }

  // int32 GrpFet = 9;
  if (this->grpfet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->grpfet());
  }

  // int32 State = 10;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SDeviceProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SDeviceProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const SDeviceProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SDeviceProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SDeviceProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SDeviceProperty)
    MergeFrom(*source);
  }
}

void SDeviceProperty::MergeFrom(const SDeviceProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SDeviceProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.deviceid() != 0) {
    set_deviceid(from.deviceid());
  }
  if (from.rootfetidx() != 0) {
    set_rootfetidx(from.rootfetidx());
  }
  if (from.devid() != 0) {
    set_devid(from.devid());
  }
  if (from.drvidx() != 0) {
    set_drvidx(from.drvidx());
  }
  if (from.powerlevel() != 0) {
    set_powerlevel(from.powerlevel());
  }
  if (from.online() != 0) {
    set_online(from.online());
  }
  if (from.fetcrc() != 0) {
    set_fetcrc(from.fetcrc());
  }
  if (from.grpfet() != 0) {
    set_grpfet(from.grpfet());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SDeviceProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SDeviceProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SDeviceProperty::CopyFrom(const SDeviceProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SDeviceProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SDeviceProperty::IsInitialized() const {
  return true;
}

void SDeviceProperty::Swap(SDeviceProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SDeviceProperty::InternalSwap(SDeviceProperty* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(deviceid_, other->deviceid_);
  swap(rootfetidx_, other->rootfetidx_);
  swap(devid_, other->devid_);
  swap(drvidx_, other->drvidx_);
  swap(powerlevel_, other->powerlevel_);
  swap(online_, other->online_);
  swap(fetcrc_, other->fetcrc_);
  swap(grpfet_, other->grpfet_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SDeviceProperty::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameAppRoleContrastInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameAppRoleContrastInfo::kSAppRoleContrastInfolistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameAppRoleContrastInfo::SFrameAppRoleContrastInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameAppRoleContrastInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameAppRoleContrastInfo)
}
SFrameAppRoleContrastInfo::SFrameAppRoleContrastInfo(const SFrameAppRoleContrastInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sapprolecontrastinfolist_(from.sapprolecontrastinfolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameAppRoleContrastInfo)
}

void SFrameAppRoleContrastInfo::SharedCtor() {
}

SFrameAppRoleContrastInfo::~SFrameAppRoleContrastInfo() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameAppRoleContrastInfo)
  SharedDtor();
}

void SFrameAppRoleContrastInfo::SharedDtor() {
}

void SFrameAppRoleContrastInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameAppRoleContrastInfo::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameAppRoleContrastInfo& SFrameAppRoleContrastInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameAppRoleContrastInfo.base);
  return *internal_default_instance();
}


void SFrameAppRoleContrastInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameAppRoleContrastInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sapprolecontrastinfolist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameAppRoleContrastInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameAppRoleContrastInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SAppRoleContrastInfo SAppRoleContrastInfolist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sapprolecontrastinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameAppRoleContrastInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameAppRoleContrastInfo)
  return false;
#undef DO_
}

void SFrameAppRoleContrastInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameAppRoleContrastInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SAppRoleContrastInfo SAppRoleContrastInfolist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sapprolecontrastinfolist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sapprolecontrastinfolist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameAppRoleContrastInfo)
}

::google::protobuf::uint8* SFrameAppRoleContrastInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameAppRoleContrastInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SAppRoleContrastInfo SAppRoleContrastInfolist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sapprolecontrastinfolist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sapprolecontrastinfolist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameAppRoleContrastInfo)
  return target;
}

size_t SFrameAppRoleContrastInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameAppRoleContrastInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SAppRoleContrastInfo SAppRoleContrastInfolist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sapprolecontrastinfolist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sapprolecontrastinfolist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameAppRoleContrastInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameAppRoleContrastInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameAppRoleContrastInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameAppRoleContrastInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameAppRoleContrastInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameAppRoleContrastInfo)
    MergeFrom(*source);
  }
}

void SFrameAppRoleContrastInfo::MergeFrom(const SFrameAppRoleContrastInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameAppRoleContrastInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sapprolecontrastinfolist_.MergeFrom(from.sapprolecontrastinfolist_);
}

void SFrameAppRoleContrastInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameAppRoleContrastInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameAppRoleContrastInfo::CopyFrom(const SFrameAppRoleContrastInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameAppRoleContrastInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameAppRoleContrastInfo::IsInitialized() const {
  return true;
}

void SFrameAppRoleContrastInfo::Swap(SFrameAppRoleContrastInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameAppRoleContrastInfo::InternalSwap(SFrameAppRoleContrastInfo* other) {
  using std::swap;
  CastToBase(&sapprolecontrastinfolist_)->InternalSwap(CastToBase(&other->sapprolecontrastinfolist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameAppRoleContrastInfo::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SAppRoleContrastInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SAppRoleContrastInfo::kIdFieldNumber;
const int SAppRoleContrastInfo::kRoleTypeIDFieldNumber;
const int SAppRoleContrastInfo::kRoleIDFieldNumber;
const int SAppRoleContrastInfo::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SAppRoleContrastInfo::SAppRoleContrastInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SAppRoleContrastInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SAppRoleContrastInfo)
}
SAppRoleContrastInfo::SAppRoleContrastInfo(const SAppRoleContrastInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SAppRoleContrastInfo)
}

void SAppRoleContrastInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

SAppRoleContrastInfo::~SAppRoleContrastInfo() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SAppRoleContrastInfo)
  SharedDtor();
}

void SAppRoleContrastInfo::SharedDtor() {
}

void SAppRoleContrastInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SAppRoleContrastInfo::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SAppRoleContrastInfo& SAppRoleContrastInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SAppRoleContrastInfo.base);
  return *internal_default_instance();
}


void SAppRoleContrastInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SAppRoleContrastInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool SAppRoleContrastInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SAppRoleContrastInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleTypeID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roletypeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SAppRoleContrastInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SAppRoleContrastInfo)
  return false;
#undef DO_
}

void SAppRoleContrastInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SAppRoleContrastInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 RoleTypeID = 2;
  if (this->roletypeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roletypeid(), output);
  }

  // uint64 RoleID = 3;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->roleid(), output);
  }

  // int32 state = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SAppRoleContrastInfo)
}

::google::protobuf::uint8* SAppRoleContrastInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SAppRoleContrastInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 RoleTypeID = 2;
  if (this->roletypeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roletypeid(), target);
  }

  // uint64 RoleID = 3;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->roleid(), target);
  }

  // int32 state = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SAppRoleContrastInfo)
  return target;
}

size_t SAppRoleContrastInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SAppRoleContrastInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 RoleTypeID = 2;
  if (this->roletypeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roletypeid());
  }

  // uint64 RoleID = 3;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int32 state = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SAppRoleContrastInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SAppRoleContrastInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SAppRoleContrastInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SAppRoleContrastInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SAppRoleContrastInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SAppRoleContrastInfo)
    MergeFrom(*source);
  }
}

void SAppRoleContrastInfo::MergeFrom(const SAppRoleContrastInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SAppRoleContrastInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.roletypeid() != 0) {
    set_roletypeid(from.roletypeid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SAppRoleContrastInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SAppRoleContrastInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SAppRoleContrastInfo::CopyFrom(const SAppRoleContrastInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SAppRoleContrastInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SAppRoleContrastInfo::IsInitialized() const {
  return true;
}

void SAppRoleContrastInfo::Swap(SAppRoleContrastInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SAppRoleContrastInfo::InternalSwap(SAppRoleContrastInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(roletypeid_, other->roletypeid_);
  swap(roleid_, other->roleid_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SAppRoleContrastInfo::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameAppRoleFunBaseInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameAppRoleFunBaseInfo::kSAppRoleFunBaseInfolistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameAppRoleFunBaseInfo::SFrameAppRoleFunBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameAppRoleFunBaseInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameAppRoleFunBaseInfo)
}
SFrameAppRoleFunBaseInfo::SFrameAppRoleFunBaseInfo(const SFrameAppRoleFunBaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sapprolefunbaseinfolist_(from.sapprolefunbaseinfolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameAppRoleFunBaseInfo)
}

void SFrameAppRoleFunBaseInfo::SharedCtor() {
}

SFrameAppRoleFunBaseInfo::~SFrameAppRoleFunBaseInfo() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameAppRoleFunBaseInfo)
  SharedDtor();
}

void SFrameAppRoleFunBaseInfo::SharedDtor() {
}

void SFrameAppRoleFunBaseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameAppRoleFunBaseInfo::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameAppRoleFunBaseInfo& SFrameAppRoleFunBaseInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameAppRoleFunBaseInfo.base);
  return *internal_default_instance();
}


void SFrameAppRoleFunBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameAppRoleFunBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sapprolefunbaseinfolist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameAppRoleFunBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameAppRoleFunBaseInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SAppRoleFunBaseInfo SAppRoleFunBaseInfolist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sapprolefunbaseinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameAppRoleFunBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameAppRoleFunBaseInfo)
  return false;
#undef DO_
}

void SFrameAppRoleFunBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameAppRoleFunBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SAppRoleFunBaseInfo SAppRoleFunBaseInfolist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sapprolefunbaseinfolist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sapprolefunbaseinfolist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameAppRoleFunBaseInfo)
}

::google::protobuf::uint8* SFrameAppRoleFunBaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameAppRoleFunBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SAppRoleFunBaseInfo SAppRoleFunBaseInfolist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sapprolefunbaseinfolist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sapprolefunbaseinfolist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameAppRoleFunBaseInfo)
  return target;
}

size_t SFrameAppRoleFunBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameAppRoleFunBaseInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SAppRoleFunBaseInfo SAppRoleFunBaseInfolist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sapprolefunbaseinfolist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sapprolefunbaseinfolist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameAppRoleFunBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameAppRoleFunBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameAppRoleFunBaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameAppRoleFunBaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameAppRoleFunBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameAppRoleFunBaseInfo)
    MergeFrom(*source);
  }
}

void SFrameAppRoleFunBaseInfo::MergeFrom(const SFrameAppRoleFunBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameAppRoleFunBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sapprolefunbaseinfolist_.MergeFrom(from.sapprolefunbaseinfolist_);
}

void SFrameAppRoleFunBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameAppRoleFunBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameAppRoleFunBaseInfo::CopyFrom(const SFrameAppRoleFunBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameAppRoleFunBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameAppRoleFunBaseInfo::IsInitialized() const {
  return true;
}

void SFrameAppRoleFunBaseInfo::Swap(SFrameAppRoleFunBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameAppRoleFunBaseInfo::InternalSwap(SFrameAppRoleFunBaseInfo* other) {
  using std::swap;
  CastToBase(&sapprolefunbaseinfolist_)->InternalSwap(CastToBase(&other->sapprolefunbaseinfolist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameAppRoleFunBaseInfo::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SAppRoleFunBaseInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SAppRoleFunBaseInfo::kIdFieldNumber;
const int SAppRoleFunBaseInfo::kNameFieldNumber;
const int SAppRoleFunBaseInfo::kNumberFieldNumber;
const int SAppRoleFunBaseInfo::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SAppRoleFunBaseInfo::SAppRoleFunBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SAppRoleFunBaseInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SAppRoleFunBaseInfo)
}
SAppRoleFunBaseInfo::SAppRoleFunBaseInfo(const SAppRoleFunBaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SAppRoleFunBaseInfo)
}

void SAppRoleFunBaseInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

SAppRoleFunBaseInfo::~SAppRoleFunBaseInfo() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SAppRoleFunBaseInfo)
  SharedDtor();
}

void SAppRoleFunBaseInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SAppRoleFunBaseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SAppRoleFunBaseInfo::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SAppRoleFunBaseInfo& SAppRoleFunBaseInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SAppRoleFunBaseInfo.base);
  return *internal_default_instance();
}


void SAppRoleFunBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SAppRoleFunBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool SAppRoleFunBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SAppRoleFunBaseInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SAppRoleFunBaseInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 number = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SAppRoleFunBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SAppRoleFunBaseInfo)
  return false;
#undef DO_
}

void SAppRoleFunBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SAppRoleFunBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SAppRoleFunBaseInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 number = 3;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->number(), output);
  }

  // int32 state = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SAppRoleFunBaseInfo)
}

::google::protobuf::uint8* SAppRoleFunBaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SAppRoleFunBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SAppRoleFunBaseInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 number = 3;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->number(), target);
  }

  // int32 state = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SAppRoleFunBaseInfo)
  return target;
}

size_t SAppRoleFunBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SAppRoleFunBaseInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 number = 3;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());
  }

  // int32 state = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SAppRoleFunBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SAppRoleFunBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SAppRoleFunBaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SAppRoleFunBaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SAppRoleFunBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SAppRoleFunBaseInfo)
    MergeFrom(*source);
  }
}

void SAppRoleFunBaseInfo::MergeFrom(const SAppRoleFunBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SAppRoleFunBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SAppRoleFunBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SAppRoleFunBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SAppRoleFunBaseInfo::CopyFrom(const SAppRoleFunBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SAppRoleFunBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SAppRoleFunBaseInfo::IsInitialized() const {
  return true;
}

void SAppRoleFunBaseInfo::Swap(SAppRoleFunBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SAppRoleFunBaseInfo::InternalSwap(SAppRoleFunBaseInfo* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(number_, other->number_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SAppRoleFunBaseInfo::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameRoleDeviceRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameRoleDeviceRecord::kSRoleDeviceRecordlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameRoleDeviceRecord::SFrameRoleDeviceRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameRoleDeviceRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameRoleDeviceRecord)
}
SFrameRoleDeviceRecord::SFrameRoleDeviceRecord(const SFrameRoleDeviceRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sroledevicerecordlist_(from.sroledevicerecordlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameRoleDeviceRecord)
}

void SFrameRoleDeviceRecord::SharedCtor() {
}

SFrameRoleDeviceRecord::~SFrameRoleDeviceRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameRoleDeviceRecord)
  SharedDtor();
}

void SFrameRoleDeviceRecord::SharedDtor() {
}

void SFrameRoleDeviceRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameRoleDeviceRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameRoleDeviceRecord& SFrameRoleDeviceRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameRoleDeviceRecord.base);
  return *internal_default_instance();
}


void SFrameRoleDeviceRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameRoleDeviceRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sroledevicerecordlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameRoleDeviceRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameRoleDeviceRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SRoleDeviceRecord SRoleDeviceRecordlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sroledevicerecordlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameRoleDeviceRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameRoleDeviceRecord)
  return false;
#undef DO_
}

void SFrameRoleDeviceRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameRoleDeviceRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SRoleDeviceRecord SRoleDeviceRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sroledevicerecordlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sroledevicerecordlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameRoleDeviceRecord)
}

::google::protobuf::uint8* SFrameRoleDeviceRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameRoleDeviceRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SRoleDeviceRecord SRoleDeviceRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sroledevicerecordlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sroledevicerecordlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameRoleDeviceRecord)
  return target;
}

size_t SFrameRoleDeviceRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameRoleDeviceRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SRoleDeviceRecord SRoleDeviceRecordlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sroledevicerecordlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sroledevicerecordlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameRoleDeviceRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameRoleDeviceRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameRoleDeviceRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameRoleDeviceRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameRoleDeviceRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameRoleDeviceRecord)
    MergeFrom(*source);
  }
}

void SFrameRoleDeviceRecord::MergeFrom(const SFrameRoleDeviceRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameRoleDeviceRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sroledevicerecordlist_.MergeFrom(from.sroledevicerecordlist_);
}

void SFrameRoleDeviceRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameRoleDeviceRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameRoleDeviceRecord::CopyFrom(const SFrameRoleDeviceRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameRoleDeviceRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameRoleDeviceRecord::IsInitialized() const {
  return true;
}

void SFrameRoleDeviceRecord::Swap(SFrameRoleDeviceRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameRoleDeviceRecord::InternalSwap(SFrameRoleDeviceRecord* other) {
  using std::swap;
  CastToBase(&sroledevicerecordlist_)->InternalSwap(CastToBase(&other->sroledevicerecordlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameRoleDeviceRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SRoleDeviceRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SRoleDeviceRecord::kIdFieldNumber;
const int SRoleDeviceRecord::kRoleTypeIdFieldNumber;
const int SRoleDeviceRecord::kDeviceIdFieldNumber;
const int SRoleDeviceRecord::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SRoleDeviceRecord::SRoleDeviceRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SRoleDeviceRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SRoleDeviceRecord)
}
SRoleDeviceRecord::SRoleDeviceRecord(const SRoleDeviceRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SRoleDeviceRecord)
}

void SRoleDeviceRecord::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

SRoleDeviceRecord::~SRoleDeviceRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SRoleDeviceRecord)
  SharedDtor();
}

void SRoleDeviceRecord::SharedDtor() {
}

void SRoleDeviceRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SRoleDeviceRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SRoleDeviceRecord& SRoleDeviceRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SRoleDeviceRecord.base);
  return *internal_default_instance();
}


void SRoleDeviceRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SRoleDeviceRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool SRoleDeviceRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SRoleDeviceRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleTypeId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roletypeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 DeviceId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &deviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SRoleDeviceRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SRoleDeviceRecord)
  return false;
#undef DO_
}

void SRoleDeviceRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SRoleDeviceRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 RoleTypeId = 2;
  if (this->roletypeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roletypeid(), output);
  }

  // uint64 DeviceId = 3;
  if (this->deviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->deviceid(), output);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SRoleDeviceRecord)
}

::google::protobuf::uint8* SRoleDeviceRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SRoleDeviceRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 RoleTypeId = 2;
  if (this->roletypeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roletypeid(), target);
  }

  // uint64 DeviceId = 3;
  if (this->deviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->deviceid(), target);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SRoleDeviceRecord)
  return target;
}

size_t SRoleDeviceRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SRoleDeviceRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 RoleTypeId = 2;
  if (this->roletypeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roletypeid());
  }

  // uint64 DeviceId = 3;
  if (this->deviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->deviceid());
  }

  // int32 State = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SRoleDeviceRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SRoleDeviceRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SRoleDeviceRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SRoleDeviceRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SRoleDeviceRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SRoleDeviceRecord)
    MergeFrom(*source);
  }
}

void SRoleDeviceRecord::MergeFrom(const SRoleDeviceRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SRoleDeviceRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.roletypeid() != 0) {
    set_roletypeid(from.roletypeid());
  }
  if (from.deviceid() != 0) {
    set_deviceid(from.deviceid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SRoleDeviceRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SRoleDeviceRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SRoleDeviceRecord::CopyFrom(const SRoleDeviceRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SRoleDeviceRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SRoleDeviceRecord::IsInitialized() const {
  return true;
}

void SRoleDeviceRecord::Swap(SRoleDeviceRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SRoleDeviceRecord::InternalSwap(SRoleDeviceRecord* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(roletypeid_, other->roletypeid_);
  swap(deviceid_, other->deviceid_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SRoleDeviceRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameItem::kSItemInfolistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameItem::SFrameItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameItem)
}
SFrameItem::SFrameItem(const SFrameItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      siteminfolist_(from.siteminfolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameItem)
}

void SFrameItem::SharedCtor() {
}

SFrameItem::~SFrameItem() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameItem)
  SharedDtor();
}

void SFrameItem::SharedDtor() {
}

void SFrameItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameItem::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameItem& SFrameItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameItem.base);
  return *internal_default_instance();
}


void SFrameItem::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  siteminfolist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SItemInfo SItemInfolist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_siteminfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameItem)
  return false;
#undef DO_
}

void SFrameItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SItemInfo SItemInfolist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->siteminfolist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->siteminfolist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameItem)
}

::google::protobuf::uint8* SFrameItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SItemInfo SItemInfolist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->siteminfolist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->siteminfolist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameItem)
  return target;
}

size_t SFrameItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SItemInfo SItemInfolist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->siteminfolist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->siteminfolist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameItem)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameItem)
    MergeFrom(*source);
  }
}

void SFrameItem::MergeFrom(const SFrameItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  siteminfolist_.MergeFrom(from.siteminfolist_);
}

void SFrameItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameItem::CopyFrom(const SFrameItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameItem::IsInitialized() const {
  return true;
}

void SFrameItem::Swap(SFrameItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameItem::InternalSwap(SFrameItem* other) {
  using std::swap;
  CastToBase(&siteminfolist_)->InternalSwap(CastToBase(&other->siteminfolist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameItem::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SItemInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SItemInfo::kIdFieldNumber;
const int SItemInfo::kNameFieldNumber;
const int SItemInfo::kMechIdFieldNumber;
const int SItemInfo::kMechNameFieldNumber;
const int SItemInfo::kAddressFieldNumber;
const int SItemInfo::kStateFieldNumber;
const int SItemInfo::kPhoneFieldNumber;
const int SItemInfo::kRoomCountFieldNumber;
const int SItemInfo::kFloorCountFieldNumber;
const int SItemInfo::kProvincialFieldNumber;
const int SItemInfo::kUrbanFieldNumber;
const int SItemInfo::kAreaFieldNumber;
const int SItemInfo::kItemTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SItemInfo::SItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SItemInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SItemInfo)
}
SItemInfo::SItemInfo(const SItemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  mechname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mechname().size() > 0) {
    mechname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mechname_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  provincial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.provincial().size() > 0) {
    provincial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.provincial_);
  }
  urban_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.urban().size() > 0) {
    urban_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urban_);
  }
  area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.area().size() > 0) {
    area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&itemtype_) -
    reinterpret_cast<char*>(&id_)) + sizeof(itemtype_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SItemInfo)
}

void SItemInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mechname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  provincial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  urban_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&itemtype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(itemtype_));
}

SItemInfo::~SItemInfo() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SItemInfo)
  SharedDtor();
}

void SItemInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mechname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  provincial_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  urban_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SItemInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SItemInfo::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SItemInfo& SItemInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SItemInfo.base);
  return *internal_default_instance();
}


void SItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mechname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  provincial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  urban_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&itemtype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(itemtype_));
  _internal_metadata_.Clear();
}

bool SItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SItemInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SItemInfo.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 MechId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mechid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MechName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mechname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mechname().data(), static_cast<int>(this->mechname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SItemInfo.MechName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Address = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SItemInfo.Address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SItemInfo.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 RoomCount = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 FloorCount = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &floorcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Provincial = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_provincial()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->provincial().data(), static_cast<int>(this->provincial().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SItemInfo.Provincial"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Urban = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_urban()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->urban().data(), static_cast<int>(this->urban().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SItemInfo.Urban"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Area = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_area()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->area().data(), static_cast<int>(this->area().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SItemInfo.Area"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ItemType = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SItemInfo)
  return false;
#undef DO_
}

void SItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SItemInfo.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // uint64 MechId = 3;
  if (this->mechid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->mechid(), output);
  }

  // string MechName = 4;
  if (this->mechname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mechname().data(), static_cast<int>(this->mechname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SItemInfo.MechName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mechname(), output);
  }

  // string Address = 5;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SItemInfo.Address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->address(), output);
  }

  // int32 State = 6;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->state(), output);
  }

  // string phone = 7;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SItemInfo.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->phone(), output);
  }

  // int32 RoomCount = 8;
  if (this->roomcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->roomcount(), output);
  }

  // int32 FloorCount = 9;
  if (this->floorcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->floorcount(), output);
  }

  // string Provincial = 10;
  if (this->provincial().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->provincial().data(), static_cast<int>(this->provincial().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SItemInfo.Provincial");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->provincial(), output);
  }

  // string Urban = 11;
  if (this->urban().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->urban().data(), static_cast<int>(this->urban().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SItemInfo.Urban");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->urban(), output);
  }

  // string Area = 12;
  if (this->area().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->area().data(), static_cast<int>(this->area().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SItemInfo.Area");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->area(), output);
  }

  // int32 ItemType = 13;
  if (this->itemtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->itemtype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SItemInfo)
}

::google::protobuf::uint8* SItemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SItemInfo.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // uint64 MechId = 3;
  if (this->mechid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->mechid(), target);
  }

  // string MechName = 4;
  if (this->mechname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mechname().data(), static_cast<int>(this->mechname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SItemInfo.MechName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mechname(), target);
  }

  // string Address = 5;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SItemInfo.Address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->address(), target);
  }

  // int32 State = 6;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->state(), target);
  }

  // string phone = 7;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SItemInfo.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->phone(), target);
  }

  // int32 RoomCount = 8;
  if (this->roomcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->roomcount(), target);
  }

  // int32 FloorCount = 9;
  if (this->floorcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->floorcount(), target);
  }

  // string Provincial = 10;
  if (this->provincial().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->provincial().data(), static_cast<int>(this->provincial().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SItemInfo.Provincial");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->provincial(), target);
  }

  // string Urban = 11;
  if (this->urban().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->urban().data(), static_cast<int>(this->urban().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SItemInfo.Urban");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->urban(), target);
  }

  // string Area = 12;
  if (this->area().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->area().data(), static_cast<int>(this->area().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SItemInfo.Area");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->area(), target);
  }

  // int32 ItemType = 13;
  if (this->itemtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->itemtype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SItemInfo)
  return target;
}

size_t SItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SItemInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string MechName = 4;
  if (this->mechname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mechname());
  }

  // string Address = 5;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string phone = 7;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // string Provincial = 10;
  if (this->provincial().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->provincial());
  }

  // string Urban = 11;
  if (this->urban().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->urban());
  }

  // string Area = 12;
  if (this->area().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->area());
  }

  // uint64 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 MechId = 3;
  if (this->mechid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mechid());
  }

  // int32 State = 6;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int32 RoomCount = 8;
  if (this->roomcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomcount());
  }

  // int32 FloorCount = 9;
  if (this->floorcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->floorcount());
  }

  // int32 ItemType = 13;
  if (this->itemtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->itemtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SItemInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SItemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SItemInfo)
    MergeFrom(*source);
  }
}

void SItemInfo::MergeFrom(const SItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.mechname().size() > 0) {

    mechname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mechname_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.provincial().size() > 0) {

    provincial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.provincial_);
  }
  if (from.urban().size() > 0) {

    urban_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urban_);
  }
  if (from.area().size() > 0) {

    area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.mechid() != 0) {
    set_mechid(from.mechid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.roomcount() != 0) {
    set_roomcount(from.roomcount());
  }
  if (from.floorcount() != 0) {
    set_floorcount(from.floorcount());
  }
  if (from.itemtype() != 0) {
    set_itemtype(from.itemtype());
  }
}

void SItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SItemInfo::CopyFrom(const SItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SItemInfo::IsInitialized() const {
  return true;
}

void SItemInfo::Swap(SItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SItemInfo::InternalSwap(SItemInfo* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mechname_.Swap(&other->mechname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phone_.Swap(&other->phone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  provincial_.Swap(&other->provincial_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  urban_.Swap(&other->urban_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  area_.Swap(&other->area_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(mechid_, other->mechid_);
  swap(state_, other->state_);
  swap(roomcount_, other->roomcount_);
  swap(floorcount_, other->floorcount_);
  swap(itemtype_, other->itemtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SItemInfo::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameAppRoleType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameAppRoleType::kAppRoleTypelistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameAppRoleType::SFrameAppRoleType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameAppRoleType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameAppRoleType)
}
SFrameAppRoleType::SFrameAppRoleType(const SFrameAppRoleType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      approletypelist_(from.approletypelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameAppRoleType)
}

void SFrameAppRoleType::SharedCtor() {
}

SFrameAppRoleType::~SFrameAppRoleType() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameAppRoleType)
  SharedDtor();
}

void SFrameAppRoleType::SharedDtor() {
}

void SFrameAppRoleType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameAppRoleType::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameAppRoleType& SFrameAppRoleType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameAppRoleType.base);
  return *internal_default_instance();
}


void SFrameAppRoleType::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameAppRoleType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  approletypelist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameAppRoleType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameAppRoleType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SAppRoleType AppRoleTypelist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_approletypelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameAppRoleType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameAppRoleType)
  return false;
#undef DO_
}

void SFrameAppRoleType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameAppRoleType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SAppRoleType AppRoleTypelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->approletypelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->approletypelist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameAppRoleType)
}

::google::protobuf::uint8* SFrameAppRoleType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameAppRoleType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SAppRoleType AppRoleTypelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->approletypelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->approletypelist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameAppRoleType)
  return target;
}

size_t SFrameAppRoleType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameAppRoleType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SAppRoleType AppRoleTypelist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->approletypelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->approletypelist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameAppRoleType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameAppRoleType)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameAppRoleType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameAppRoleType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameAppRoleType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameAppRoleType)
    MergeFrom(*source);
  }
}

void SFrameAppRoleType::MergeFrom(const SFrameAppRoleType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameAppRoleType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  approletypelist_.MergeFrom(from.approletypelist_);
}

void SFrameAppRoleType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameAppRoleType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameAppRoleType::CopyFrom(const SFrameAppRoleType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameAppRoleType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameAppRoleType::IsInitialized() const {
  return true;
}

void SFrameAppRoleType::Swap(SFrameAppRoleType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameAppRoleType::InternalSwap(SFrameAppRoleType* other) {
  using std::swap;
  CastToBase(&approletypelist_)->InternalSwap(CastToBase(&other->approletypelist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameAppRoleType::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SAppRoleType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SAppRoleType::kIdFieldNumber;
const int SAppRoleType::kNameFieldNumber;
const int SAppRoleType::kMechIdFieldNumber;
const int SAppRoleType::kTypeFieldNumber;
const int SAppRoleType::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SAppRoleType::SAppRoleType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SAppRoleType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SAppRoleType)
}
SAppRoleType::SAppRoleType(const SAppRoleType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SAppRoleType)
}

void SAppRoleType::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

SAppRoleType::~SAppRoleType() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SAppRoleType)
  SharedDtor();
}

void SAppRoleType::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SAppRoleType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SAppRoleType::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SAppRoleType& SAppRoleType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SAppRoleType.base);
  return *internal_default_instance();
}


void SAppRoleType::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SAppRoleType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool SAppRoleType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SAppRoleType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SAppRoleType.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 MechId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mechid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SAppRoleType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SAppRoleType)
  return false;
#undef DO_
}

void SAppRoleType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SAppRoleType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SAppRoleType.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // uint64 MechId = 3;
  if (this->mechid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->mechid(), output);
  }

  // int32 Type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  // int32 State = 5;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SAppRoleType)
}

::google::protobuf::uint8* SAppRoleType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SAppRoleType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SAppRoleType.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // uint64 MechId = 3;
  if (this->mechid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->mechid(), target);
  }

  // int32 Type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  // int32 State = 5;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SAppRoleType)
  return target;
}

size_t SAppRoleType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SAppRoleType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 MechId = 3;
  if (this->mechid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mechid());
  }

  // int32 Type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 State = 5;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SAppRoleType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SAppRoleType)
  GOOGLE_DCHECK_NE(&from, this);
  const SAppRoleType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SAppRoleType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SAppRoleType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SAppRoleType)
    MergeFrom(*source);
  }
}

void SAppRoleType::MergeFrom(const SAppRoleType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SAppRoleType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.mechid() != 0) {
    set_mechid(from.mechid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SAppRoleType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SAppRoleType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SAppRoleType::CopyFrom(const SAppRoleType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SAppRoleType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SAppRoleType::IsInitialized() const {
  return true;
}

void SAppRoleType::Swap(SAppRoleType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SAppRoleType::InternalSwap(SAppRoleType* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(mechid_, other->mechid_);
  swap(type_, other->type_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SAppRoleType::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameAppRoleFun::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameAppRoleFun::kAppRoleFunlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameAppRoleFun::SFrameAppRoleFun()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameAppRoleFun.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameAppRoleFun)
}
SFrameAppRoleFun::SFrameAppRoleFun(const SFrameAppRoleFun& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      approlefunlist_(from.approlefunlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameAppRoleFun)
}

void SFrameAppRoleFun::SharedCtor() {
}

SFrameAppRoleFun::~SFrameAppRoleFun() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameAppRoleFun)
  SharedDtor();
}

void SFrameAppRoleFun::SharedDtor() {
}

void SFrameAppRoleFun::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameAppRoleFun::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameAppRoleFun& SFrameAppRoleFun::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameAppRoleFun.base);
  return *internal_default_instance();
}


void SFrameAppRoleFun::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameAppRoleFun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  approlefunlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameAppRoleFun::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameAppRoleFun)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SAppRoleFun AppRoleFunlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_approlefunlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameAppRoleFun)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameAppRoleFun)
  return false;
#undef DO_
}

void SFrameAppRoleFun::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameAppRoleFun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SAppRoleFun AppRoleFunlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->approlefunlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->approlefunlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameAppRoleFun)
}

::google::protobuf::uint8* SFrameAppRoleFun::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameAppRoleFun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SAppRoleFun AppRoleFunlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->approlefunlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->approlefunlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameAppRoleFun)
  return target;
}

size_t SFrameAppRoleFun::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameAppRoleFun)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SAppRoleFun AppRoleFunlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->approlefunlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->approlefunlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameAppRoleFun::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameAppRoleFun)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameAppRoleFun* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameAppRoleFun>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameAppRoleFun)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameAppRoleFun)
    MergeFrom(*source);
  }
}

void SFrameAppRoleFun::MergeFrom(const SFrameAppRoleFun& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameAppRoleFun)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  approlefunlist_.MergeFrom(from.approlefunlist_);
}

void SFrameAppRoleFun::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameAppRoleFun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameAppRoleFun::CopyFrom(const SFrameAppRoleFun& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameAppRoleFun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameAppRoleFun::IsInitialized() const {
  return true;
}

void SFrameAppRoleFun::Swap(SFrameAppRoleFun* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameAppRoleFun::InternalSwap(SFrameAppRoleFun* other) {
  using std::swap;
  CastToBase(&approlefunlist_)->InternalSwap(CastToBase(&other->approlefunlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameAppRoleFun::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SAppRoleFun::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SAppRoleFun::kIdFieldNumber;
const int SAppRoleFun::kRoleIdFieldNumber;
const int SAppRoleFun::kFunIDFieldNumber;
const int SAppRoleFun::kTypeFieldNumber;
const int SAppRoleFun::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SAppRoleFun::SAppRoleFun()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SAppRoleFun.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SAppRoleFun)
}
SAppRoleFun::SAppRoleFun(const SAppRoleFun& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SAppRoleFun)
}

void SAppRoleFun::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

SAppRoleFun::~SAppRoleFun() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SAppRoleFun)
  SharedDtor();
}

void SAppRoleFun::SharedDtor() {
}

void SAppRoleFun::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SAppRoleFun::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SAppRoleFun& SAppRoleFun::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SAppRoleFun.base);
  return *internal_default_instance();
}


void SAppRoleFun::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SAppRoleFun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool SAppRoleFun::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SAppRoleFun)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 FunID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &funid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SAppRoleFun)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SAppRoleFun)
  return false;
#undef DO_
}

void SAppRoleFun::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SAppRoleFun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 RoleId = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // uint64 FunID = 3;
  if (this->funid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->funid(), output);
  }

  // int32 Type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  // int32 State = 5;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SAppRoleFun)
}

::google::protobuf::uint8* SAppRoleFun::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SAppRoleFun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 RoleId = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // uint64 FunID = 3;
  if (this->funid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->funid(), target);
  }

  // int32 Type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  // int32 State = 5;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SAppRoleFun)
  return target;
}

size_t SAppRoleFun::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SAppRoleFun)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 RoleId = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint64 FunID = 3;
  if (this->funid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->funid());
  }

  // int32 Type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 State = 5;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SAppRoleFun::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SAppRoleFun)
  GOOGLE_DCHECK_NE(&from, this);
  const SAppRoleFun* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SAppRoleFun>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SAppRoleFun)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SAppRoleFun)
    MergeFrom(*source);
  }
}

void SAppRoleFun::MergeFrom(const SAppRoleFun& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SAppRoleFun)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.funid() != 0) {
    set_funid(from.funid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SAppRoleFun::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SAppRoleFun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SAppRoleFun::CopyFrom(const SAppRoleFun& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SAppRoleFun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SAppRoleFun::IsInitialized() const {
  return true;
}

void SAppRoleFun::Swap(SAppRoleFun* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SAppRoleFun::InternalSwap(SAppRoleFun* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(roleid_, other->roleid_);
  swap(funid_, other->funid_);
  swap(type_, other->type_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SAppRoleFun::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameDeviceGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameDeviceGroup::kDeviceGrouplistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameDeviceGroup::SFrameDeviceGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameDeviceGroup)
}
SFrameDeviceGroup::SFrameDeviceGroup(const SFrameDeviceGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      devicegrouplist_(from.devicegrouplist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameDeviceGroup)
}

void SFrameDeviceGroup::SharedCtor() {
}

SFrameDeviceGroup::~SFrameDeviceGroup() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameDeviceGroup)
  SharedDtor();
}

void SFrameDeviceGroup::SharedDtor() {
}

void SFrameDeviceGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameDeviceGroup::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameDeviceGroup& SFrameDeviceGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceGroup.base);
  return *internal_default_instance();
}


void SFrameDeviceGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameDeviceGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devicegrouplist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameDeviceGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameDeviceGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SDeviceGroup DeviceGrouplist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_devicegrouplist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameDeviceGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameDeviceGroup)
  return false;
#undef DO_
}

void SFrameDeviceGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameDeviceGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SDeviceGroup DeviceGrouplist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devicegrouplist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->devicegrouplist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameDeviceGroup)
}

::google::protobuf::uint8* SFrameDeviceGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameDeviceGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SDeviceGroup DeviceGrouplist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devicegrouplist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->devicegrouplist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameDeviceGroup)
  return target;
}

size_t SFrameDeviceGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameDeviceGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SDeviceGroup DeviceGrouplist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->devicegrouplist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->devicegrouplist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameDeviceGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameDeviceGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameDeviceGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameDeviceGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameDeviceGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameDeviceGroup)
    MergeFrom(*source);
  }
}

void SFrameDeviceGroup::MergeFrom(const SFrameDeviceGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameDeviceGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  devicegrouplist_.MergeFrom(from.devicegrouplist_);
}

void SFrameDeviceGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameDeviceGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameDeviceGroup::CopyFrom(const SFrameDeviceGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameDeviceGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameDeviceGroup::IsInitialized() const {
  return true;
}

void SFrameDeviceGroup::Swap(SFrameDeviceGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameDeviceGroup::InternalSwap(SFrameDeviceGroup* other) {
  using std::swap;
  CastToBase(&devicegrouplist_)->InternalSwap(CastToBase(&other->devicegrouplist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameDeviceGroup::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SDeviceGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SDeviceGroup::kIdFieldNumber;
const int SDeviceGroup::kMechIDFieldNumber;
const int SDeviceGroup::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SDeviceGroup::SDeviceGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SDeviceGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SDeviceGroup)
}
SDeviceGroup::SDeviceGroup(const SDeviceGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&mechid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(mechid_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SDeviceGroup)
}

void SDeviceGroup::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mechid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(mechid_));
}

SDeviceGroup::~SDeviceGroup() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SDeviceGroup)
  SharedDtor();
}

void SDeviceGroup::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SDeviceGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SDeviceGroup::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SDeviceGroup& SDeviceGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SDeviceGroup.base);
  return *internal_default_instance();
}


void SDeviceGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SDeviceGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mechid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(mechid_));
  _internal_metadata_.Clear();
}

bool SDeviceGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SDeviceGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 MechID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mechid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SDeviceGroup.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SDeviceGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SDeviceGroup)
  return false;
#undef DO_
}

void SDeviceGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SDeviceGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 MechID = 2;
  if (this->mechid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->mechid(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDeviceGroup.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SDeviceGroup)
}

::google::protobuf::uint8* SDeviceGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SDeviceGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 MechID = 2;
  if (this->mechid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->mechid(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDeviceGroup.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SDeviceGroup)
  return target;
}

size_t SDeviceGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SDeviceGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 MechID = 2;
  if (this->mechid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mechid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SDeviceGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SDeviceGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const SDeviceGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SDeviceGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SDeviceGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SDeviceGroup)
    MergeFrom(*source);
  }
}

void SDeviceGroup::MergeFrom(const SDeviceGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SDeviceGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.mechid() != 0) {
    set_mechid(from.mechid());
  }
}

void SDeviceGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SDeviceGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SDeviceGroup::CopyFrom(const SDeviceGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SDeviceGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SDeviceGroup::IsInitialized() const {
  return true;
}

void SDeviceGroup::Swap(SDeviceGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SDeviceGroup::InternalSwap(SDeviceGroup* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(mechid_, other->mechid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SDeviceGroup::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameAreabase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameAreabase::kSAreabaseinfolistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameAreabase::SFrameAreabase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameAreabase.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameAreabase)
}
SFrameAreabase::SFrameAreabase(const SFrameAreabase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sareabaseinfolist_(from.sareabaseinfolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameAreabase)
}

void SFrameAreabase::SharedCtor() {
}

SFrameAreabase::~SFrameAreabase() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameAreabase)
  SharedDtor();
}

void SFrameAreabase::SharedDtor() {
}

void SFrameAreabase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameAreabase::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameAreabase& SFrameAreabase::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameAreabase.base);
  return *internal_default_instance();
}


void SFrameAreabase::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameAreabase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sareabaseinfolist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameAreabase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameAreabase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SAreabaseinfo SAreabaseinfolist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sareabaseinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameAreabase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameAreabase)
  return false;
#undef DO_
}

void SFrameAreabase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameAreabase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SAreabaseinfo SAreabaseinfolist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sareabaseinfolist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sareabaseinfolist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameAreabase)
}

::google::protobuf::uint8* SFrameAreabase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameAreabase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SAreabaseinfo SAreabaseinfolist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sareabaseinfolist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sareabaseinfolist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameAreabase)
  return target;
}

size_t SFrameAreabase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameAreabase)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SAreabaseinfo SAreabaseinfolist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sareabaseinfolist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sareabaseinfolist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameAreabase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameAreabase)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameAreabase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameAreabase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameAreabase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameAreabase)
    MergeFrom(*source);
  }
}

void SFrameAreabase::MergeFrom(const SFrameAreabase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameAreabase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sareabaseinfolist_.MergeFrom(from.sareabaseinfolist_);
}

void SFrameAreabase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameAreabase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameAreabase::CopyFrom(const SFrameAreabase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameAreabase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameAreabase::IsInitialized() const {
  return true;
}

void SFrameAreabase::Swap(SFrameAreabase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameAreabase::InternalSwap(SFrameAreabase* other) {
  using std::swap;
  CastToBase(&sareabaseinfolist_)->InternalSwap(CastToBase(&other->sareabaseinfolist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameAreabase::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SAreabaseinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SAreabaseinfo::kIdFieldNumber;
const int SAreabaseinfo::kItemidFieldNumber;
const int SAreabaseinfo::kCreateUserIDFieldNumber;
const int SAreabaseinfo::kNameFieldNumber;
const int SAreabaseinfo::kStateFieldNumber;
const int SAreabaseinfo::kTypeFieldNumber;
const int SAreabaseinfo::kRemarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SAreabaseinfo::SAreabaseinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SAreabaseinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SAreabaseinfo)
}
SAreabaseinfo::SAreabaseinfo(const SAreabaseinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark().size() > 0) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SAreabaseinfo)
}

void SAreabaseinfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

SAreabaseinfo::~SAreabaseinfo() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SAreabaseinfo)
  SharedDtor();
}

void SAreabaseinfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SAreabaseinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SAreabaseinfo::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SAreabaseinfo& SAreabaseinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SAreabaseinfo.base);
  return *internal_default_instance();
}


void SAreabaseinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SAreabaseinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool SAreabaseinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SAreabaseinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 itemid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 CreateUserID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &createuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SAreabaseinfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark().data(), static_cast<int>(this->remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SAreabaseinfo.remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SAreabaseinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SAreabaseinfo)
  return false;
#undef DO_
}

void SAreabaseinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SAreabaseinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 itemid = 2;
  if (this->itemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->itemid(), output);
  }

  // uint64 CreateUserID = 3;
  if (this->createuserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->createuserid(), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SAreabaseinfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // int32 State = 5;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->state(), output);
  }

  // int32 type = 6;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->type(), output);
  }

  // string remark = 7;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SAreabaseinfo.remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->remark(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SAreabaseinfo)
}

::google::protobuf::uint8* SAreabaseinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SAreabaseinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 itemid = 2;
  if (this->itemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->itemid(), target);
  }

  // uint64 CreateUserID = 3;
  if (this->createuserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->createuserid(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SAreabaseinfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // int32 State = 5;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->state(), target);
  }

  // int32 type = 6;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->type(), target);
  }

  // string remark = 7;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SAreabaseinfo.remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->remark(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SAreabaseinfo)
  return target;
}

size_t SAreabaseinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SAreabaseinfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string remark = 7;
  if (this->remark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 itemid = 2;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->itemid());
  }

  // uint64 CreateUserID = 3;
  if (this->createuserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->createuserid());
  }

  // int32 State = 5;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int32 type = 6;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SAreabaseinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SAreabaseinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SAreabaseinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SAreabaseinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SAreabaseinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SAreabaseinfo)
    MergeFrom(*source);
  }
}

void SAreabaseinfo::MergeFrom(const SAreabaseinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SAreabaseinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.remark().size() > 0) {

    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.itemid() != 0) {
    set_itemid(from.itemid());
  }
  if (from.createuserid() != 0) {
    set_createuserid(from.createuserid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void SAreabaseinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SAreabaseinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SAreabaseinfo::CopyFrom(const SAreabaseinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SAreabaseinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SAreabaseinfo::IsInitialized() const {
  return true;
}

void SAreabaseinfo::Swap(SAreabaseinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SAreabaseinfo::InternalSwap(SAreabaseinfo* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remark_.Swap(&other->remark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(itemid_, other->itemid_);
  swap(createuserid_, other->createuserid_);
  swap(state_, other->state_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SAreabaseinfo::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameAreaDevice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameAreaDevice::kSAreaDeviceinfolistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameAreaDevice::SFrameAreaDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameAreaDevice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameAreaDevice)
}
SFrameAreaDevice::SFrameAreaDevice(const SFrameAreaDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sareadeviceinfolist_(from.sareadeviceinfolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameAreaDevice)
}

void SFrameAreaDevice::SharedCtor() {
}

SFrameAreaDevice::~SFrameAreaDevice() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameAreaDevice)
  SharedDtor();
}

void SFrameAreaDevice::SharedDtor() {
}

void SFrameAreaDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameAreaDevice::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameAreaDevice& SFrameAreaDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameAreaDevice.base);
  return *internal_default_instance();
}


void SFrameAreaDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameAreaDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sareadeviceinfolist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameAreaDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameAreaDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SAreaDeviceinfo SAreaDeviceinfolist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sareadeviceinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameAreaDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameAreaDevice)
  return false;
#undef DO_
}

void SFrameAreaDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameAreaDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SAreaDeviceinfo SAreaDeviceinfolist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sareadeviceinfolist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sareadeviceinfolist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameAreaDevice)
}

::google::protobuf::uint8* SFrameAreaDevice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameAreaDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SAreaDeviceinfo SAreaDeviceinfolist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sareadeviceinfolist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sareadeviceinfolist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameAreaDevice)
  return target;
}

size_t SFrameAreaDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameAreaDevice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SAreaDeviceinfo SAreaDeviceinfolist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sareadeviceinfolist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sareadeviceinfolist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameAreaDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameAreaDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameAreaDevice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameAreaDevice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameAreaDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameAreaDevice)
    MergeFrom(*source);
  }
}

void SFrameAreaDevice::MergeFrom(const SFrameAreaDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameAreaDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sareadeviceinfolist_.MergeFrom(from.sareadeviceinfolist_);
}

void SFrameAreaDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameAreaDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameAreaDevice::CopyFrom(const SFrameAreaDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameAreaDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameAreaDevice::IsInitialized() const {
  return true;
}

void SFrameAreaDevice::Swap(SFrameAreaDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameAreaDevice::InternalSwap(SFrameAreaDevice* other) {
  using std::swap;
  CastToBase(&sareadeviceinfolist_)->InternalSwap(CastToBase(&other->sareadeviceinfolist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameAreaDevice::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SAreaDeviceinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SAreaDeviceinfo::kIdFieldNumber;
const int SAreaDeviceinfo::kDeviceidFieldNumber;
const int SAreaDeviceinfo::kAreaidFieldNumber;
const int SAreaDeviceinfo::kStateFieldNumber;
const int SAreaDeviceinfo::kInstallTimeFieldNumber;
const int SAreaDeviceinfo::kElectricityFieldNumber;
const int SAreaDeviceinfo::kRemarkFieldNumber;
const int SAreaDeviceinfo::kInstallUserIDFieldNumber;
const int SAreaDeviceinfo::kManagerUserIDFieldNumber;
const int SAreaDeviceinfo::kNickNameFieldNumber;
const int SAreaDeviceinfo::kLockPushFieldNumber;
const int SAreaDeviceinfo::kAlarmPushFieldNumber;
const int SAreaDeviceinfo::kInstallUserTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SAreaDeviceinfo::SAreaDeviceinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SAreaDeviceinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SAreaDeviceinfo)
}
SAreaDeviceinfo::SAreaDeviceinfo(const SAreaDeviceinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark().size() > 0) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&installusertype_) -
    reinterpret_cast<char*>(&id_)) + sizeof(installusertype_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SAreaDeviceinfo)
}

void SAreaDeviceinfo::SharedCtor() {
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&installusertype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(installusertype_));
}

SAreaDeviceinfo::~SAreaDeviceinfo() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SAreaDeviceinfo)
  SharedDtor();
}

void SAreaDeviceinfo::SharedDtor() {
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SAreaDeviceinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SAreaDeviceinfo::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SAreaDeviceinfo& SAreaDeviceinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SAreaDeviceinfo.base);
  return *internal_default_instance();
}


void SAreaDeviceinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SAreaDeviceinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&installusertype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(installusertype_));
  _internal_metadata_.Clear();
}

bool SAreaDeviceinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SAreaDeviceinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 deviceid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &deviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 areaid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &areaid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 InstallTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &installtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Electricity = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &electricity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark().data(), static_cast<int>(this->remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SAreaDeviceinfo.remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 InstallUserID = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &installuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ManagerUserID = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &manageruserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string NickName = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SAreaDeviceinfo.NickName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LockPush = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lockpush_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 AlarmPush = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alarmpush_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 InstallUserType = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &installusertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SAreaDeviceinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SAreaDeviceinfo)
  return false;
#undef DO_
}

void SAreaDeviceinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SAreaDeviceinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 deviceid = 2;
  if (this->deviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->deviceid(), output);
  }

  // uint64 areaid = 3;
  if (this->areaid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->areaid(), output);
  }

  // int32 state = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  // int64 InstallTime = 5;
  if (this->installtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->installtime(), output);
  }

  // int32 Electricity = 6;
  if (this->electricity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->electricity(), output);
  }

  // string remark = 7;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SAreaDeviceinfo.remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->remark(), output);
  }

  // uint64 InstallUserID = 8;
  if (this->installuserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->installuserid(), output);
  }

  // uint64 ManagerUserID = 9;
  if (this->manageruserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->manageruserid(), output);
  }

  // string NickName = 10;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SAreaDeviceinfo.NickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->nickname(), output);
  }

  // int32 LockPush = 11;
  if (this->lockpush() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->lockpush(), output);
  }

  // int32 AlarmPush = 12;
  if (this->alarmpush() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->alarmpush(), output);
  }

  // int32 InstallUserType = 13;
  if (this->installusertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->installusertype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SAreaDeviceinfo)
}

::google::protobuf::uint8* SAreaDeviceinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SAreaDeviceinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 deviceid = 2;
  if (this->deviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->deviceid(), target);
  }

  // uint64 areaid = 3;
  if (this->areaid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->areaid(), target);
  }

  // int32 state = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  // int64 InstallTime = 5;
  if (this->installtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->installtime(), target);
  }

  // int32 Electricity = 6;
  if (this->electricity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->electricity(), target);
  }

  // string remark = 7;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SAreaDeviceinfo.remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->remark(), target);
  }

  // uint64 InstallUserID = 8;
  if (this->installuserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->installuserid(), target);
  }

  // uint64 ManagerUserID = 9;
  if (this->manageruserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->manageruserid(), target);
  }

  // string NickName = 10;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SAreaDeviceinfo.NickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->nickname(), target);
  }

  // int32 LockPush = 11;
  if (this->lockpush() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->lockpush(), target);
  }

  // int32 AlarmPush = 12;
  if (this->alarmpush() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->alarmpush(), target);
  }

  // int32 InstallUserType = 13;
  if (this->installusertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->installusertype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SAreaDeviceinfo)
  return target;
}

size_t SAreaDeviceinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SAreaDeviceinfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string remark = 7;
  if (this->remark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark());
  }

  // string NickName = 10;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 deviceid = 2;
  if (this->deviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->deviceid());
  }

  // uint64 areaid = 3;
  if (this->areaid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->areaid());
  }

  // int64 InstallTime = 5;
  if (this->installtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->installtime());
  }

  // int32 state = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int32 Electricity = 6;
  if (this->electricity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->electricity());
  }

  // uint64 InstallUserID = 8;
  if (this->installuserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->installuserid());
  }

  // uint64 ManagerUserID = 9;
  if (this->manageruserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->manageruserid());
  }

  // int32 LockPush = 11;
  if (this->lockpush() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lockpush());
  }

  // int32 AlarmPush = 12;
  if (this->alarmpush() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->alarmpush());
  }

  // int32 InstallUserType = 13;
  if (this->installusertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->installusertype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SAreaDeviceinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SAreaDeviceinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SAreaDeviceinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SAreaDeviceinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SAreaDeviceinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SAreaDeviceinfo)
    MergeFrom(*source);
  }
}

void SAreaDeviceinfo::MergeFrom(const SAreaDeviceinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SAreaDeviceinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.remark().size() > 0) {

    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.deviceid() != 0) {
    set_deviceid(from.deviceid());
  }
  if (from.areaid() != 0) {
    set_areaid(from.areaid());
  }
  if (from.installtime() != 0) {
    set_installtime(from.installtime());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.electricity() != 0) {
    set_electricity(from.electricity());
  }
  if (from.installuserid() != 0) {
    set_installuserid(from.installuserid());
  }
  if (from.manageruserid() != 0) {
    set_manageruserid(from.manageruserid());
  }
  if (from.lockpush() != 0) {
    set_lockpush(from.lockpush());
  }
  if (from.alarmpush() != 0) {
    set_alarmpush(from.alarmpush());
  }
  if (from.installusertype() != 0) {
    set_installusertype(from.installusertype());
  }
}

void SAreaDeviceinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SAreaDeviceinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SAreaDeviceinfo::CopyFrom(const SAreaDeviceinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SAreaDeviceinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SAreaDeviceinfo::IsInitialized() const {
  return true;
}

void SAreaDeviceinfo::Swap(SAreaDeviceinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SAreaDeviceinfo::InternalSwap(SAreaDeviceinfo* other) {
  using std::swap;
  remark_.Swap(&other->remark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(deviceid_, other->deviceid_);
  swap(areaid_, other->areaid_);
  swap(installtime_, other->installtime_);
  swap(state_, other->state_);
  swap(electricity_, other->electricity_);
  swap(installuserid_, other->installuserid_);
  swap(manageruserid_, other->manageruserid_);
  swap(lockpush_, other->lockpush_);
  swap(alarmpush_, other->alarmpush_);
  swap(installusertype_, other->installusertype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SAreaDeviceinfo::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameAreaUseRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameAreaUseRecord::kSAreaUseRecordlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameAreaUseRecord::SFrameAreaUseRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameAreaUseRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameAreaUseRecord)
}
SFrameAreaUseRecord::SFrameAreaUseRecord(const SFrameAreaUseRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sareauserecordlist_(from.sareauserecordlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameAreaUseRecord)
}

void SFrameAreaUseRecord::SharedCtor() {
}

SFrameAreaUseRecord::~SFrameAreaUseRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameAreaUseRecord)
  SharedDtor();
}

void SFrameAreaUseRecord::SharedDtor() {
}

void SFrameAreaUseRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameAreaUseRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameAreaUseRecord& SFrameAreaUseRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameAreaUseRecord.base);
  return *internal_default_instance();
}


void SFrameAreaUseRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameAreaUseRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sareauserecordlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameAreaUseRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameAreaUseRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SAreaUseRecord SAreaUseRecordlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sareauserecordlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameAreaUseRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameAreaUseRecord)
  return false;
#undef DO_
}

void SFrameAreaUseRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameAreaUseRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SAreaUseRecord SAreaUseRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sareauserecordlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sareauserecordlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameAreaUseRecord)
}

::google::protobuf::uint8* SFrameAreaUseRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameAreaUseRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SAreaUseRecord SAreaUseRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sareauserecordlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sareauserecordlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameAreaUseRecord)
  return target;
}

size_t SFrameAreaUseRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameAreaUseRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SAreaUseRecord SAreaUseRecordlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sareauserecordlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sareauserecordlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameAreaUseRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameAreaUseRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameAreaUseRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameAreaUseRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameAreaUseRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameAreaUseRecord)
    MergeFrom(*source);
  }
}

void SFrameAreaUseRecord::MergeFrom(const SFrameAreaUseRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameAreaUseRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sareauserecordlist_.MergeFrom(from.sareauserecordlist_);
}

void SFrameAreaUseRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameAreaUseRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameAreaUseRecord::CopyFrom(const SFrameAreaUseRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameAreaUseRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameAreaUseRecord::IsInitialized() const {
  return true;
}

void SFrameAreaUseRecord::Swap(SFrameAreaUseRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameAreaUseRecord::InternalSwap(SFrameAreaUseRecord* other) {
  using std::swap;
  CastToBase(&sareauserecordlist_)->InternalSwap(CastToBase(&other->sareauserecordlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameAreaUseRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SAreaUseRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SAreaUseRecord::kIdFieldNumber;
const int SAreaUseRecord::kAreaIDFieldNumber;
const int SAreaUseRecord::kTimeFieldNumber;
const int SAreaUseRecord::kTimestepFieldNumber;
const int SAreaUseRecord::kUserIDFieldNumber;
const int SAreaUseRecord::kStateFieldNumber;
const int SAreaUseRecord::kRemarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SAreaUseRecord::SAreaUseRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SAreaUseRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SAreaUseRecord)
}
SAreaUseRecord::SAreaUseRecord(const SAreaUseRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark().size() > 0) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SAreaUseRecord)
}

void SAreaUseRecord::SharedCtor() {
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

SAreaUseRecord::~SAreaUseRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SAreaUseRecord)
  SharedDtor();
}

void SAreaUseRecord::SharedDtor() {
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SAreaUseRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SAreaUseRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SAreaUseRecord& SAreaUseRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SAreaUseRecord.base);
  return *internal_default_instance();
}


void SAreaUseRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SAreaUseRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool SAreaUseRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SAreaUseRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 AreaID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &areaid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestep = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestep_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 userID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark().data(), static_cast<int>(this->remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SAreaUseRecord.remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SAreaUseRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SAreaUseRecord)
  return false;
#undef DO_
}

void SAreaUseRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SAreaUseRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 AreaID = 2;
  if (this->areaid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->areaid(), output);
  }

  // int64 time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->time(), output);
  }

  // int64 timestep = 4;
  if (this->timestep() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->timestep(), output);
  }

  // uint64 userID = 5;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->userid(), output);
  }

  // int32 state = 6;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->state(), output);
  }

  // string remark = 7;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SAreaUseRecord.remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->remark(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SAreaUseRecord)
}

::google::protobuf::uint8* SAreaUseRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SAreaUseRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 AreaID = 2;
  if (this->areaid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->areaid(), target);
  }

  // int64 time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->time(), target);
  }

  // int64 timestep = 4;
  if (this->timestep() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->timestep(), target);
  }

  // uint64 userID = 5;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->userid(), target);
  }

  // int32 state = 6;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->state(), target);
  }

  // string remark = 7;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SAreaUseRecord.remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->remark(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SAreaUseRecord)
  return target;
}

size_t SAreaUseRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SAreaUseRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string remark = 7;
  if (this->remark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 AreaID = 2;
  if (this->areaid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->areaid());
  }

  // int64 time = 3;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // int64 timestep = 4;
  if (this->timestep() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestep());
  }

  // uint64 userID = 5;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // int32 state = 6;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SAreaUseRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SAreaUseRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SAreaUseRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SAreaUseRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SAreaUseRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SAreaUseRecord)
    MergeFrom(*source);
  }
}

void SAreaUseRecord::MergeFrom(const SAreaUseRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SAreaUseRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.remark().size() > 0) {

    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.areaid() != 0) {
    set_areaid(from.areaid());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.timestep() != 0) {
    set_timestep(from.timestep());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SAreaUseRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SAreaUseRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SAreaUseRecord::CopyFrom(const SAreaUseRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SAreaUseRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SAreaUseRecord::IsInitialized() const {
  return true;
}

void SAreaUseRecord::Swap(SAreaUseRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SAreaUseRecord::InternalSwap(SAreaUseRecord* other) {
  using std::swap;
  remark_.Swap(&other->remark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(areaid_, other->areaid_);
  swap(time_, other->time_);
  swap(timestep_, other->timestep_);
  swap(userid_, other->userid_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SAreaUseRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameBuildPsw::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameBuildPsw::kSBuildPswlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameBuildPsw::SFrameBuildPsw()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameBuildPsw.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameBuildPsw)
}
SFrameBuildPsw::SFrameBuildPsw(const SFrameBuildPsw& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sbuildpswlist_(from.sbuildpswlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameBuildPsw)
}

void SFrameBuildPsw::SharedCtor() {
}

SFrameBuildPsw::~SFrameBuildPsw() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameBuildPsw)
  SharedDtor();
}

void SFrameBuildPsw::SharedDtor() {
}

void SFrameBuildPsw::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameBuildPsw::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameBuildPsw& SFrameBuildPsw::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameBuildPsw.base);
  return *internal_default_instance();
}


void SFrameBuildPsw::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameBuildPsw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sbuildpswlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameBuildPsw::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameBuildPsw)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SBuildPsw SBuildPswlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sbuildpswlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameBuildPsw)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameBuildPsw)
  return false;
#undef DO_
}

void SFrameBuildPsw::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameBuildPsw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SBuildPsw SBuildPswlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sbuildpswlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sbuildpswlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameBuildPsw)
}

::google::protobuf::uint8* SFrameBuildPsw::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameBuildPsw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SBuildPsw SBuildPswlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sbuildpswlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sbuildpswlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameBuildPsw)
  return target;
}

size_t SFrameBuildPsw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameBuildPsw)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SBuildPsw SBuildPswlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sbuildpswlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sbuildpswlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameBuildPsw::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameBuildPsw)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameBuildPsw* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameBuildPsw>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameBuildPsw)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameBuildPsw)
    MergeFrom(*source);
  }
}

void SFrameBuildPsw::MergeFrom(const SFrameBuildPsw& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameBuildPsw)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sbuildpswlist_.MergeFrom(from.sbuildpswlist_);
}

void SFrameBuildPsw::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameBuildPsw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameBuildPsw::CopyFrom(const SFrameBuildPsw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameBuildPsw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameBuildPsw::IsInitialized() const {
  return true;
}

void SFrameBuildPsw::Swap(SFrameBuildPsw* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameBuildPsw::InternalSwap(SFrameBuildPsw* other) {
  using std::swap;
  CastToBase(&sbuildpswlist_)->InternalSwap(CastToBase(&other->sbuildpswlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameBuildPsw::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SBuildPsw::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SBuildPsw::kIdFieldNumber;
const int SBuildPsw::kTimeFieldNumber;
const int SBuildPsw::kDeviceidFieldNumber;
const int SBuildPsw::kUseridFieldNumber;
const int SBuildPsw::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SBuildPsw::SBuildPsw()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SBuildPsw.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SBuildPsw)
}
SBuildPsw::SBuildPsw(const SBuildPsw& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SBuildPsw)
}

void SBuildPsw::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

SBuildPsw::~SBuildPsw() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SBuildPsw)
  SharedDtor();
}

void SBuildPsw::SharedDtor() {
}

void SBuildPsw::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SBuildPsw::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SBuildPsw& SBuildPsw::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SBuildPsw.base);
  return *internal_default_instance();
}


void SBuildPsw::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SBuildPsw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool SBuildPsw::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SBuildPsw)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 deviceid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &deviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 userid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SBuildPsw)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SBuildPsw)
  return false;
#undef DO_
}

void SBuildPsw::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SBuildPsw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // int64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->time(), output);
  }

  // uint64 deviceid = 3;
  if (this->deviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->deviceid(), output);
  }

  // uint64 userid = 4;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->userid(), output);
  }

  // int32 State = 5;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SBuildPsw)
}

::google::protobuf::uint8* SBuildPsw::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SBuildPsw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // int64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->time(), target);
  }

  // uint64 deviceid = 3;
  if (this->deviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->deviceid(), target);
  }

  // uint64 userid = 4;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->userid(), target);
  }

  // int32 State = 5;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SBuildPsw)
  return target;
}

size_t SBuildPsw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SBuildPsw)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // uint64 deviceid = 3;
  if (this->deviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->deviceid());
  }

  // uint64 userid = 4;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // int32 State = 5;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SBuildPsw::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SBuildPsw)
  GOOGLE_DCHECK_NE(&from, this);
  const SBuildPsw* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SBuildPsw>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SBuildPsw)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SBuildPsw)
    MergeFrom(*source);
  }
}

void SBuildPsw::MergeFrom(const SBuildPsw& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SBuildPsw)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.deviceid() != 0) {
    set_deviceid(from.deviceid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SBuildPsw::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SBuildPsw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SBuildPsw::CopyFrom(const SBuildPsw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SBuildPsw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SBuildPsw::IsInitialized() const {
  return true;
}

void SBuildPsw::Swap(SBuildPsw* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SBuildPsw::InternalSwap(SBuildPsw* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(time_, other->time_);
  swap(deviceid_, other->deviceid_);
  swap(userid_, other->userid_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SBuildPsw::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameDeviceBase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameDeviceBase::kSDeviceBaseinfolistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameDeviceBase::SFrameDeviceBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceBase.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameDeviceBase)
}
SFrameDeviceBase::SFrameDeviceBase(const SFrameDeviceBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sdevicebaseinfolist_(from.sdevicebaseinfolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameDeviceBase)
}

void SFrameDeviceBase::SharedCtor() {
}

SFrameDeviceBase::~SFrameDeviceBase() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameDeviceBase)
  SharedDtor();
}

void SFrameDeviceBase::SharedDtor() {
}

void SFrameDeviceBase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameDeviceBase::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameDeviceBase& SFrameDeviceBase::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameDeviceBase.base);
  return *internal_default_instance();
}


void SFrameDeviceBase::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameDeviceBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sdevicebaseinfolist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameDeviceBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameDeviceBase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SDeviceBaseinfo SDeviceBaseinfolist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sdevicebaseinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameDeviceBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameDeviceBase)
  return false;
#undef DO_
}

void SFrameDeviceBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameDeviceBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SDeviceBaseinfo SDeviceBaseinfolist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sdevicebaseinfolist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sdevicebaseinfolist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameDeviceBase)
}

::google::protobuf::uint8* SFrameDeviceBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameDeviceBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SDeviceBaseinfo SDeviceBaseinfolist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sdevicebaseinfolist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sdevicebaseinfolist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameDeviceBase)
  return target;
}

size_t SFrameDeviceBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameDeviceBase)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SDeviceBaseinfo SDeviceBaseinfolist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sdevicebaseinfolist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sdevicebaseinfolist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameDeviceBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameDeviceBase)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameDeviceBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameDeviceBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameDeviceBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameDeviceBase)
    MergeFrom(*source);
  }
}

void SFrameDeviceBase::MergeFrom(const SFrameDeviceBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameDeviceBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sdevicebaseinfolist_.MergeFrom(from.sdevicebaseinfolist_);
}

void SFrameDeviceBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameDeviceBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameDeviceBase::CopyFrom(const SFrameDeviceBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameDeviceBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameDeviceBase::IsInitialized() const {
  return true;
}

void SFrameDeviceBase::Swap(SFrameDeviceBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameDeviceBase::InternalSwap(SFrameDeviceBase* other) {
  using std::swap;
  CastToBase(&sdevicebaseinfolist_)->InternalSwap(CastToBase(&other->sdevicebaseinfolist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameDeviceBase::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SDeviceBaseinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SDeviceBaseinfo::kIdFieldNumber;
const int SDeviceBaseinfo::kNameFieldNumber;
const int SDeviceBaseinfo::kMacFieldNumber;
const int SDeviceBaseinfo::kTypeFieldNumber;
const int SDeviceBaseinfo::kTimeFieldNumber;
const int SDeviceBaseinfo::kKeyFieldNumber;
const int SDeviceBaseinfo::kCurkeyFieldNumber;
const int SDeviceBaseinfo::kElectronickeyFieldNumber;
const int SDeviceBaseinfo::kStateFieldNumber;
const int SDeviceBaseinfo::kDevModelFieldNumber;
const int SDeviceBaseinfo::kFwVerFieldNumber;
const int SDeviceBaseinfo::kHwverFieldNumber;
const int SDeviceBaseinfo::kSysVerFieldNumber;
const int SDeviceBaseinfo::kOtherVerFieldNumber;
const int SDeviceBaseinfo::kTvoiceFieldNumber;
const int SDeviceBaseinfo::kTemperatureFieldNumber;
const int SDeviceBaseinfo::kTvoltageFieldNumber;
const int SDeviceBaseinfo::kCurTimeFieldNumber;
const int SDeviceBaseinfo::kMessageFieldNumber;
const int SDeviceBaseinfo::kRemarkFieldNumber;
const int SDeviceBaseinfo::kNBDeviceIDFieldNumber;
const int SDeviceBaseinfo::kIdentyCodeKeyFieldNumber;
const int SDeviceBaseinfo::kIdentyCodeFieldNumber;
const int SDeviceBaseinfo::kImeiFieldNumber;
const int SDeviceBaseinfo::kDeviceCrcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SDeviceBaseinfo::SDeviceBaseinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SDeviceBaseinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SDeviceBaseinfo)
}
SDeviceBaseinfo::SDeviceBaseinfo(const SDeviceBaseinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac().size() > 0) {
    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  electronickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.electronickey().size() > 0) {
    electronickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.electronickey_);
  }
  devmodel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.devmodel().size() > 0) {
    devmodel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devmodel_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark().size() > 0) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  nbdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nbdeviceid().size() > 0) {
    nbdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nbdeviceid_);
  }
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imei().size() > 0) {
    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&devicecrc_) -
    reinterpret_cast<char*>(&id_)) + sizeof(devicecrc_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SDeviceBaseinfo)
}

void SDeviceBaseinfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  electronickey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devmodel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nbdeviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&devicecrc_) -
      reinterpret_cast<char*>(&id_)) + sizeof(devicecrc_));
}

SDeviceBaseinfo::~SDeviceBaseinfo() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SDeviceBaseinfo)
  SharedDtor();
}

void SDeviceBaseinfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  electronickey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devmodel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nbdeviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SDeviceBaseinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SDeviceBaseinfo::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SDeviceBaseinfo& SDeviceBaseinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SDeviceBaseinfo.base);
  return *internal_default_instance();
}


void SDeviceBaseinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SDeviceBaseinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  electronickey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devmodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nbdeviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&devicecrc_) -
      reinterpret_cast<char*>(&id_)) + sizeof(devicecrc_));
  _internal_metadata_.Clear();
}

bool SDeviceBaseinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SDeviceBaseinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SDeviceBaseinfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Mac = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac().data(), static_cast<int>(this->mac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SDeviceBaseinfo.Mac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 key = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Curkey = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Electronickey = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_electronickey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->electronickey().data(), static_cast<int>(this->electronickey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SDeviceBaseinfo.Electronickey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes DevModel = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_devmodel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 FwVer = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fwver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Hwver = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hwver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SysVer = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sysver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 OtherVer = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &otherver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Tvoice = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tvoice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Temperature = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &temperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Tvoltage = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tvoltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 CurTime = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &curtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Message = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark().data(), static_cast<int>(this->remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SDeviceBaseinfo.remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string NBDeviceID = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nbdeviceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nbdeviceid().data(), static_cast<int>(this->nbdeviceid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SDeviceBaseinfo.NBDeviceID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 IdentyCodeKey = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &identycodekey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 IdentyCode = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &identycode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Imei = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imei().data(), static_cast<int>(this->imei().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SDeviceBaseinfo.Imei"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 DeviceCrc = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &devicecrc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SDeviceBaseinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SDeviceBaseinfo)
  return false;
#undef DO_
}

void SDeviceBaseinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SDeviceBaseinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDeviceBaseinfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string Mac = 3;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDeviceBaseinfo.Mac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mac(), output);
  }

  // int32 Type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  // int64 time = 5;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->time(), output);
  }

  // int32 key = 6;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->key(), output);
  }

  // int32 Curkey = 7;
  if (this->curkey() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->curkey(), output);
  }

  // string Electronickey = 8;
  if (this->electronickey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->electronickey().data(), static_cast<int>(this->electronickey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDeviceBaseinfo.Electronickey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->electronickey(), output);
  }

  // int32 state = 9;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->state(), output);
  }

  // bytes DevModel = 10;
  if (this->devmodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->devmodel(), output);
  }

  // int32 FwVer = 11;
  if (this->fwver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->fwver(), output);
  }

  // int32 Hwver = 12;
  if (this->hwver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->hwver(), output);
  }

  // int32 SysVer = 13;
  if (this->sysver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->sysver(), output);
  }

  // int32 OtherVer = 14;
  if (this->otherver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->otherver(), output);
  }

  // int32 Tvoice = 15;
  if (this->tvoice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->tvoice(), output);
  }

  // int32 Temperature = 16;
  if (this->temperature() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->temperature(), output);
  }

  // int32 Tvoltage = 17;
  if (this->tvoltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->tvoltage(), output);
  }

  // int64 CurTime = 18;
  if (this->curtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->curtime(), output);
  }

  // bytes Message = 19;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      19, this->message(), output);
  }

  // string remark = 20;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDeviceBaseinfo.remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->remark(), output);
  }

  // string NBDeviceID = 21;
  if (this->nbdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nbdeviceid().data(), static_cast<int>(this->nbdeviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDeviceBaseinfo.NBDeviceID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->nbdeviceid(), output);
  }

  // int32 IdentyCodeKey = 22;
  if (this->identycodekey() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->identycodekey(), output);
  }

  // uint64 IdentyCode = 23;
  if (this->identycode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(23, this->identycode(), output);
  }

  // string Imei = 24;
  if (this->imei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDeviceBaseinfo.Imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->imei(), output);
  }

  // int32 DeviceCrc = 25;
  if (this->devicecrc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->devicecrc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SDeviceBaseinfo)
}

::google::protobuf::uint8* SDeviceBaseinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SDeviceBaseinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDeviceBaseinfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string Mac = 3;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDeviceBaseinfo.Mac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mac(), target);
  }

  // int32 Type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  // int64 time = 5;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->time(), target);
  }

  // int32 key = 6;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->key(), target);
  }

  // int32 Curkey = 7;
  if (this->curkey() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->curkey(), target);
  }

  // string Electronickey = 8;
  if (this->electronickey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->electronickey().data(), static_cast<int>(this->electronickey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDeviceBaseinfo.Electronickey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->electronickey(), target);
  }

  // int32 state = 9;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->state(), target);
  }

  // bytes DevModel = 10;
  if (this->devmodel().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->devmodel(), target);
  }

  // int32 FwVer = 11;
  if (this->fwver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->fwver(), target);
  }

  // int32 Hwver = 12;
  if (this->hwver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->hwver(), target);
  }

  // int32 SysVer = 13;
  if (this->sysver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->sysver(), target);
  }

  // int32 OtherVer = 14;
  if (this->otherver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->otherver(), target);
  }

  // int32 Tvoice = 15;
  if (this->tvoice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->tvoice(), target);
  }

  // int32 Temperature = 16;
  if (this->temperature() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->temperature(), target);
  }

  // int32 Tvoltage = 17;
  if (this->tvoltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->tvoltage(), target);
  }

  // int64 CurTime = 18;
  if (this->curtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->curtime(), target);
  }

  // bytes Message = 19;
  if (this->message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        19, this->message(), target);
  }

  // string remark = 20;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDeviceBaseinfo.remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->remark(), target);
  }

  // string NBDeviceID = 21;
  if (this->nbdeviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nbdeviceid().data(), static_cast<int>(this->nbdeviceid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDeviceBaseinfo.NBDeviceID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->nbdeviceid(), target);
  }

  // int32 IdentyCodeKey = 22;
  if (this->identycodekey() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->identycodekey(), target);
  }

  // uint64 IdentyCode = 23;
  if (this->identycode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(23, this->identycode(), target);
  }

  // string Imei = 24;
  if (this->imei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imei().data(), static_cast<int>(this->imei().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SDeviceBaseinfo.Imei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->imei(), target);
  }

  // int32 DeviceCrc = 25;
  if (this->devicecrc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->devicecrc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SDeviceBaseinfo)
  return target;
}

size_t SDeviceBaseinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SDeviceBaseinfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Mac = 3;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac());
  }

  // string Electronickey = 8;
  if (this->electronickey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->electronickey());
  }

  // bytes DevModel = 10;
  if (this->devmodel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->devmodel());
  }

  // bytes Message = 19;
  if (this->message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }

  // string remark = 20;
  if (this->remark().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark());
  }

  // string NBDeviceID = 21;
  if (this->nbdeviceid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nbdeviceid());
  }

  // string Imei = 24;
  if (this->imei().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imei());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int64 time = 5;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // int32 Type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 key = 6;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());
  }

  // int32 Curkey = 7;
  if (this->curkey() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->curkey());
  }

  // int32 state = 9;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int32 FwVer = 11;
  if (this->fwver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fwver());
  }

  // int32 Hwver = 12;
  if (this->hwver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hwver());
  }

  // int32 SysVer = 13;
  if (this->sysver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sysver());
  }

  // int32 OtherVer = 14;
  if (this->otherver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->otherver());
  }

  // int32 Tvoice = 15;
  if (this->tvoice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tvoice());
  }

  // int32 Temperature = 16;
  if (this->temperature() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->temperature());
  }

  // int64 CurTime = 18;
  if (this->curtime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->curtime());
  }

  // int32 Tvoltage = 17;
  if (this->tvoltage() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tvoltage());
  }

  // int32 IdentyCodeKey = 22;
  if (this->identycodekey() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->identycodekey());
  }

  // uint64 IdentyCode = 23;
  if (this->identycode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->identycode());
  }

  // int32 DeviceCrc = 25;
  if (this->devicecrc() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->devicecrc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SDeviceBaseinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SDeviceBaseinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SDeviceBaseinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SDeviceBaseinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SDeviceBaseinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SDeviceBaseinfo)
    MergeFrom(*source);
  }
}

void SDeviceBaseinfo::MergeFrom(const SDeviceBaseinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SDeviceBaseinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.mac().size() > 0) {

    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  if (from.electronickey().size() > 0) {

    electronickey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.electronickey_);
  }
  if (from.devmodel().size() > 0) {

    devmodel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devmodel_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.remark().size() > 0) {

    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  if (from.nbdeviceid().size() > 0) {

    nbdeviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nbdeviceid_);
  }
  if (from.imei().size() > 0) {

    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.key() != 0) {
    set_key(from.key());
  }
  if (from.curkey() != 0) {
    set_curkey(from.curkey());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.fwver() != 0) {
    set_fwver(from.fwver());
  }
  if (from.hwver() != 0) {
    set_hwver(from.hwver());
  }
  if (from.sysver() != 0) {
    set_sysver(from.sysver());
  }
  if (from.otherver() != 0) {
    set_otherver(from.otherver());
  }
  if (from.tvoice() != 0) {
    set_tvoice(from.tvoice());
  }
  if (from.temperature() != 0) {
    set_temperature(from.temperature());
  }
  if (from.curtime() != 0) {
    set_curtime(from.curtime());
  }
  if (from.tvoltage() != 0) {
    set_tvoltage(from.tvoltage());
  }
  if (from.identycodekey() != 0) {
    set_identycodekey(from.identycodekey());
  }
  if (from.identycode() != 0) {
    set_identycode(from.identycode());
  }
  if (from.devicecrc() != 0) {
    set_devicecrc(from.devicecrc());
  }
}

void SDeviceBaseinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SDeviceBaseinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SDeviceBaseinfo::CopyFrom(const SDeviceBaseinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SDeviceBaseinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SDeviceBaseinfo::IsInitialized() const {
  return true;
}

void SDeviceBaseinfo::Swap(SDeviceBaseinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SDeviceBaseinfo::InternalSwap(SDeviceBaseinfo* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mac_.Swap(&other->mac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  electronickey_.Swap(&other->electronickey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  devmodel_.Swap(&other->devmodel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remark_.Swap(&other->remark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nbdeviceid_.Swap(&other->nbdeviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  imei_.Swap(&other->imei_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(time_, other->time_);
  swap(type_, other->type_);
  swap(key_, other->key_);
  swap(curkey_, other->curkey_);
  swap(state_, other->state_);
  swap(fwver_, other->fwver_);
  swap(hwver_, other->hwver_);
  swap(sysver_, other->sysver_);
  swap(otherver_, other->otherver_);
  swap(tvoice_, other->tvoice_);
  swap(temperature_, other->temperature_);
  swap(curtime_, other->curtime_);
  swap(tvoltage_, other->tvoltage_);
  swap(identycodekey_, other->identycodekey_);
  swap(identycode_, other->identycode_);
  swap(devicecrc_, other->devicecrc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SDeviceBaseinfo::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFrameDevicePassword::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFrameDevicePassword::kSDevicePasswordlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFrameDevicePassword::SFrameDevicePassword()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFrameDevicePassword.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFrameDevicePassword)
}
SFrameDevicePassword::SFrameDevicePassword(const SFrameDevicePassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sdevicepasswordlist_(from.sdevicepasswordlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFrameDevicePassword)
}

void SFrameDevicePassword::SharedCtor() {
}

SFrameDevicePassword::~SFrameDevicePassword() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFrameDevicePassword)
  SharedDtor();
}

void SFrameDevicePassword::SharedDtor() {
}

void SFrameDevicePassword::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFrameDevicePassword::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFrameDevicePassword& SFrameDevicePassword::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFrameDevicePassword.base);
  return *internal_default_instance();
}


void SFrameDevicePassword::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFrameDevicePassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sdevicepasswordlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFrameDevicePassword::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFrameDevicePassword)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SDevicePassword SDevicePasswordlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sdevicepasswordlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFrameDevicePassword)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFrameDevicePassword)
  return false;
#undef DO_
}

void SFrameDevicePassword::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFrameDevicePassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SDevicePassword SDevicePasswordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sdevicepasswordlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sdevicepasswordlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFrameDevicePassword)
}

::google::protobuf::uint8* SFrameDevicePassword::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFrameDevicePassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SDevicePassword SDevicePasswordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sdevicepasswordlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sdevicepasswordlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFrameDevicePassword)
  return target;
}

size_t SFrameDevicePassword::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFrameDevicePassword)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SDevicePassword SDevicePasswordlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sdevicepasswordlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sdevicepasswordlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFrameDevicePassword::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFrameDevicePassword)
  GOOGLE_DCHECK_NE(&from, this);
  const SFrameDevicePassword* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFrameDevicePassword>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFrameDevicePassword)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFrameDevicePassword)
    MergeFrom(*source);
  }
}

void SFrameDevicePassword::MergeFrom(const SFrameDevicePassword& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFrameDevicePassword)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sdevicepasswordlist_.MergeFrom(from.sdevicepasswordlist_);
}

void SFrameDevicePassword::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFrameDevicePassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFrameDevicePassword::CopyFrom(const SFrameDevicePassword& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFrameDevicePassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFrameDevicePassword::IsInitialized() const {
  return true;
}

void SFrameDevicePassword::Swap(SFrameDevicePassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFrameDevicePassword::InternalSwap(SFrameDevicePassword* other) {
  using std::swap;
  CastToBase(&sdevicepasswordlist_)->InternalSwap(CastToBase(&other->sdevicepasswordlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFrameDevicePassword::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SDevicePassword::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SDevicePassword::kIdFieldNumber;
const int SDevicePassword::kPswFieldNumber;
const int SDevicePassword::kBidFieldNumber;
const int SDevicePassword::kStateFieldNumber;
const int SDevicePassword::kStarttimeFieldNumber;
const int SDevicePassword::kTimestepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SDevicePassword::SDevicePassword()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SDevicePassword.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SDevicePassword)
}
SDevicePassword::SDevicePassword(const SDevicePassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestep_) -
    reinterpret_cast<char*>(&id_)) + sizeof(timestep_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SDevicePassword)
}

void SDevicePassword::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestep_) -
      reinterpret_cast<char*>(&id_)) + sizeof(timestep_));
}

SDevicePassword::~SDevicePassword() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SDevicePassword)
  SharedDtor();
}

void SDevicePassword::SharedDtor() {
}

void SDevicePassword::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SDevicePassword::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SDevicePassword& SDevicePassword::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SDevicePassword.base);
  return *internal_default_instance();
}


void SDevicePassword::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SDevicePassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestep_) -
      reinterpret_cast<char*>(&id_)) + sizeof(timestep_));
  _internal_metadata_.Clear();
}

bool SDevicePassword::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SDevicePassword)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 psw = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &psw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Starttime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &starttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestep = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestep_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SDevicePassword)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SDevicePassword)
  return false;
#undef DO_
}

void SDevicePassword::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SDevicePassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // int32 psw = 2;
  if (this->psw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->psw(), output);
  }

  // uint64 bid = 3;
  if (this->bid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->bid(), output);
  }

  // int32 state = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  // int64 Starttime = 5;
  if (this->starttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->starttime(), output);
  }

  // int64 timestep = 6;
  if (this->timestep() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->timestep(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SDevicePassword)
}

::google::protobuf::uint8* SDevicePassword::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SDevicePassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // int32 psw = 2;
  if (this->psw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->psw(), target);
  }

  // uint64 bid = 3;
  if (this->bid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->bid(), target);
  }

  // int32 state = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  // int64 Starttime = 5;
  if (this->starttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->starttime(), target);
  }

  // int64 timestep = 6;
  if (this->timestep() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->timestep(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SDevicePassword)
  return target;
}

size_t SDevicePassword::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SDevicePassword)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 bid = 3;
  if (this->bid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bid());
  }

  // int32 psw = 2;
  if (this->psw() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->psw());
  }

  // int32 state = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int64 Starttime = 5;
  if (this->starttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->starttime());
  }

  // int64 timestep = 6;
  if (this->timestep() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestep());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SDevicePassword::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SDevicePassword)
  GOOGLE_DCHECK_NE(&from, this);
  const SDevicePassword* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SDevicePassword>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SDevicePassword)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SDevicePassword)
    MergeFrom(*source);
  }
}

void SDevicePassword::MergeFrom(const SDevicePassword& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SDevicePassword)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.bid() != 0) {
    set_bid(from.bid());
  }
  if (from.psw() != 0) {
    set_psw(from.psw());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.starttime() != 0) {
    set_starttime(from.starttime());
  }
  if (from.timestep() != 0) {
    set_timestep(from.timestep());
  }
}

void SDevicePassword::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SDevicePassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SDevicePassword::CopyFrom(const SDevicePassword& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SDevicePassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SDevicePassword::IsInitialized() const {
  return true;
}

void SDevicePassword::Swap(SDevicePassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SDevicePassword::InternalSwap(SDevicePassword* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(bid_, other->bid_);
  swap(psw_, other->psw_);
  swap(state_, other->state_);
  swap(starttime_, other->starttime_);
  swap(timestep_, other->timestep_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SDevicePassword::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFramEleSendRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFramEleSendRecord::kSEleSendRecordlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFramEleSendRecord::SFramEleSendRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFramEleSendRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFramEleSendRecord)
}
SFramEleSendRecord::SFramEleSendRecord(const SFramEleSendRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      selesendrecordlist_(from.selesendrecordlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFramEleSendRecord)
}

void SFramEleSendRecord::SharedCtor() {
}

SFramEleSendRecord::~SFramEleSendRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFramEleSendRecord)
  SharedDtor();
}

void SFramEleSendRecord::SharedDtor() {
}

void SFramEleSendRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFramEleSendRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFramEleSendRecord& SFramEleSendRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFramEleSendRecord.base);
  return *internal_default_instance();
}


void SFramEleSendRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFramEleSendRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  selesendrecordlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFramEleSendRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFramEleSendRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SEleSendRecord SEleSendRecordlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_selesendrecordlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFramEleSendRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFramEleSendRecord)
  return false;
#undef DO_
}

void SFramEleSendRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFramEleSendRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SEleSendRecord SEleSendRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->selesendrecordlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->selesendrecordlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFramEleSendRecord)
}

::google::protobuf::uint8* SFramEleSendRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFramEleSendRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SEleSendRecord SEleSendRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->selesendrecordlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->selesendrecordlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFramEleSendRecord)
  return target;
}

size_t SFramEleSendRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFramEleSendRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SEleSendRecord SEleSendRecordlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->selesendrecordlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->selesendrecordlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFramEleSendRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFramEleSendRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SFramEleSendRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFramEleSendRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFramEleSendRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFramEleSendRecord)
    MergeFrom(*source);
  }
}

void SFramEleSendRecord::MergeFrom(const SFramEleSendRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFramEleSendRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  selesendrecordlist_.MergeFrom(from.selesendrecordlist_);
}

void SFramEleSendRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFramEleSendRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFramEleSendRecord::CopyFrom(const SFramEleSendRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFramEleSendRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFramEleSendRecord::IsInitialized() const {
  return true;
}

void SFramEleSendRecord::Swap(SFramEleSendRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFramEleSendRecord::InternalSwap(SFramEleSendRecord* other) {
  using std::swap;
  CastToBase(&selesendrecordlist_)->InternalSwap(CastToBase(&other->selesendrecordlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFramEleSendRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SEleSendRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SEleSendRecord::kIdFieldNumber;
const int SEleSendRecord::kDeviceIDFieldNumber;
const int SEleSendRecord::kTimeFieldNumber;
const int SEleSendRecord::kUserIDFieldNumber;
const int SEleSendRecord::kStateFieldNumber;
const int SEleSendRecord::kStateTimeFieldNumber;
const int SEleSendRecord::kEndTimeFieldNumber;
const int SEleSendRecord::kSRoleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SEleSendRecord::SEleSendRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SEleSendRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SEleSendRecord)
}
SEleSendRecord::SEleSendRecord(const SEleSendRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SEleSendRecord)
}

void SEleSendRecord::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

SEleSendRecord::~SEleSendRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SEleSendRecord)
  SharedDtor();
}

void SEleSendRecord::SharedDtor() {
}

void SEleSendRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SEleSendRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SEleSendRecord& SEleSendRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SEleSendRecord.base);
  return *internal_default_instance();
}


void SEleSendRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SEleSendRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool SEleSendRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SEleSendRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 DeviceID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &deviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 UserID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 StateTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &statetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 EndTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &endtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 SRoleId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sroleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SEleSendRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SEleSendRecord)
  return false;
#undef DO_
}

void SEleSendRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SEleSendRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 DeviceID = 2;
  if (this->deviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->deviceid(), output);
  }

  // int64 time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->time(), output);
  }

  // uint64 UserID = 4;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->userid(), output);
  }

  // int32 State = 5;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->state(), output);
  }

  // int64 StateTime = 6;
  if (this->statetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->statetime(), output);
  }

  // int64 EndTime = 7;
  if (this->endtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->endtime(), output);
  }

  // uint64 SRoleId = 8;
  if (this->sroleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->sroleid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SEleSendRecord)
}

::google::protobuf::uint8* SEleSendRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SEleSendRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 DeviceID = 2;
  if (this->deviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->deviceid(), target);
  }

  // int64 time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->time(), target);
  }

  // uint64 UserID = 4;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->userid(), target);
  }

  // int32 State = 5;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->state(), target);
  }

  // int64 StateTime = 6;
  if (this->statetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->statetime(), target);
  }

  // int64 EndTime = 7;
  if (this->endtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->endtime(), target);
  }

  // uint64 SRoleId = 8;
  if (this->sroleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->sroleid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SEleSendRecord)
  return target;
}

size_t SEleSendRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SEleSendRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 DeviceID = 2;
  if (this->deviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->deviceid());
  }

  // int64 time = 3;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // uint64 UserID = 4;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // int64 StateTime = 6;
  if (this->statetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->statetime());
  }

  // int64 EndTime = 7;
  if (this->endtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->endtime());
  }

  // uint64 SRoleId = 8;
  if (this->sroleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sroleid());
  }

  // int32 State = 5;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SEleSendRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SEleSendRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SEleSendRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SEleSendRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SEleSendRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SEleSendRecord)
    MergeFrom(*source);
  }
}

void SEleSendRecord::MergeFrom(const SEleSendRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SEleSendRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.deviceid() != 0) {
    set_deviceid(from.deviceid());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.statetime() != 0) {
    set_statetime(from.statetime());
  }
  if (from.endtime() != 0) {
    set_endtime(from.endtime());
  }
  if (from.sroleid() != 0) {
    set_sroleid(from.sroleid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SEleSendRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SEleSendRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SEleSendRecord::CopyFrom(const SEleSendRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SEleSendRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SEleSendRecord::IsInitialized() const {
  return true;
}

void SEleSendRecord::Swap(SEleSendRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SEleSendRecord::InternalSwap(SEleSendRecord* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(deviceid_, other->deviceid_);
  swap(time_, other->time_);
  swap(userid_, other->userid_);
  swap(statetime_, other->statetime_);
  swap(endtime_, other->endtime_);
  swap(sroleid_, other->sroleid_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SEleSendRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFramMechanism::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFramMechanism::kSMechanismlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFramMechanism::SFramMechanism()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFramMechanism.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFramMechanism)
}
SFramMechanism::SFramMechanism(const SFramMechanism& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      smechanismlist_(from.smechanismlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFramMechanism)
}

void SFramMechanism::SharedCtor() {
}

SFramMechanism::~SFramMechanism() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFramMechanism)
  SharedDtor();
}

void SFramMechanism::SharedDtor() {
}

void SFramMechanism::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFramMechanism::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFramMechanism& SFramMechanism::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFramMechanism.base);
  return *internal_default_instance();
}


void SFramMechanism::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFramMechanism)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  smechanismlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFramMechanism::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFramMechanism)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SMechanism SMechanismlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_smechanismlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFramMechanism)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFramMechanism)
  return false;
#undef DO_
}

void SFramMechanism::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFramMechanism)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SMechanism SMechanismlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->smechanismlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->smechanismlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFramMechanism)
}

::google::protobuf::uint8* SFramMechanism::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFramMechanism)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SMechanism SMechanismlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->smechanismlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->smechanismlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFramMechanism)
  return target;
}

size_t SFramMechanism::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFramMechanism)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SMechanism SMechanismlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->smechanismlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->smechanismlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFramMechanism::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFramMechanism)
  GOOGLE_DCHECK_NE(&from, this);
  const SFramMechanism* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFramMechanism>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFramMechanism)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFramMechanism)
    MergeFrom(*source);
  }
}

void SFramMechanism::MergeFrom(const SFramMechanism& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFramMechanism)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  smechanismlist_.MergeFrom(from.smechanismlist_);
}

void SFramMechanism::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFramMechanism)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFramMechanism::CopyFrom(const SFramMechanism& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFramMechanism)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFramMechanism::IsInitialized() const {
  return true;
}

void SFramMechanism::Swap(SFramMechanism* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFramMechanism::InternalSwap(SFramMechanism* other) {
  using std::swap;
  CastToBase(&smechanismlist_)->InternalSwap(CastToBase(&other->smechanismlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFramMechanism::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SMechanism::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SMechanism::kIdFieldNumber;
const int SMechanism::kNumberFieldNumber;
const int SMechanism::kNameFieldNumber;
const int SMechanism::kFmechFieldNumber;
const int SMechanism::kLvlFieldNumber;
const int SMechanism::kTypeFieldNumber;
const int SMechanism::kStateFieldNumber;
const int SMechanism::kConfigFieldNumber;
const int SMechanism::kUserNameFieldNumber;
const int SMechanism::kPhoneFieldNumber;
const int SMechanism::kAddressFieldNumber;
const int SMechanism::kRemarkFieldNumber;
const int SMechanism::kPictureUrlFieldNumber;
const int SMechanism::kCallUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SMechanism::SMechanism()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SMechanism.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SMechanism)
}
SMechanism::SMechanism(const SMechanism& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark().size() > 0) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  pictureurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pictureurl().size() > 0) {
    pictureurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pictureurl_);
  }
  callurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callurl().size() > 0) {
    callurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callurl_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&config_) -
    reinterpret_cast<char*>(&id_)) + sizeof(config_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SMechanism)
}

void SMechanism::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pictureurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&id_)) + sizeof(config_));
}

SMechanism::~SMechanism() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SMechanism)
  SharedDtor();
}

void SMechanism::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pictureurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SMechanism::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SMechanism::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SMechanism& SMechanism::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SMechanism.base);
  return *internal_default_instance();
}


void SMechanism::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SMechanism)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pictureurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&id_)) + sizeof(config_));
  _internal_metadata_.Clear();
}

bool SMechanism::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SMechanism)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SMechanism.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 fmech = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fmech_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 lvl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lvl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 config = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &config_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userName = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SMechanism.userName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SMechanism.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SMechanism.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark().data(), static_cast<int>(this->remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SMechanism.remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PictureUrl = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pictureurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pictureurl().data(), static_cast<int>(this->pictureurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SMechanism.PictureUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CallUrl = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callurl().data(), static_cast<int>(this->callurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SMechanism.CallUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SMechanism)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SMechanism)
  return false;
#undef DO_
}

void SMechanism::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SMechanism)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // int32 Number = 2;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->number(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SMechanism.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // uint64 fmech = 4;
  if (this->fmech() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->fmech(), output);
  }

  // int32 lvl = 5;
  if (this->lvl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->lvl(), output);
  }

  // int32 type = 6;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->type(), output);
  }

  // int32 State = 7;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->state(), output);
  }

  // int32 config = 8;
  if (this->config() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->config(), output);
  }

  // string userName = 9;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SMechanism.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->username(), output);
  }

  // string phone = 10;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SMechanism.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->phone(), output);
  }

  // string address = 11;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SMechanism.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->address(), output);
  }

  // string remark = 12;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SMechanism.remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->remark(), output);
  }

  // string PictureUrl = 13;
  if (this->pictureurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pictureurl().data(), static_cast<int>(this->pictureurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SMechanism.PictureUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->pictureurl(), output);
  }

  // string CallUrl = 14;
  if (this->callurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callurl().data(), static_cast<int>(this->callurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SMechanism.CallUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->callurl(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SMechanism)
}

::google::protobuf::uint8* SMechanism::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SMechanism)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // int32 Number = 2;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->number(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SMechanism.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // uint64 fmech = 4;
  if (this->fmech() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->fmech(), target);
  }

  // int32 lvl = 5;
  if (this->lvl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->lvl(), target);
  }

  // int32 type = 6;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->type(), target);
  }

  // int32 State = 7;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->state(), target);
  }

  // int32 config = 8;
  if (this->config() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->config(), target);
  }

  // string userName = 9;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SMechanism.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->username(), target);
  }

  // string phone = 10;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SMechanism.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->phone(), target);
  }

  // string address = 11;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SMechanism.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->address(), target);
  }

  // string remark = 12;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SMechanism.remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->remark(), target);
  }

  // string PictureUrl = 13;
  if (this->pictureurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pictureurl().data(), static_cast<int>(this->pictureurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SMechanism.PictureUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->pictureurl(), target);
  }

  // string CallUrl = 14;
  if (this->callurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callurl().data(), static_cast<int>(this->callurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SMechanism.CallUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->callurl(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SMechanism)
  return target;
}

size_t SMechanism::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SMechanism)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string userName = 9;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string phone = 10;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // string address = 11;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string remark = 12;
  if (this->remark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark());
  }

  // string PictureUrl = 13;
  if (this->pictureurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pictureurl());
  }

  // string CallUrl = 14;
  if (this->callurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callurl());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 Number = 2;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());
  }

  // int32 lvl = 5;
  if (this->lvl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lvl());
  }

  // uint64 fmech = 4;
  if (this->fmech() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->fmech());
  }

  // int32 type = 6;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 State = 7;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int32 config = 8;
  if (this->config() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->config());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SMechanism::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SMechanism)
  GOOGLE_DCHECK_NE(&from, this);
  const SMechanism* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SMechanism>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SMechanism)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SMechanism)
    MergeFrom(*source);
  }
}

void SMechanism::MergeFrom(const SMechanism& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SMechanism)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.remark().size() > 0) {

    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  if (from.pictureurl().size() > 0) {

    pictureurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pictureurl_);
  }
  if (from.callurl().size() > 0) {

    callurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callurl_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
  if (from.lvl() != 0) {
    set_lvl(from.lvl());
  }
  if (from.fmech() != 0) {
    set_fmech(from.fmech());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.config() != 0) {
    set_config(from.config());
  }
}

void SMechanism::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SMechanism)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SMechanism::CopyFrom(const SMechanism& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SMechanism)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMechanism::IsInitialized() const {
  return true;
}

void SMechanism::Swap(SMechanism* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SMechanism::InternalSwap(SMechanism* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phone_.Swap(&other->phone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remark_.Swap(&other->remark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pictureurl_.Swap(&other->pictureurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  callurl_.Swap(&other->callurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(number_, other->number_);
  swap(lvl_, other->lvl_);
  swap(fmech_, other->fmech_);
  swap(type_, other->type_);
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SMechanism::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFramPswKeyRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFramPswKeyRecord::kSPswKeyRecordlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFramPswKeyRecord::SFramPswKeyRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFramPswKeyRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFramPswKeyRecord)
}
SFramPswKeyRecord::SFramPswKeyRecord(const SFramPswKeyRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      spswkeyrecordlist_(from.spswkeyrecordlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFramPswKeyRecord)
}

void SFramPswKeyRecord::SharedCtor() {
}

SFramPswKeyRecord::~SFramPswKeyRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFramPswKeyRecord)
  SharedDtor();
}

void SFramPswKeyRecord::SharedDtor() {
}

void SFramPswKeyRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFramPswKeyRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFramPswKeyRecord& SFramPswKeyRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFramPswKeyRecord.base);
  return *internal_default_instance();
}


void SFramPswKeyRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFramPswKeyRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spswkeyrecordlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFramPswKeyRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFramPswKeyRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SPswKeyRecord SPswKeyRecordlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_spswkeyrecordlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFramPswKeyRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFramPswKeyRecord)
  return false;
#undef DO_
}

void SFramPswKeyRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFramPswKeyRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SPswKeyRecord SPswKeyRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spswkeyrecordlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->spswkeyrecordlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFramPswKeyRecord)
}

::google::protobuf::uint8* SFramPswKeyRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFramPswKeyRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SPswKeyRecord SPswKeyRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spswkeyrecordlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->spswkeyrecordlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFramPswKeyRecord)
  return target;
}

size_t SFramPswKeyRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFramPswKeyRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SPswKeyRecord SPswKeyRecordlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->spswkeyrecordlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->spswkeyrecordlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFramPswKeyRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFramPswKeyRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SFramPswKeyRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFramPswKeyRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFramPswKeyRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFramPswKeyRecord)
    MergeFrom(*source);
  }
}

void SFramPswKeyRecord::MergeFrom(const SFramPswKeyRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFramPswKeyRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  spswkeyrecordlist_.MergeFrom(from.spswkeyrecordlist_);
}

void SFramPswKeyRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFramPswKeyRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFramPswKeyRecord::CopyFrom(const SFramPswKeyRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFramPswKeyRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFramPswKeyRecord::IsInitialized() const {
  return true;
}

void SFramPswKeyRecord::Swap(SFramPswKeyRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFramPswKeyRecord::InternalSwap(SFramPswKeyRecord* other) {
  using std::swap;
  CastToBase(&spswkeyrecordlist_)->InternalSwap(CastToBase(&other->spswkeyrecordlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFramPswKeyRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SPswKeyRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SPswKeyRecord::kIdFieldNumber;
const int SPswKeyRecord::kUseridFieldNumber;
const int SPswKeyRecord::kTimeFieldNumber;
const int SPswKeyRecord::kDeviceIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SPswKeyRecord::SPswKeyRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SPswKeyRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SPswKeyRecord)
}
SPswKeyRecord::SPswKeyRecord(const SPswKeyRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&deviceid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(deviceid_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SPswKeyRecord)
}

void SPswKeyRecord::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deviceid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(deviceid_));
}

SPswKeyRecord::~SPswKeyRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SPswKeyRecord)
  SharedDtor();
}

void SPswKeyRecord::SharedDtor() {
}

void SPswKeyRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SPswKeyRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SPswKeyRecord& SPswKeyRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SPswKeyRecord.base);
  return *internal_default_instance();
}


void SPswKeyRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SPswKeyRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deviceid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(deviceid_));
  _internal_metadata_.Clear();
}

bool SPswKeyRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SPswKeyRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 deviceID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &deviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SPswKeyRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SPswKeyRecord)
  return false;
#undef DO_
}

void SPswKeyRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SPswKeyRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->userid(), output);
  }

  // int64 time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->time(), output);
  }

  // uint64 deviceID = 4;
  if (this->deviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->deviceid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SPswKeyRecord)
}

::google::protobuf::uint8* SPswKeyRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SPswKeyRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->userid(), target);
  }

  // int64 time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->time(), target);
  }

  // uint64 deviceID = 4;
  if (this->deviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->deviceid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SPswKeyRecord)
  return target;
}

size_t SPswKeyRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SPswKeyRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  // int64 time = 3;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // uint64 deviceID = 4;
  if (this->deviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->deviceid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SPswKeyRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SPswKeyRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SPswKeyRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SPswKeyRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SPswKeyRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SPswKeyRecord)
    MergeFrom(*source);
  }
}

void SPswKeyRecord::MergeFrom(const SPswKeyRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SPswKeyRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.deviceid() != 0) {
    set_deviceid(from.deviceid());
  }
}

void SPswKeyRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SPswKeyRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SPswKeyRecord::CopyFrom(const SPswKeyRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SPswKeyRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SPswKeyRecord::IsInitialized() const {
  return true;
}

void SPswKeyRecord::Swap(SPswKeyRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SPswKeyRecord::InternalSwap(SPswKeyRecord* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(userid_, other->userid_);
  swap(time_, other->time_);
  swap(deviceid_, other->deviceid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SPswKeyRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFramPswSendRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFramPswSendRecord::kSPswSendRecordlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFramPswSendRecord::SFramPswSendRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFramPswSendRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFramPswSendRecord)
}
SFramPswSendRecord::SFramPswSendRecord(const SFramPswSendRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      spswsendrecordlist_(from.spswsendrecordlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFramPswSendRecord)
}

void SFramPswSendRecord::SharedCtor() {
}

SFramPswSendRecord::~SFramPswSendRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFramPswSendRecord)
  SharedDtor();
}

void SFramPswSendRecord::SharedDtor() {
}

void SFramPswSendRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFramPswSendRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFramPswSendRecord& SFramPswSendRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFramPswSendRecord.base);
  return *internal_default_instance();
}


void SFramPswSendRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFramPswSendRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spswsendrecordlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFramPswSendRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFramPswSendRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SPswSendRecord SPswSendRecordlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_spswsendrecordlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFramPswSendRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFramPswSendRecord)
  return false;
#undef DO_
}

void SFramPswSendRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFramPswSendRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SPswSendRecord SPswSendRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spswsendrecordlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->spswsendrecordlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFramPswSendRecord)
}

::google::protobuf::uint8* SFramPswSendRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFramPswSendRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SPswSendRecord SPswSendRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spswsendrecordlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->spswsendrecordlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFramPswSendRecord)
  return target;
}

size_t SFramPswSendRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFramPswSendRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SPswSendRecord SPswSendRecordlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->spswsendrecordlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->spswsendrecordlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFramPswSendRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFramPswSendRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SFramPswSendRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFramPswSendRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFramPswSendRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFramPswSendRecord)
    MergeFrom(*source);
  }
}

void SFramPswSendRecord::MergeFrom(const SFramPswSendRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFramPswSendRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  spswsendrecordlist_.MergeFrom(from.spswsendrecordlist_);
}

void SFramPswSendRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFramPswSendRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFramPswSendRecord::CopyFrom(const SFramPswSendRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFramPswSendRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFramPswSendRecord::IsInitialized() const {
  return true;
}

void SFramPswSendRecord::Swap(SFramPswSendRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFramPswSendRecord::InternalSwap(SFramPswSendRecord* other) {
  using std::swap;
  CastToBase(&spswsendrecordlist_)->InternalSwap(CastToBase(&other->spswsendrecordlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFramPswSendRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SPswSendRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SPswSendRecord::kIdFieldNumber;
const int SPswSendRecord::kPswIDFieldNumber;
const int SPswSendRecord::kTimeFieldNumber;
const int SPswSendRecord::kStateFieldNumber;
const int SPswSendRecord::kPhoneFieldNumber;
const int SPswSendRecord::kSRoleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SPswSendRecord::SPswSendRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SPswSendRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SPswSendRecord)
}
SPswSendRecord::SPswSendRecord(const SPswSendRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SPswSendRecord)
}

void SPswSendRecord::SharedCtor() {
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

SPswSendRecord::~SPswSendRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SPswSendRecord)
  SharedDtor();
}

void SPswSendRecord::SharedDtor() {
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SPswSendRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SPswSendRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SPswSendRecord& SPswSendRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SPswSendRecord.base);
  return *internal_default_instance();
}


void SPswSendRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SPswSendRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool SPswSendRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SPswSendRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 pswID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pswid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SPswSendRecord.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 SRoleId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sroleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SPswSendRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SPswSendRecord)
  return false;
#undef DO_
}

void SPswSendRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SPswSendRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 pswID = 2;
  if (this->pswid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->pswid(), output);
  }

  // int64 time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->time(), output);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  // string phone = 5;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SPswSendRecord.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->phone(), output);
  }

  // uint64 SRoleId = 6;
  if (this->sroleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->sroleid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SPswSendRecord)
}

::google::protobuf::uint8* SPswSendRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SPswSendRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 pswID = 2;
  if (this->pswid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->pswid(), target);
  }

  // int64 time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->time(), target);
  }

  // int32 State = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  // string phone = 5;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SPswSendRecord.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->phone(), target);
  }

  // uint64 SRoleId = 6;
  if (this->sroleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->sroleid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SPswSendRecord)
  return target;
}

size_t SPswSendRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SPswSendRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string phone = 5;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 pswID = 2;
  if (this->pswid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pswid());
  }

  // int64 time = 3;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // uint64 SRoleId = 6;
  if (this->sroleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sroleid());
  }

  // int32 State = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SPswSendRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SPswSendRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SPswSendRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SPswSendRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SPswSendRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SPswSendRecord)
    MergeFrom(*source);
  }
}

void SPswSendRecord::MergeFrom(const SPswSendRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SPswSendRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.pswid() != 0) {
    set_pswid(from.pswid());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.sroleid() != 0) {
    set_sroleid(from.sroleid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void SPswSendRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SPswSendRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SPswSendRecord::CopyFrom(const SPswSendRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SPswSendRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SPswSendRecord::IsInitialized() const {
  return true;
}

void SPswSendRecord::Swap(SPswSendRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SPswSendRecord::InternalSwap(SPswSendRecord* other) {
  using std::swap;
  phone_.Swap(&other->phone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(pswid_, other->pswid_);
  swap(time_, other->time_);
  swap(sroleid_, other->sroleid_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SPswSendRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFramRoleinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFramRoleinfo::kSRoleinfolistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFramRoleinfo::SFramRoleinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFramRoleinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFramRoleinfo)
}
SFramRoleinfo::SFramRoleinfo(const SFramRoleinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sroleinfolist_(from.sroleinfolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFramRoleinfo)
}

void SFramRoleinfo::SharedCtor() {
}

SFramRoleinfo::~SFramRoleinfo() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFramRoleinfo)
  SharedDtor();
}

void SFramRoleinfo::SharedDtor() {
}

void SFramRoleinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFramRoleinfo::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFramRoleinfo& SFramRoleinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFramRoleinfo.base);
  return *internal_default_instance();
}


void SFramRoleinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFramRoleinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sroleinfolist_.Clear();
  _internal_metadata_.Clear();
}

bool SFramRoleinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFramRoleinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SRoleinfo SRoleinfolist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sroleinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFramRoleinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFramRoleinfo)
  return false;
#undef DO_
}

void SFramRoleinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFramRoleinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SRoleinfo SRoleinfolist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sroleinfolist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sroleinfolist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFramRoleinfo)
}

::google::protobuf::uint8* SFramRoleinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFramRoleinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SRoleinfo SRoleinfolist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sroleinfolist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sroleinfolist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFramRoleinfo)
  return target;
}

size_t SFramRoleinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFramRoleinfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SRoleinfo SRoleinfolist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sroleinfolist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sroleinfolist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFramRoleinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFramRoleinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SFramRoleinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFramRoleinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFramRoleinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFramRoleinfo)
    MergeFrom(*source);
  }
}

void SFramRoleinfo::MergeFrom(const SFramRoleinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFramRoleinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sroleinfolist_.MergeFrom(from.sroleinfolist_);
}

void SFramRoleinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFramRoleinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFramRoleinfo::CopyFrom(const SFramRoleinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFramRoleinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFramRoleinfo::IsInitialized() const {
  return true;
}

void SFramRoleinfo::Swap(SFramRoleinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFramRoleinfo::InternalSwap(SFramRoleinfo* other) {
  using std::swap;
  CastToBase(&sroleinfolist_)->InternalSwap(CastToBase(&other->sroleinfolist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFramRoleinfo::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SRoleinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SRoleinfo::kIdFieldNumber;
const int SRoleinfo::kNameFieldNumber;
const int SRoleinfo::kCardIDFieldNumber;
const int SRoleinfo::kPhoneFieldNumber;
const int SRoleinfo::kSexFieldNumber;
const int SRoleinfo::kBirthdayFieldNumber;
const int SRoleinfo::kLoginTimeFieldNumber;
const int SRoleinfo::kRegtimeFieldNumber;
const int SRoleinfo::kCreateUserIDFieldNumber;
const int SRoleinfo::kStateFieldNumber;
const int SRoleinfo::kPwdFieldNumber;
const int SRoleinfo::kCountryCodeFieldNumber;
const int SRoleinfo::kRegisTrationFieldNumber;
const int SRoleinfo::kEmailFieldNumber;
const int SRoleinfo::kRemarkFieldNumber;
const int SRoleinfo::kIdentycodeFieldNumber;
const int SRoleinfo::kAppTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SRoleinfo::SRoleinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SRoleinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SRoleinfo)
}
SRoleinfo::SRoleinfo(const SRoleinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  cardid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cardid().size() > 0) {
    cardid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cardid_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pwd().size() > 0) {
    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  registration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.registration().size() > 0) {
    registration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registration_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark().size() > 0) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&identycode_) -
    reinterpret_cast<char*>(&id_)) + sizeof(identycode_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SRoleinfo)
}

void SRoleinfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cardid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&identycode_) -
      reinterpret_cast<char*>(&id_)) + sizeof(identycode_));
}

SRoleinfo::~SRoleinfo() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SRoleinfo)
  SharedDtor();
}

void SRoleinfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cardid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registration_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SRoleinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SRoleinfo::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SRoleinfo& SRoleinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SRoleinfo.base);
  return *internal_default_instance();
}


void SRoleinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SRoleinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cardid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registration_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&identycode_) -
      reinterpret_cast<char*>(&id_)) + sizeof(identycode_));
  _internal_metadata_.Clear();
}

bool SRoleinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SRoleinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SRoleinfo.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CardID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cardid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cardid().data(), static_cast<int>(this->cardid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SRoleinfo.CardID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SRoleinfo.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sex = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Birthday = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &birthday_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 LoginTime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &logintime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Regtime = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &regtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 CreateUserID = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &createuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pwd = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pwd().data(), static_cast<int>(this->pwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SRoleinfo.pwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 CountryCode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &countrycode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RegisTration = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_registration()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->registration().data(), static_cast<int>(this->registration().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SRoleinfo.RegisTration"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Email = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SRoleinfo.Email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark().data(), static_cast<int>(this->remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SRoleinfo.remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Identycode = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &identycode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 AppType = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SRoleinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SRoleinfo)
  return false;
#undef DO_
}

void SRoleinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SRoleinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SRoleinfo.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string CardID = 3;
  if (this->cardid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cardid().data(), static_cast<int>(this->cardid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SRoleinfo.CardID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cardid(), output);
  }

  // string phone = 4;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SRoleinfo.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->phone(), output);
  }

  // int32 sex = 5;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sex(), output);
  }

  // int32 Birthday = 7;
  if (this->birthday() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->birthday(), output);
  }

  // int64 LoginTime = 8;
  if (this->logintime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->logintime(), output);
  }

  // int64 Regtime = 9;
  if (this->regtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->regtime(), output);
  }

  // uint64 CreateUserID = 10;
  if (this->createuserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->createuserid(), output);
  }

  // int32 state = 11;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->state(), output);
  }

  // string pwd = 12;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), static_cast<int>(this->pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SRoleinfo.pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->pwd(), output);
  }

  // uint64 CountryCode = 13;
  if (this->countrycode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->countrycode(), output);
  }

  // string RegisTration = 14;
  if (this->registration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->registration().data(), static_cast<int>(this->registration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SRoleinfo.RegisTration");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->registration(), output);
  }

  // string Email = 15;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SRoleinfo.Email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->email(), output);
  }

  // string remark = 16;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SRoleinfo.remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->remark(), output);
  }

  // uint64 Identycode = 17;
  if (this->identycode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(17, this->identycode(), output);
  }

  // int32 AppType = 18;
  if (this->apptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->apptype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SRoleinfo)
}

::google::protobuf::uint8* SRoleinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SRoleinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SRoleinfo.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string CardID = 3;
  if (this->cardid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cardid().data(), static_cast<int>(this->cardid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SRoleinfo.CardID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cardid(), target);
  }

  // string phone = 4;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SRoleinfo.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->phone(), target);
  }

  // int32 sex = 5;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sex(), target);
  }

  // int32 Birthday = 7;
  if (this->birthday() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->birthday(), target);
  }

  // int64 LoginTime = 8;
  if (this->logintime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->logintime(), target);
  }

  // int64 Regtime = 9;
  if (this->regtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->regtime(), target);
  }

  // uint64 CreateUserID = 10;
  if (this->createuserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->createuserid(), target);
  }

  // int32 state = 11;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->state(), target);
  }

  // string pwd = 12;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), static_cast<int>(this->pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SRoleinfo.pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->pwd(), target);
  }

  // uint64 CountryCode = 13;
  if (this->countrycode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->countrycode(), target);
  }

  // string RegisTration = 14;
  if (this->registration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->registration().data(), static_cast<int>(this->registration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SRoleinfo.RegisTration");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->registration(), target);
  }

  // string Email = 15;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SRoleinfo.Email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->email(), target);
  }

  // string remark = 16;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SRoleinfo.remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->remark(), target);
  }

  // uint64 Identycode = 17;
  if (this->identycode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(17, this->identycode(), target);
  }

  // int32 AppType = 18;
  if (this->apptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->apptype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SRoleinfo)
  return target;
}

size_t SRoleinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SRoleinfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string CardID = 3;
  if (this->cardid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cardid());
  }

  // string phone = 4;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // string pwd = 12;
  if (this->pwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pwd());
  }

  // string RegisTration = 14;
  if (this->registration().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->registration());
  }

  // string Email = 15;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string remark = 16;
  if (this->remark().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 sex = 5;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  // int32 Birthday = 7;
  if (this->birthday() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->birthday());
  }

  // int64 LoginTime = 8;
  if (this->logintime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->logintime());
  }

  // int64 Regtime = 9;
  if (this->regtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->regtime());
  }

  // uint64 CreateUserID = 10;
  if (this->createuserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->createuserid());
  }

  // uint64 CountryCode = 13;
  if (this->countrycode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->countrycode());
  }

  // int32 state = 11;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int32 AppType = 18;
  if (this->apptype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apptype());
  }

  // uint64 Identycode = 17;
  if (this->identycode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->identycode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SRoleinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SRoleinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SRoleinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SRoleinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SRoleinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SRoleinfo)
    MergeFrom(*source);
  }
}

void SRoleinfo::MergeFrom(const SRoleinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SRoleinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.cardid().size() > 0) {

    cardid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cardid_);
  }
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.pwd().size() > 0) {

    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  if (from.registration().size() > 0) {

    registration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registration_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.remark().size() > 0) {

    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.birthday() != 0) {
    set_birthday(from.birthday());
  }
  if (from.logintime() != 0) {
    set_logintime(from.logintime());
  }
  if (from.regtime() != 0) {
    set_regtime(from.regtime());
  }
  if (from.createuserid() != 0) {
    set_createuserid(from.createuserid());
  }
  if (from.countrycode() != 0) {
    set_countrycode(from.countrycode());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.apptype() != 0) {
    set_apptype(from.apptype());
  }
  if (from.identycode() != 0) {
    set_identycode(from.identycode());
  }
}

void SRoleinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SRoleinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SRoleinfo::CopyFrom(const SRoleinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SRoleinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SRoleinfo::IsInitialized() const {
  return true;
}

void SRoleinfo::Swap(SRoleinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SRoleinfo::InternalSwap(SRoleinfo* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cardid_.Swap(&other->cardid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phone_.Swap(&other->phone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pwd_.Swap(&other->pwd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  registration_.Swap(&other->registration_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remark_.Swap(&other->remark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(sex_, other->sex_);
  swap(birthday_, other->birthday_);
  swap(logintime_, other->logintime_);
  swap(regtime_, other->regtime_);
  swap(createuserid_, other->createuserid_);
  swap(countrycode_, other->countrycode_);
  swap(state_, other->state_);
  swap(apptype_, other->apptype_);
  swap(identycode_, other->identycode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SRoleinfo::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFramRoleType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFramRoleType::kSRoleTypelistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFramRoleType::SFramRoleType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFramRoleType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFramRoleType)
}
SFramRoleType::SFramRoleType(const SFramRoleType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sroletypelist_(from.sroletypelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFramRoleType)
}

void SFramRoleType::SharedCtor() {
}

SFramRoleType::~SFramRoleType() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFramRoleType)
  SharedDtor();
}

void SFramRoleType::SharedDtor() {
}

void SFramRoleType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFramRoleType::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFramRoleType& SFramRoleType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFramRoleType.base);
  return *internal_default_instance();
}


void SFramRoleType::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFramRoleType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sroletypelist_.Clear();
  _internal_metadata_.Clear();
}

bool SFramRoleType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFramRoleType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SRoleType SRoleTypelist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sroletypelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFramRoleType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFramRoleType)
  return false;
#undef DO_
}

void SFramRoleType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFramRoleType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SRoleType SRoleTypelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sroletypelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sroletypelist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFramRoleType)
}

::google::protobuf::uint8* SFramRoleType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFramRoleType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SRoleType SRoleTypelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sroletypelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sroletypelist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFramRoleType)
  return target;
}

size_t SFramRoleType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFramRoleType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SRoleType SRoleTypelist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sroletypelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sroletypelist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFramRoleType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFramRoleType)
  GOOGLE_DCHECK_NE(&from, this);
  const SFramRoleType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFramRoleType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFramRoleType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFramRoleType)
    MergeFrom(*source);
  }
}

void SFramRoleType::MergeFrom(const SFramRoleType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFramRoleType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sroletypelist_.MergeFrom(from.sroletypelist_);
}

void SFramRoleType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFramRoleType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFramRoleType::CopyFrom(const SFramRoleType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFramRoleType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFramRoleType::IsInitialized() const {
  return true;
}

void SFramRoleType::Swap(SFramRoleType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFramRoleType::InternalSwap(SFramRoleType* other) {
  using std::swap;
  CastToBase(&sroletypelist_)->InternalSwap(CastToBase(&other->sroletypelist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFramRoleType::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SRoleType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SRoleType::kIdFieldNumber;
const int SRoleType::kNameFieldNumber;
const int SRoleType::kAuthorityFieldNumber;
const int SRoleType::kStateFieldNumber;
const int SRoleType::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SRoleType::SRoleType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SRoleType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SRoleType)
}
SRoleType::SRoleType(const SRoleType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SRoleType)
}

void SRoleType::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

SRoleType::~SRoleType() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SRoleType)
  SharedDtor();
}

void SRoleType::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SRoleType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SRoleType::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SRoleType& SRoleType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SRoleType.base);
  return *internal_default_instance();
}


void SRoleType::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SRoleType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool SRoleType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SRoleType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SRoleType.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 authority = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &authority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SRoleType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SRoleType)
  return false;
#undef DO_
}

void SRoleType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SRoleType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SRoleType.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // uint64 authority = 3;
  if (this->authority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->authority(), output);
  }

  // int32 state = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state(), output);
  }

  // int32 Type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SRoleType)
}

::google::protobuf::uint8* SRoleType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SRoleType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SRoleType.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // uint64 authority = 3;
  if (this->authority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->authority(), target);
  }

  // int32 state = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state(), target);
  }

  // int32 Type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SRoleType)
  return target;
}

size_t SRoleType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SRoleType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 authority = 3;
  if (this->authority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->authority());
  }

  // int32 state = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int32 Type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SRoleType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SRoleType)
  GOOGLE_DCHECK_NE(&from, this);
  const SRoleType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SRoleType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SRoleType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SRoleType)
    MergeFrom(*source);
  }
}

void SRoleType::MergeFrom(const SRoleType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SRoleType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.authority() != 0) {
    set_authority(from.authority());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void SRoleType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SRoleType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SRoleType::CopyFrom(const SRoleType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SRoleType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SRoleType::IsInitialized() const {
  return true;
}

void SRoleType::Swap(SRoleType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SRoleType::InternalSwap(SRoleType* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(authority_, other->authority_);
  swap(state_, other->state_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SRoleType::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFramToolAuthority::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFramToolAuthority::kSToolAuthoritylistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFramToolAuthority::SFramToolAuthority()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFramToolAuthority.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFramToolAuthority)
}
SFramToolAuthority::SFramToolAuthority(const SFramToolAuthority& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stoolauthoritylist_(from.stoolauthoritylist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFramToolAuthority)
}

void SFramToolAuthority::SharedCtor() {
}

SFramToolAuthority::~SFramToolAuthority() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFramToolAuthority)
  SharedDtor();
}

void SFramToolAuthority::SharedDtor() {
}

void SFramToolAuthority::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFramToolAuthority::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFramToolAuthority& SFramToolAuthority::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFramToolAuthority.base);
  return *internal_default_instance();
}


void SFramToolAuthority::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFramToolAuthority)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stoolauthoritylist_.Clear();
  _internal_metadata_.Clear();
}

bool SFramToolAuthority::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFramToolAuthority)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SToolAuthority SToolAuthoritylist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stoolauthoritylist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFramToolAuthority)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFramToolAuthority)
  return false;
#undef DO_
}

void SFramToolAuthority::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFramToolAuthority)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SToolAuthority SToolAuthoritylist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stoolauthoritylist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->stoolauthoritylist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFramToolAuthority)
}

::google::protobuf::uint8* SFramToolAuthority::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFramToolAuthority)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SToolAuthority SToolAuthoritylist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stoolauthoritylist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->stoolauthoritylist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFramToolAuthority)
  return target;
}

size_t SFramToolAuthority::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFramToolAuthority)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SToolAuthority SToolAuthoritylist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->stoolauthoritylist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stoolauthoritylist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFramToolAuthority::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFramToolAuthority)
  GOOGLE_DCHECK_NE(&from, this);
  const SFramToolAuthority* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFramToolAuthority>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFramToolAuthority)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFramToolAuthority)
    MergeFrom(*source);
  }
}

void SFramToolAuthority::MergeFrom(const SFramToolAuthority& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFramToolAuthority)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stoolauthoritylist_.MergeFrom(from.stoolauthoritylist_);
}

void SFramToolAuthority::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFramToolAuthority)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFramToolAuthority::CopyFrom(const SFramToolAuthority& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFramToolAuthority)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFramToolAuthority::IsInitialized() const {
  return true;
}

void SFramToolAuthority::Swap(SFramToolAuthority* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFramToolAuthority::InternalSwap(SFramToolAuthority* other) {
  using std::swap;
  CastToBase(&stoolauthoritylist_)->InternalSwap(CastToBase(&other->stoolauthoritylist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFramToolAuthority::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SToolAuthority::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SToolAuthority::kIdFieldNumber;
const int SToolAuthority::kNameFieldNumber;
const int SToolAuthority::kValueFieldNumber;
const int SToolAuthority::kToolTypeFieldNumber;
const int SToolAuthority::kFIDFieldNumber;
const int SToolAuthority::kUrlFieldNumber;
const int SToolAuthority::kSortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SToolAuthority::SToolAuthority()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SToolAuthority.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SToolAuthority)
}
SToolAuthority::SToolAuthority(const SToolAuthority& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&sort_) -
    reinterpret_cast<char*>(&id_)) + sizeof(sort_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SToolAuthority)
}

void SToolAuthority::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sort_) -
      reinterpret_cast<char*>(&id_)) + sizeof(sort_));
}

SToolAuthority::~SToolAuthority() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SToolAuthority)
  SharedDtor();
}

void SToolAuthority::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SToolAuthority::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SToolAuthority::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SToolAuthority& SToolAuthority::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SToolAuthority.base);
  return *internal_default_instance();
}


void SToolAuthority::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SToolAuthority)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sort_) -
      reinterpret_cast<char*>(&id_)) + sizeof(sort_));
  _internal_metadata_.Clear();
}

bool SToolAuthority::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SToolAuthority)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SToolAuthority.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ToolType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tooltype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 FID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Url = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SToolAuthority.Url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sort = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sort_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SToolAuthority)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SToolAuthority)
  return false;
#undef DO_
}

void SToolAuthority::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SToolAuthority)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SToolAuthority.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // uint64 value = 3;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->value(), output);
  }

  // int32 ToolType = 4;
  if (this->tooltype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->tooltype(), output);
  }

  // uint64 FID = 5;
  if (this->fid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->fid(), output);
  }

  // string Url = 6;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SToolAuthority.Url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->url(), output);
  }

  // int32 sort = 7;
  if (this->sort() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->sort(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SToolAuthority)
}

::google::protobuf::uint8* SToolAuthority::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SToolAuthority)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SToolAuthority.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // uint64 value = 3;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->value(), target);
  }

  // int32 ToolType = 4;
  if (this->tooltype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->tooltype(), target);
  }

  // uint64 FID = 5;
  if (this->fid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->fid(), target);
  }

  // string Url = 6;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SToolAuthority.Url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->url(), target);
  }

  // int32 sort = 7;
  if (this->sort() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->sort(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SToolAuthority)
  return target;
}

size_t SToolAuthority::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SToolAuthority)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Url = 6;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 value = 3;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());
  }

  // uint64 FID = 5;
  if (this->fid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->fid());
  }

  // int32 ToolType = 4;
  if (this->tooltype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tooltype());
  }

  // int32 sort = 7;
  if (this->sort() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sort());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SToolAuthority::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SToolAuthority)
  GOOGLE_DCHECK_NE(&from, this);
  const SToolAuthority* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SToolAuthority>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SToolAuthority)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SToolAuthority)
    MergeFrom(*source);
  }
}

void SToolAuthority::MergeFrom(const SToolAuthority& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SToolAuthority)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.fid() != 0) {
    set_fid(from.fid());
  }
  if (from.tooltype() != 0) {
    set_tooltype(from.tooltype());
  }
  if (from.sort() != 0) {
    set_sort(from.sort());
  }
}

void SToolAuthority::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SToolAuthority)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SToolAuthority::CopyFrom(const SToolAuthority& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SToolAuthority)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SToolAuthority::IsInitialized() const {
  return true;
}

void SToolAuthority::Swap(SToolAuthority* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SToolAuthority::InternalSwap(SToolAuthority* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(value_, other->value_);
  swap(fid_, other->fid_);
  swap(tooltype_, other->tooltype_);
  swap(sort_, other->sort_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SToolAuthority::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFramUseRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFramUseRecord::kSUseRecordlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFramUseRecord::SFramUseRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFramUseRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFramUseRecord)
}
SFramUseRecord::SFramUseRecord(const SFramUseRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      suserecordlist_(from.suserecordlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFramUseRecord)
}

void SFramUseRecord::SharedCtor() {
}

SFramUseRecord::~SFramUseRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFramUseRecord)
  SharedDtor();
}

void SFramUseRecord::SharedDtor() {
}

void SFramUseRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFramUseRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFramUseRecord& SFramUseRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFramUseRecord.base);
  return *internal_default_instance();
}


void SFramUseRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFramUseRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserecordlist_.Clear();
  _internal_metadata_.Clear();
}

bool SFramUseRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFramUseRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SUseRecord SUseRecordlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_suserecordlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFramUseRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFramUseRecord)
  return false;
#undef DO_
}

void SFramUseRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFramUseRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SUseRecord SUseRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suserecordlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->suserecordlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFramUseRecord)
}

::google::protobuf::uint8* SFramUseRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFramUseRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SUseRecord SUseRecordlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suserecordlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->suserecordlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFramUseRecord)
  return target;
}

size_t SFramUseRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFramUseRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SUseRecord SUseRecordlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->suserecordlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->suserecordlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFramUseRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFramUseRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SFramUseRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFramUseRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFramUseRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFramUseRecord)
    MergeFrom(*source);
  }
}

void SFramUseRecord::MergeFrom(const SFramUseRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFramUseRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  suserecordlist_.MergeFrom(from.suserecordlist_);
}

void SFramUseRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFramUseRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFramUseRecord::CopyFrom(const SFramUseRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFramUseRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFramUseRecord::IsInitialized() const {
  return true;
}

void SFramUseRecord::Swap(SFramUseRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFramUseRecord::InternalSwap(SFramUseRecord* other) {
  using std::swap;
  CastToBase(&suserecordlist_)->InternalSwap(CastToBase(&other->suserecordlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFramUseRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SUseRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SUseRecord::kIdFieldNumber;
const int SUseRecord::kUserFieldNumber;
const int SUseRecord::kMacFieldNumber;
const int SUseRecord::kUsetypeFieldNumber;
const int SUseRecord::kUsertimeFieldNumber;
const int SUseRecord::kUptimeFieldNumber;
const int SUseRecord::kLogTypeFieldNumber;
const int SUseRecord::kCarTypeFieldNumber;
const int SUseRecord::kRemarkFieldNumber;
const int SUseRecord::kGwMacFieldNumber;
const int SUseRecord::kAreaDeviceIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SUseRecord::SUseRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SUseRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SUseRecord)
}
SUseRecord::SUseRecord(const SUseRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user().size() > 0) {
    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac().size() > 0) {
    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark().size() > 0) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  gwmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gwmac().size() > 0) {
    gwmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gwmac_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cartype_) -
    reinterpret_cast<char*>(&id_)) + sizeof(cartype_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SUseRecord)
}

void SUseRecord::SharedCtor() {
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gwmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cartype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(cartype_));
}

SUseRecord::~SUseRecord() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SUseRecord)
  SharedDtor();
}

void SUseRecord::SharedDtor() {
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gwmac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SUseRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SUseRecord::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SUseRecord& SUseRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SUseRecord.base);
  return *internal_default_instance();
}


void SUseRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SUseRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gwmac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cartype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(cartype_));
  _internal_metadata_.Clear();
}

bool SUseRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SUseRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string User = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user().data(), static_cast<int>(this->user().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SUseRecord.User"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Mac = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac().data(), static_cast<int>(this->mac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SUseRecord.Mac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 usetype = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 usertime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &usertime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 uptime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uptime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LogType = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CarType = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cartype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark().data(), static_cast<int>(this->remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SUseRecord.remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string GwMac = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gwmac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gwmac().data(), static_cast<int>(this->gwmac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SUseRecord.GwMac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 AreaDeviceID = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &areadeviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SUseRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SUseRecord)
  return false;
#undef DO_
}

void SUseRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SUseRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string User = 2;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUseRecord.User");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user(), output);
  }

  // string Mac = 3;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUseRecord.Mac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mac(), output);
  }

  // int32 usetype = 4;
  if (this->usetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->usetype(), output);
  }

  // int64 usertime = 5;
  if (this->usertime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->usertime(), output);
  }

  // int64 uptime = 6;
  if (this->uptime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->uptime(), output);
  }

  // int32 LogType = 7;
  if (this->logtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->logtype(), output);
  }

  // int32 CarType = 8;
  if (this->cartype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->cartype(), output);
  }

  // string remark = 9;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUseRecord.remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->remark(), output);
  }

  // string GwMac = 10;
  if (this->gwmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gwmac().data(), static_cast<int>(this->gwmac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUseRecord.GwMac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->gwmac(), output);
  }

  // uint64 AreaDeviceID = 11;
  if (this->areadeviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->areadeviceid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SUseRecord)
}

::google::protobuf::uint8* SUseRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SUseRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string User = 2;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUseRecord.User");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user(), target);
  }

  // string Mac = 3;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUseRecord.Mac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mac(), target);
  }

  // int32 usetype = 4;
  if (this->usetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->usetype(), target);
  }

  // int64 usertime = 5;
  if (this->usertime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->usertime(), target);
  }

  // int64 uptime = 6;
  if (this->uptime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->uptime(), target);
  }

  // int32 LogType = 7;
  if (this->logtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->logtype(), target);
  }

  // int32 CarType = 8;
  if (this->cartype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->cartype(), target);
  }

  // string remark = 9;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUseRecord.remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->remark(), target);
  }

  // string GwMac = 10;
  if (this->gwmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gwmac().data(), static_cast<int>(this->gwmac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUseRecord.GwMac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->gwmac(), target);
  }

  // uint64 AreaDeviceID = 11;
  if (this->areadeviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->areadeviceid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SUseRecord)
  return target;
}

size_t SUseRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SUseRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string User = 2;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  // string Mac = 3;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac());
  }

  // string remark = 9;
  if (this->remark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark());
  }

  // string GwMac = 10;
  if (this->gwmac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gwmac());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int64 usertime = 5;
  if (this->usertime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->usertime());
  }

  // int32 usetype = 4;
  if (this->usetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->usetype());
  }

  // int32 LogType = 7;
  if (this->logtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logtype());
  }

  // int64 uptime = 6;
  if (this->uptime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uptime());
  }

  // uint64 AreaDeviceID = 11;
  if (this->areadeviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->areadeviceid());
  }

  // int32 CarType = 8;
  if (this->cartype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cartype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SUseRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SUseRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const SUseRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SUseRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SUseRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SUseRecord)
    MergeFrom(*source);
  }
}

void SUseRecord::MergeFrom(const SUseRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SUseRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  if (from.mac().size() > 0) {

    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  if (from.remark().size() > 0) {

    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  if (from.gwmac().size() > 0) {

    gwmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gwmac_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.usertime() != 0) {
    set_usertime(from.usertime());
  }
  if (from.usetype() != 0) {
    set_usetype(from.usetype());
  }
  if (from.logtype() != 0) {
    set_logtype(from.logtype());
  }
  if (from.uptime() != 0) {
    set_uptime(from.uptime());
  }
  if (from.areadeviceid() != 0) {
    set_areadeviceid(from.areadeviceid());
  }
  if (from.cartype() != 0) {
    set_cartype(from.cartype());
  }
}

void SUseRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SUseRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SUseRecord::CopyFrom(const SUseRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SUseRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SUseRecord::IsInitialized() const {
  return true;
}

void SUseRecord::Swap(SUseRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SUseRecord::InternalSwap(SUseRecord* other) {
  using std::swap;
  user_.Swap(&other->user_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mac_.Swap(&other->mac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remark_.Swap(&other->remark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gwmac_.Swap(&other->gwmac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(usertime_, other->usertime_);
  swap(usetype_, other->usetype_);
  swap(logtype_, other->logtype_);
  swap(uptime_, other->uptime_);
  swap(areadeviceid_, other->areadeviceid_);
  swap(cartype_, other->cartype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SUseRecord::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFramUserinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFramUserinfo::kSUserinfolistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFramUserinfo::SFramUserinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFramUserinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFramUserinfo)
}
SFramUserinfo::SFramUserinfo(const SFramUserinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      suserinfolist_(from.suserinfolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFramUserinfo)
}

void SFramUserinfo::SharedCtor() {
}

SFramUserinfo::~SFramUserinfo() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFramUserinfo)
  SharedDtor();
}

void SFramUserinfo::SharedDtor() {
}

void SFramUserinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFramUserinfo::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFramUserinfo& SFramUserinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFramUserinfo.base);
  return *internal_default_instance();
}


void SFramUserinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFramUserinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suserinfolist_.Clear();
  _internal_metadata_.Clear();
}

bool SFramUserinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFramUserinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerProtocol.SUserinfo SUserinfolist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_suserinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFramUserinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFramUserinfo)
  return false;
#undef DO_
}

void SFramUserinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFramUserinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SUserinfo SUserinfolist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suserinfolist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->suserinfolist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFramUserinfo)
}

::google::protobuf::uint8* SFramUserinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFramUserinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ServerProtocol.SUserinfo SUserinfolist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->suserinfolist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->suserinfolist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFramUserinfo)
  return target;
}

size_t SFramUserinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFramUserinfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ServerProtocol.SUserinfo SUserinfolist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->suserinfolist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->suserinfolist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFramUserinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFramUserinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SFramUserinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFramUserinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFramUserinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFramUserinfo)
    MergeFrom(*source);
  }
}

void SFramUserinfo::MergeFrom(const SFramUserinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFramUserinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  suserinfolist_.MergeFrom(from.suserinfolist_);
}

void SFramUserinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFramUserinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFramUserinfo::CopyFrom(const SFramUserinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFramUserinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFramUserinfo::IsInitialized() const {
  return true;
}

void SFramUserinfo::Swap(SFramUserinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFramUserinfo::InternalSwap(SFramUserinfo* other) {
  using std::swap;
  CastToBase(&suserinfolist_)->InternalSwap(CastToBase(&other->suserinfolist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFramUserinfo::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SUserinfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SUserinfo::kIdFieldNumber;
const int SUserinfo::kNameFieldNumber;
const int SUserinfo::kCardIDFieldNumber;
const int SUserinfo::kPhoneFieldNumber;
const int SUserinfo::kSexFieldNumber;
const int SUserinfo::kTypeFieldNumber;
const int SUserinfo::kBirthdayFieldNumber;
const int SUserinfo::kLoginTimeFieldNumber;
const int SUserinfo::kRegtimeFieldNumber;
const int SUserinfo::kStateFieldNumber;
const int SUserinfo::kPwdFieldNumber;
const int SUserinfo::kIcoFieldNumber;
const int SUserinfo::kRemarkFieldNumber;
const int SUserinfo::kCountryCodeFieldNumber;
const int SUserinfo::kRegisTrationFieldNumber;
const int SUserinfo::kEmailFieldNumber;
const int SUserinfo::kUpdateStateFieldNumber;
const int SUserinfo::kTokenFieldNumber;
const int SUserinfo::kTokenTimeFieldNumber;
const int SUserinfo::kLoginEquipFieldNumber;
const int SUserinfo::kFaceUrlFieldNumber;
const int SUserinfo::kFaceConditionUrlFieldNumber;
const int SUserinfo::kUpFaceImageTimeFieldNumber;
const int SUserinfo::kHMConditionFieldNumber;
const int SUserinfo::kAppTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SUserinfo::SUserinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SUserinfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SUserinfo)
}
SUserinfo::SUserinfo(const SUserinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  cardid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cardid().size() > 0) {
    cardid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cardid_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pwd().size() > 0) {
    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  ico_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ico().size() > 0) {
    ico_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ico_);
  }
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remark().size() > 0) {
    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  registration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.registration().size() > 0) {
    registration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registration_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  loginequip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.loginequip().size() > 0) {
    loginequip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loginequip_);
  }
  faceurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.faceurl().size() > 0) {
    faceurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.faceurl_);
  }
  faceconditionurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.faceconditionurl().size() > 0) {
    faceconditionurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.faceconditionurl_);
  }
  hmcondition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hmcondition().size() > 0) {
    hmcondition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hmcondition_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&upfaceimagetime_) -
    reinterpret_cast<char*>(&id_)) + sizeof(upfaceimagetime_));
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SUserinfo)
}

void SUserinfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cardid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ico_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loginequip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  faceurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  faceconditionurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hmcondition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upfaceimagetime_) -
      reinterpret_cast<char*>(&id_)) + sizeof(upfaceimagetime_));
}

SUserinfo::~SUserinfo() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SUserinfo)
  SharedDtor();
}

void SUserinfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cardid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ico_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registration_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loginequip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  faceurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  faceconditionurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hmcondition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SUserinfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SUserinfo::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SUserinfo& SUserinfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SUserinfo.base);
  return *internal_default_instance();
}


void SUserinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SUserinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cardid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ico_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registration_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loginequip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  faceurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  faceconditionurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hmcondition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upfaceimagetime_) -
      reinterpret_cast<char*>(&id_)) + sizeof(upfaceimagetime_));
  _internal_metadata_.Clear();
}

bool SUserinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SUserinfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SUserinfo.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CardID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cardid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cardid().data(), static_cast<int>(this->cardid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SUserinfo.CardID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SUserinfo.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sex = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Birthday = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &birthday_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 LoginTime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &logintime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Regtime = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &regtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 State = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pwd = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pwd().data(), static_cast<int>(this->pwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SUserinfo.pwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Ico = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ico()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ico().data(), static_cast<int>(this->ico().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SUserinfo.Ico"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remark = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark().data(), static_cast<int>(this->remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SUserinfo.remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 CountryCode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &countrycode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RegisTration = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_registration()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->registration().data(), static_cast<int>(this->registration().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SUserinfo.RegisTration"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Email = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SUserinfo.Email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 UpdateState = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &updatestate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Token = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SUserinfo.Token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 TokenTime = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tokentime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LoginEquip = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_loginequip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->loginequip().data(), static_cast<int>(this->loginequip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SUserinfo.LoginEquip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string FaceUrl = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_faceurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->faceurl().data(), static_cast<int>(this->faceurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SUserinfo.FaceUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string FaceConditionUrl = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_faceconditionurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->faceconditionurl().data(), static_cast<int>(this->faceconditionurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SUserinfo.FaceConditionUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 UpFaceImageTime = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &upfaceimagetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string HMCondition = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hmcondition()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hmcondition().data(), static_cast<int>(this->hmcondition().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SUserinfo.HMCondition"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 AppType = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &apptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SUserinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SUserinfo)
  return false;
#undef DO_
}

void SUserinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SUserinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string CardID = 3;
  if (this->cardid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cardid().data(), static_cast<int>(this->cardid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.CardID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cardid(), output);
  }

  // string phone = 4;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->phone(), output);
  }

  // int32 sex = 5;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sex(), output);
  }

  // int32 type = 6;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->type(), output);
  }

  // int32 Birthday = 7;
  if (this->birthday() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->birthday(), output);
  }

  // int64 LoginTime = 8;
  if (this->logintime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->logintime(), output);
  }

  // int64 Regtime = 9;
  if (this->regtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->regtime(), output);
  }

  // int32 State = 10;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->state(), output);
  }

  // string pwd = 11;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), static_cast<int>(this->pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->pwd(), output);
  }

  // string Ico = 12;
  if (this->ico().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ico().data(), static_cast<int>(this->ico().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.Ico");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->ico(), output);
  }

  // string remark = 13;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->remark(), output);
  }

  // uint64 CountryCode = 14;
  if (this->countrycode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->countrycode(), output);
  }

  // string RegisTration = 15;
  if (this->registration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->registration().data(), static_cast<int>(this->registration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.RegisTration");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->registration(), output);
  }

  // string Email = 16;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.Email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->email(), output);
  }

  // int32 UpdateState = 17;
  if (this->updatestate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->updatestate(), output);
  }

  // string Token = 18;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.Token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->token(), output);
  }

  // int64 TokenTime = 19;
  if (this->tokentime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(19, this->tokentime(), output);
  }

  // string LoginEquip = 20;
  if (this->loginequip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loginequip().data(), static_cast<int>(this->loginequip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.LoginEquip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->loginequip(), output);
  }

  // string FaceUrl = 21;
  if (this->faceurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->faceurl().data(), static_cast<int>(this->faceurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.FaceUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->faceurl(), output);
  }

  // string FaceConditionUrl = 22;
  if (this->faceconditionurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->faceconditionurl().data(), static_cast<int>(this->faceconditionurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.FaceConditionUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->faceconditionurl(), output);
  }

  // int64 UpFaceImageTime = 23;
  if (this->upfaceimagetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(23, this->upfaceimagetime(), output);
  }

  // string HMCondition = 24;
  if (this->hmcondition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hmcondition().data(), static_cast<int>(this->hmcondition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.HMCondition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->hmcondition(), output);
  }

  // int32 AppType = 25;
  if (this->apptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->apptype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SUserinfo)
}

::google::protobuf::uint8* SUserinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SUserinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string CardID = 3;
  if (this->cardid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cardid().data(), static_cast<int>(this->cardid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.CardID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cardid(), target);
  }

  // string phone = 4;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->phone(), target);
  }

  // int32 sex = 5;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sex(), target);
  }

  // int32 type = 6;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->type(), target);
  }

  // int32 Birthday = 7;
  if (this->birthday() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->birthday(), target);
  }

  // int64 LoginTime = 8;
  if (this->logintime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->logintime(), target);
  }

  // int64 Regtime = 9;
  if (this->regtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->regtime(), target);
  }

  // int32 State = 10;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->state(), target);
  }

  // string pwd = 11;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), static_cast<int>(this->pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->pwd(), target);
  }

  // string Ico = 12;
  if (this->ico().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ico().data(), static_cast<int>(this->ico().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.Ico");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->ico(), target);
  }

  // string remark = 13;
  if (this->remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark().data(), static_cast<int>(this->remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->remark(), target);
  }

  // uint64 CountryCode = 14;
  if (this->countrycode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->countrycode(), target);
  }

  // string RegisTration = 15;
  if (this->registration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->registration().data(), static_cast<int>(this->registration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.RegisTration");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->registration(), target);
  }

  // string Email = 16;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.Email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->email(), target);
  }

  // int32 UpdateState = 17;
  if (this->updatestate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->updatestate(), target);
  }

  // string Token = 18;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.Token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->token(), target);
  }

  // int64 TokenTime = 19;
  if (this->tokentime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(19, this->tokentime(), target);
  }

  // string LoginEquip = 20;
  if (this->loginequip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loginequip().data(), static_cast<int>(this->loginequip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.LoginEquip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->loginequip(), target);
  }

  // string FaceUrl = 21;
  if (this->faceurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->faceurl().data(), static_cast<int>(this->faceurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.FaceUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->faceurl(), target);
  }

  // string FaceConditionUrl = 22;
  if (this->faceconditionurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->faceconditionurl().data(), static_cast<int>(this->faceconditionurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.FaceConditionUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->faceconditionurl(), target);
  }

  // int64 UpFaceImageTime = 23;
  if (this->upfaceimagetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(23, this->upfaceimagetime(), target);
  }

  // string HMCondition = 24;
  if (this->hmcondition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hmcondition().data(), static_cast<int>(this->hmcondition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SUserinfo.HMCondition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->hmcondition(), target);
  }

  // int32 AppType = 25;
  if (this->apptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->apptype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SUserinfo)
  return target;
}

size_t SUserinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SUserinfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string CardID = 3;
  if (this->cardid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cardid());
  }

  // string phone = 4;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // string pwd = 11;
  if (this->pwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pwd());
  }

  // string Ico = 12;
  if (this->ico().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ico());
  }

  // string remark = 13;
  if (this->remark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remark());
  }

  // string RegisTration = 15;
  if (this->registration().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->registration());
  }

  // string Email = 16;
  if (this->email().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string Token = 18;
  if (this->token().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string LoginEquip = 20;
  if (this->loginequip().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->loginequip());
  }

  // string FaceUrl = 21;
  if (this->faceurl().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->faceurl());
  }

  // string FaceConditionUrl = 22;
  if (this->faceconditionurl().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->faceconditionurl());
  }

  // string HMCondition = 24;
  if (this->hmcondition().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hmcondition());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // int32 sex = 5;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  // int32 type = 6;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int64 LoginTime = 8;
  if (this->logintime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->logintime());
  }

  // int32 Birthday = 7;
  if (this->birthday() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->birthday());
  }

  // int32 State = 10;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  // int64 Regtime = 9;
  if (this->regtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->regtime());
  }

  // uint64 CountryCode = 14;
  if (this->countrycode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->countrycode());
  }

  // int64 TokenTime = 19;
  if (this->tokentime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tokentime());
  }

  // int32 UpdateState = 17;
  if (this->updatestate() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->updatestate());
  }

  // int32 AppType = 25;
  if (this->apptype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->apptype());
  }

  // int64 UpFaceImageTime = 23;
  if (this->upfaceimagetime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->upfaceimagetime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SUserinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SUserinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SUserinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SUserinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SUserinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SUserinfo)
    MergeFrom(*source);
  }
}

void SUserinfo::MergeFrom(const SUserinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SUserinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.cardid().size() > 0) {

    cardid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cardid_);
  }
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.pwd().size() > 0) {

    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  if (from.ico().size() > 0) {

    ico_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ico_);
  }
  if (from.remark().size() > 0) {

    remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remark_);
  }
  if (from.registration().size() > 0) {

    registration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registration_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.loginequip().size() > 0) {

    loginequip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loginequip_);
  }
  if (from.faceurl().size() > 0) {

    faceurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.faceurl_);
  }
  if (from.faceconditionurl().size() > 0) {

    faceconditionurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.faceconditionurl_);
  }
  if (from.hmcondition().size() > 0) {

    hmcondition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hmcondition_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.logintime() != 0) {
    set_logintime(from.logintime());
  }
  if (from.birthday() != 0) {
    set_birthday(from.birthday());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.regtime() != 0) {
    set_regtime(from.regtime());
  }
  if (from.countrycode() != 0) {
    set_countrycode(from.countrycode());
  }
  if (from.tokentime() != 0) {
    set_tokentime(from.tokentime());
  }
  if (from.updatestate() != 0) {
    set_updatestate(from.updatestate());
  }
  if (from.apptype() != 0) {
    set_apptype(from.apptype());
  }
  if (from.upfaceimagetime() != 0) {
    set_upfaceimagetime(from.upfaceimagetime());
  }
}

void SUserinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SUserinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SUserinfo::CopyFrom(const SUserinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SUserinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SUserinfo::IsInitialized() const {
  return true;
}

void SUserinfo::Swap(SUserinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SUserinfo::InternalSwap(SUserinfo* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cardid_.Swap(&other->cardid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phone_.Swap(&other->phone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pwd_.Swap(&other->pwd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ico_.Swap(&other->ico_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remark_.Swap(&other->remark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  registration_.Swap(&other->registration_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  loginequip_.Swap(&other->loginequip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  faceurl_.Swap(&other->faceurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  faceconditionurl_.Swap(&other->faceconditionurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hmcondition_.Swap(&other->hmcondition_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(sex_, other->sex_);
  swap(type_, other->type_);
  swap(logintime_, other->logintime_);
  swap(birthday_, other->birthday_);
  swap(state_, other->state_);
  swap(regtime_, other->regtime_);
  swap(countrycode_, other->countrycode_);
  swap(tokentime_, other->tokentime_);
  swap(updatestate_, other->updatestate_);
  swap(apptype_, other->apptype_);
  swap(upfaceimagetime_, other->upfaceimagetime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SUserinfo::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SFramShareKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SFramShareKey::kShareContextFieldNumber;
const int SFramShareKey::kPhoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SFramShareKey::SFramShareKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServerProtocol_2eproto::scc_info_SFramShareKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerProtocol.SFramShareKey)
}
SFramShareKey::SFramShareKey(const SFramShareKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sharecontext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sharecontext().size() > 0) {
    sharecontext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sharecontext_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  // @@protoc_insertion_point(copy_constructor:ServerProtocol.SFramShareKey)
}

void SFramShareKey::SharedCtor() {
  sharecontext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SFramShareKey::~SFramShareKey() {
  // @@protoc_insertion_point(destructor:ServerProtocol.SFramShareKey)
  SharedDtor();
}

void SFramShareKey::SharedDtor() {
  sharecontext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SFramShareKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SFramShareKey::descriptor() {
  ::protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SFramShareKey& SFramShareKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServerProtocol_2eproto::scc_info_SFramShareKey.base);
  return *internal_default_instance();
}


void SFramShareKey::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerProtocol.SFramShareKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sharecontext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SFramShareKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerProtocol.SFramShareKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ShareContext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sharecontext()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sharecontext().data(), static_cast<int>(this->sharecontext().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SFramShareKey.ShareContext"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Phone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerProtocol.SFramShareKey.Phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerProtocol.SFramShareKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerProtocol.SFramShareKey)
  return false;
#undef DO_
}

void SFramShareKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerProtocol.SFramShareKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ShareContext = 1;
  if (this->sharecontext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sharecontext().data(), static_cast<int>(this->sharecontext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFramShareKey.ShareContext");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sharecontext(), output);
  }

  // string Phone = 2;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFramShareKey.Phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phone(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerProtocol.SFramShareKey)
}

::google::protobuf::uint8* SFramShareKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerProtocol.SFramShareKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ShareContext = 1;
  if (this->sharecontext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sharecontext().data(), static_cast<int>(this->sharecontext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFramShareKey.ShareContext");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sharecontext(), target);
  }

  // string Phone = 2;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerProtocol.SFramShareKey.Phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phone(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerProtocol.SFramShareKey)
  return target;
}

size_t SFramShareKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerProtocol.SFramShareKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ShareContext = 1;
  if (this->sharecontext().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sharecontext());
  }

  // string Phone = 2;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SFramShareKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerProtocol.SFramShareKey)
  GOOGLE_DCHECK_NE(&from, this);
  const SFramShareKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SFramShareKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerProtocol.SFramShareKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerProtocol.SFramShareKey)
    MergeFrom(*source);
  }
}

void SFramShareKey::MergeFrom(const SFramShareKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerProtocol.SFramShareKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sharecontext().size() > 0) {

    sharecontext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sharecontext_);
  }
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
}

void SFramShareKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerProtocol.SFramShareKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SFramShareKey::CopyFrom(const SFramShareKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerProtocol.SFramShareKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SFramShareKey::IsInitialized() const {
  return true;
}

void SFramShareKey::Swap(SFramShareKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SFramShareKey::InternalSwap(SFramShareKey* other) {
  using std::swap;
  sharecontext_.Swap(&other->sharecontext_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phone_.Swap(&other->phone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SFramShareKey::GetMetadata() const {
  protobuf_ServerProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ServerProtocol
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SystemCode* Arena::CreateMaybeMessage< ::ServerProtocol::SystemCode >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SystemCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::H2SRequeseData* Arena::CreateMaybeMessage< ::ServerProtocol::H2SRequeseData >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::H2SRequeseData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameDeviceHeartRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameDeviceHeartRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameDeviceHeartRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::DeviceHeartRecord* Arena::CreateMaybeMessage< ::ServerProtocol::DeviceHeartRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::DeviceHeartRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameHmRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameHmRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameHmRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::HmRecord* Arena::CreateMaybeMessage< ::ServerProtocol::HmRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::HmRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameFirmwareVersion* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameFirmwareVersion >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameFirmwareVersion >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameFirmwareVersionAnswer* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameFirmwareVersionAnswer >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameFirmwareVersionAnswer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameNBAIOT* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameNBAIOT >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameNBAIOT >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameNBAIOTAnswer* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameNBAIOTAnswer >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameNBAIOTAnswer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameNBWhiteList* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameNBWhiteList >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameNBWhiteList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameNBWhiteListAnswer* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameNBWhiteListAnswer >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameNBWhiteListAnswer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameFaceRecognition* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameFaceRecognition >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameFaceRecognition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameFaceRecognitionAnswer* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameFaceRecognitionAnswer >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameFaceRecognitionAnswer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameJgPushRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameJgPushRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameJgPushRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::JgPushRecord* Arena::CreateMaybeMessage< ::ServerProtocol::JgPushRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::JgPushRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameVersionRangle* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameVersionRangle >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameVersionRangle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::VersionRangle* Arena::CreateMaybeMessage< ::ServerProtocol::VersionRangle >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::VersionRangle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameVersion* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameVersion >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameVersion >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::Version* Arena::CreateMaybeMessage< ::ServerProtocol::Version >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::Version >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameNoCreditEquip* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameNoCreditEquip >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameNoCreditEquip >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::NoCreditEquip* Arena::CreateMaybeMessage< ::ServerProtocol::NoCreditEquip >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::NoCreditEquip >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameKeyShareRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameKeyShareRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameKeyShareRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::KeyShareRecord* Arena::CreateMaybeMessage< ::ServerProtocol::KeyShareRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::KeyShareRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameDevTypeCribe* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameDevTypeCribe >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameDevTypeCribe >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::DevTypeCribe* Arena::CreateMaybeMessage< ::ServerProtocol::DevTypeCribe >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::DevTypeCribe >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameCountryCode* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameCountryCode >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameCountryCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::CountryCode* Arena::CreateMaybeMessage< ::ServerProtocol::CountryCode >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::CountryCode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameDeveloper* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameDeveloper >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameDeveloper >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::Developer* Arena::CreateMaybeMessage< ::ServerProtocol::Developer >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::Developer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameWebInterface* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameWebInterface >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameWebInterface >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::WebInterface* Arena::CreateMaybeMessage< ::ServerProtocol::WebInterface >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::WebInterface >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameTypeApiContrast* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameTypeApiContrast >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameTypeApiContrast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::TypeApiContrast* Arena::CreateMaybeMessage< ::ServerProtocol::TypeApiContrast >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::TypeApiContrast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameCardsAreaDeviceContrast* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameCardsAreaDeviceContrast >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameCardsAreaDeviceContrast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::CardsAreaDeviceContrast* Arena::CreateMaybeMessage< ::ServerProtocol::CardsAreaDeviceContrast >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::CardsAreaDeviceContrast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameCardRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameCardRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameCardRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::CardRecord* Arena::CreateMaybeMessage< ::ServerProtocol::CardRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::CardRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameManagersRoleContrast* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameManagersRoleContrast >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameManagersRoleContrast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::ManagersRoleContrast* Arena::CreateMaybeMessage< ::ServerProtocol::ManagersRoleContrast >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::ManagersRoleContrast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameFolderUpRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameFolderUpRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameFolderUpRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::FolderUpRecord* Arena::CreateMaybeMessage< ::ServerProtocol::FolderUpRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::FolderUpRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameFolderTree* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameFolderTree >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameFolderTree >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::FolderTree* Arena::CreateMaybeMessage< ::ServerProtocol::FolderTree >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::FolderTree >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameDeviceAlarm* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameDeviceAlarm >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameDeviceAlarm >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::DeviceAlarm* Arena::CreateMaybeMessage< ::ServerProtocol::DeviceAlarm >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::DeviceAlarm >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameDeviceAlarmProperty* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameDeviceAlarmProperty >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameDeviceAlarmProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::DeviceAlarmProperty* Arena::CreateMaybeMessage< ::ServerProtocol::DeviceAlarmProperty >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::DeviceAlarmProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameGwDeviceBindTemp* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameGwDeviceBindTemp >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameGwDeviceBindTemp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::GwDeviceBindTemp* Arena::CreateMaybeMessage< ::ServerProtocol::GwDeviceBindTemp >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::GwDeviceBindTemp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameDeviceDescribeInfo* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameDeviceDescribeInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameDeviceDescribeInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::DeviceDescribeInfo* Arena::CreateMaybeMessage< ::ServerProtocol::DeviceDescribeInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::DeviceDescribeInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SystemJGPush* Arena::CreateMaybeMessage< ::ServerProtocol::SystemJGPush >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SystemJGPush >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::FrameRegisterServer* Arena::CreateMaybeMessage< ::ServerProtocol::FrameRegisterServer >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::FrameRegisterServer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::FrameRegisterServerAnswer* Arena::CreateMaybeMessage< ::ServerProtocol::FrameRegisterServerAnswer >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::FrameRegisterServerAnswer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::FrameUserInfo* Arena::CreateMaybeMessage< ::ServerProtocol::FrameUserInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::FrameUserInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameGWDeviceContrast* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameGWDeviceContrast >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameGWDeviceContrast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SGWDeviceContrast* Arena::CreateMaybeMessage< ::ServerProtocol::SGWDeviceContrast >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SGWDeviceContrast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameDeviceFetNickName* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameDeviceFetNickName >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameDeviceFetNickName >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SDevFetNickName* Arena::CreateMaybeMessage< ::ServerProtocol::SDevFetNickName >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SDevFetNickName >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameDeviceFet* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameDeviceFet >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameDeviceFet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SDeviceFet* Arena::CreateMaybeMessage< ::ServerProtocol::SDeviceFet >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SDeviceFet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameDeviceProperty* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameDeviceProperty >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameDeviceProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SDeviceProperty* Arena::CreateMaybeMessage< ::ServerProtocol::SDeviceProperty >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SDeviceProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameAppRoleContrastInfo* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameAppRoleContrastInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameAppRoleContrastInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SAppRoleContrastInfo* Arena::CreateMaybeMessage< ::ServerProtocol::SAppRoleContrastInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SAppRoleContrastInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameAppRoleFunBaseInfo* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameAppRoleFunBaseInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameAppRoleFunBaseInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SAppRoleFunBaseInfo* Arena::CreateMaybeMessage< ::ServerProtocol::SAppRoleFunBaseInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SAppRoleFunBaseInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameRoleDeviceRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameRoleDeviceRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameRoleDeviceRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SRoleDeviceRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SRoleDeviceRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SRoleDeviceRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameItem* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameItem >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SItemInfo* Arena::CreateMaybeMessage< ::ServerProtocol::SItemInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SItemInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameAppRoleType* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameAppRoleType >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameAppRoleType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SAppRoleType* Arena::CreateMaybeMessage< ::ServerProtocol::SAppRoleType >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SAppRoleType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameAppRoleFun* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameAppRoleFun >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameAppRoleFun >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SAppRoleFun* Arena::CreateMaybeMessage< ::ServerProtocol::SAppRoleFun >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SAppRoleFun >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameDeviceGroup* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameDeviceGroup >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameDeviceGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SDeviceGroup* Arena::CreateMaybeMessage< ::ServerProtocol::SDeviceGroup >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SDeviceGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameAreabase* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameAreabase >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameAreabase >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SAreabaseinfo* Arena::CreateMaybeMessage< ::ServerProtocol::SAreabaseinfo >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SAreabaseinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameAreaDevice* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameAreaDevice >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameAreaDevice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SAreaDeviceinfo* Arena::CreateMaybeMessage< ::ServerProtocol::SAreaDeviceinfo >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SAreaDeviceinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameAreaUseRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameAreaUseRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameAreaUseRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SAreaUseRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SAreaUseRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SAreaUseRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameBuildPsw* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameBuildPsw >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameBuildPsw >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SBuildPsw* Arena::CreateMaybeMessage< ::ServerProtocol::SBuildPsw >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SBuildPsw >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameDeviceBase* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameDeviceBase >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameDeviceBase >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SDeviceBaseinfo* Arena::CreateMaybeMessage< ::ServerProtocol::SDeviceBaseinfo >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SDeviceBaseinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFrameDevicePassword* Arena::CreateMaybeMessage< ::ServerProtocol::SFrameDevicePassword >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFrameDevicePassword >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SDevicePassword* Arena::CreateMaybeMessage< ::ServerProtocol::SDevicePassword >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SDevicePassword >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFramEleSendRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SFramEleSendRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFramEleSendRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SEleSendRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SEleSendRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SEleSendRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFramMechanism* Arena::CreateMaybeMessage< ::ServerProtocol::SFramMechanism >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFramMechanism >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SMechanism* Arena::CreateMaybeMessage< ::ServerProtocol::SMechanism >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SMechanism >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFramPswKeyRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SFramPswKeyRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFramPswKeyRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SPswKeyRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SPswKeyRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SPswKeyRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFramPswSendRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SFramPswSendRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFramPswSendRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SPswSendRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SPswSendRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SPswSendRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFramRoleinfo* Arena::CreateMaybeMessage< ::ServerProtocol::SFramRoleinfo >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFramRoleinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SRoleinfo* Arena::CreateMaybeMessage< ::ServerProtocol::SRoleinfo >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SRoleinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFramRoleType* Arena::CreateMaybeMessage< ::ServerProtocol::SFramRoleType >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFramRoleType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SRoleType* Arena::CreateMaybeMessage< ::ServerProtocol::SRoleType >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SRoleType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFramToolAuthority* Arena::CreateMaybeMessage< ::ServerProtocol::SFramToolAuthority >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFramToolAuthority >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SToolAuthority* Arena::CreateMaybeMessage< ::ServerProtocol::SToolAuthority >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SToolAuthority >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFramUseRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SFramUseRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFramUseRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SUseRecord* Arena::CreateMaybeMessage< ::ServerProtocol::SUseRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SUseRecord >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFramUserinfo* Arena::CreateMaybeMessage< ::ServerProtocol::SFramUserinfo >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFramUserinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SUserinfo* Arena::CreateMaybeMessage< ::ServerProtocol::SUserinfo >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SUserinfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerProtocol::SFramShareKey* Arena::CreateMaybeMessage< ::ServerProtocol::SFramShareKey >(Arena* arena) {
  return Arena::CreateInternal< ::ServerProtocol::SFramShareKey >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
